{"version":3,"sources":["turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/shared/lib/page-path/normalize-path-sep.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/lib/is-app-route-route.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/lib/metadata/is-metadata-route.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/shared/lib/isomorphic/path.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/shared/lib/i18n/normalize-locale-path.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/shared/lib/router/utils/path-match.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/lib/constants.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/shared/lib/router/utils/interception-routes.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/shared/lib/escape-regexp.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/shared/lib/router/utils/remove-trailing-slash.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/shared/lib/router/utils/parse-loader-tree.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/shared/lib/router/utils/get-segment-param.tsx","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/shared/lib/router/utils/get-dynamic-param.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/shared/lib/router/utils/route-regex.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/shared/lib/utils.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/lib/route-pattern-normalizer.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/shared/lib/router/utils/route-match-utils.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/shared/lib/router/utils/route-matcher.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/shared/lib/router/utils/querystring.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/shared/lib/router/utils/parse-relative-url.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/shared/lib/router/utils/parse-url.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/server/api-utils/get-cookie-parser.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/shared/lib/router/utils/prepare-destination.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/server/web/utils.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/server/lib/decode-query-path-parameter.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/lib/url.ts","turbopack:///[project]/node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/shared/lib/router/utils/format-url.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/server/server-utils.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/lib/metadata/get-metadata-route.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-server-dom-turbopack-static.ts","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/client/components/layout-router.js/__nextjs-internal-proxy.cjs","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/src/client/components/layout-router.tsx","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/client/components/render-from-template-context.js/__nextjs-internal-proxy.cjs","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/src/client/components/render-from-template-context.tsx","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/client/components/client-page.js/__nextjs-internal-proxy.cjs","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/src/client/components/client-page.tsx","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/client/components/client-segment.js/__nextjs-internal-proxy.cjs","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/src/client/components/client-segment.tsx","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/client/components/http-access-fallback/error-boundary.js/__nextjs-internal-proxy.cjs","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/src/client/components/http-access-fallback/error-boundary.tsx","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/metadata/generate/icon-mark.js/__nextjs-internal-proxy.cjs","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/src/lib/metadata/generate/icon-mark.tsx","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/src/shared/lib/isomorphic/path.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/framework/boundary-components.js/__nextjs-internal-proxy.cjs","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/src/lib/framework/boundary-components.tsx","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/compiled/string-hash/index.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/compiled/safe-stable-stringify/index.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/client/components/hooks-server-context.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/client/components/static-generation-bailout.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/shared/lib/lazy-dynamic/bailout-to-csr.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/shared/lib/utils/reflect-utils.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/metadata/metadata.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/metadata/generate/utils.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/metadata/resolve-metadata.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/metadata/resolvers/resolve-url.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/metadata/resolvers/resolve-title.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/url.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/server/app-render/entry-base.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/server/lib/router-utils/is-postpone.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/server/app-render/rsc/preloads.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/server/app-render/create-error-handler.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/format-server-error.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/client/components/redirect-error.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/error-telemetry-utils.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/server/request/search-params.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/server/lib/clone-response.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/shared/lib/is-plain-object.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/interop-default.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/framework/boundary-constants.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/client/components/http-access-fallback/http-access-fallback.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/non-nullable.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/metadata/constants.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/server/dynamic-rendering-utils.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/metadata/default-metadata.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/shared/lib/promise-with-resolvers.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/server/create-deduped-by-callsite-server-error-logger.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/server/request/utils.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/metadata/generate/icons.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/server/app-render/collect-segment-data.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/is-error.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/shared/lib/segment-cache/segment-value-encoding.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/metadata/generate/opengraph.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/metadata/resolvers/resolve-basics.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/server/lib/patch-fetch.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/server/app-render/staged-rendering.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/server/app-render/react-large-shell-error.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/metadata/generate/alternate.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/metadata/generate/meta.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/metadata/resolvers/resolve-icons.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/metadata/resolvers/resolve-opengraph.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/metadata/generate/basic.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/server/request/pathname.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/server/lib/lazy-result.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/server/lib/dedupe-fetch.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/server/app-render/rsc/taint.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/client/components/is-next-router-error.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/server/request/params.js","turbopack:///[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/server/app-render/dynamic-rendering.js"],"sourcesContent":["/**\n * For a given page path, this function ensures that there is no backslash\n * escaping slashes in the path. Example:\n *  - `foo\\/bar\\/baz` -> `foo/bar/baz`\n */\nexport function normalizePathSep(path: string): string {\n  return path.replace(/\\\\/g, '/')\n}\n","export function isAppRouteRoute(route: string): boolean {\n  return route.endsWith('/route')\n}\n","import type { PageExtensions } from '../../build/page-extensions-type'\nimport { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { isAppRouteRoute } from '../is-app-route-route'\n\nexport const STATIC_METADATA_IMAGES = {\n  icon: {\n    filename: 'icon',\n    extensions: ['ico', 'jpg', 'jpeg', 'png', 'svg'],\n  },\n  apple: {\n    filename: 'apple-icon',\n    extensions: ['jpg', 'jpeg', 'png'],\n  },\n  favicon: {\n    filename: 'favicon',\n    extensions: ['ico'],\n  },\n  openGraph: {\n    filename: 'opengraph-image',\n    extensions: ['jpg', 'jpeg', 'png', 'gif'],\n  },\n  twitter: {\n    filename: 'twitter-image',\n    extensions: ['jpg', 'jpeg', 'png', 'gif'],\n  },\n} as const\n\n// Match routes that are metadata routes, e.g. /sitemap.xml, /favicon.<ext>, /<icon>.<ext>, etc.\n// TODO-METADATA: support more metadata routes with more extensions\nexport const DEFAULT_METADATA_ROUTE_EXTENSIONS = ['js', 'jsx', 'ts', 'tsx']\n\n// Match the file extension with the dynamic multi-routes extensions\n// e.g. ([xml, js], null) -> can match `/sitemap.xml/route`, `sitemap.js/route`\n// e.g. ([png], [ts]) -> can match `/opengraph-image.png`, `/opengraph-image.ts`\nexport const getExtensionRegexString = (\n  staticExtensions: readonly string[],\n  dynamicExtensions: readonly string[] | null\n) => {\n  let result: string\n  // If there's no possible multi dynamic routes, will not match any <name>[].<ext> files\n  if (!dynamicExtensions || dynamicExtensions.length === 0) {\n    result = `(\\\\.(?:${staticExtensions.join('|')}))`\n  } else {\n    result = `(?:\\\\.(${staticExtensions.join('|')})|(\\\\.(${dynamicExtensions.join('|')})))`\n  }\n  return result\n}\n\n/**\n * Matches the static metadata files, e.g. /robots.txt, /sitemap.xml, /favicon.ico, etc.\n * @param appDirRelativePath the relative file path to app/\n * @returns if the path is a static metadata file route\n */\nexport function isStaticMetadataFile(appDirRelativePath: string) {\n  return isMetadataRouteFile(appDirRelativePath, [], true)\n}\n\n// Pre-compiled static regexes for common cases\nconst FAVICON_REGEX = /^[\\\\/]favicon\\.ico$/\nconst ROBOTS_TXT_REGEX = /^[\\\\/]robots\\.txt$/\nconst MANIFEST_JSON_REGEX = /^[\\\\/]manifest\\.json$/\nconst MANIFEST_WEBMANIFEST_REGEX = /^[\\\\/]manifest\\.webmanifest$/\nconst SITEMAP_XML_REGEX = /[\\\\/]sitemap\\.xml$/\n\n// Cache for compiled regex patterns based on parameters\nconst compiledRegexCache = new Map<string, RegExp[]>()\n\n// Fast path checks for common metadata files\nfunction fastPathCheck(normalizedPath: string): boolean | null {\n  // Check favicon.ico first (most common)\n  if (FAVICON_REGEX.test(normalizedPath)) return true\n\n  // Check other common static files\n  if (ROBOTS_TXT_REGEX.test(normalizedPath)) return true\n  if (MANIFEST_JSON_REGEX.test(normalizedPath)) return true\n  if (MANIFEST_WEBMANIFEST_REGEX.test(normalizedPath)) return true\n  if (SITEMAP_XML_REGEX.test(normalizedPath)) return true\n\n  // Quick negative check - if it doesn't contain any metadata keywords, skip\n  if (\n    !normalizedPath.includes('robots') &&\n    !normalizedPath.includes('manifest') &&\n    !normalizedPath.includes('sitemap') &&\n    !normalizedPath.includes('icon') &&\n    !normalizedPath.includes('apple-icon') &&\n    !normalizedPath.includes('opengraph-image') &&\n    !normalizedPath.includes('twitter-image') &&\n    !normalizedPath.includes('favicon')\n  ) {\n    return false\n  }\n\n  return null // Continue with full regex matching\n}\n\nfunction getCompiledRegexes(\n  pageExtensions: PageExtensions,\n  strictlyMatchExtensions: boolean\n): RegExp[] {\n  // Create cache key\n  const cacheKey = `${pageExtensions.join(',')}|${strictlyMatchExtensions}`\n\n  const cached = compiledRegexCache.get(cacheKey)\n  if (cached) {\n    return cached\n  }\n\n  // Pre-compute common strings\n  const trailingMatcher = strictlyMatchExtensions ? '$' : '?$'\n  const variantsMatcher = '\\\\d?'\n  const groupSuffix = strictlyMatchExtensions ? '' : '(-\\\\w{6})?'\n  const suffixMatcher = variantsMatcher + groupSuffix\n\n  // Pre-compute extension arrays to avoid repeated concatenation\n  const robotsExts =\n    pageExtensions.length > 0 ? [...pageExtensions, 'txt'] : ['txt']\n  const manifestExts =\n    pageExtensions.length > 0\n      ? [...pageExtensions, 'webmanifest', 'json']\n      : ['webmanifest', 'json']\n\n  const regexes = [\n    new RegExp(\n      `^[\\\\\\\\/]robots${getExtensionRegexString(robotsExts, null)}${trailingMatcher}`\n    ),\n    new RegExp(\n      `^[\\\\\\\\/]manifest${getExtensionRegexString(manifestExts, null)}${trailingMatcher}`\n    ),\n    // FAVICON_REGEX removed - already handled in fastPathCheck\n    new RegExp(\n      `[\\\\\\\\/]sitemap${getExtensionRegexString(['xml'], pageExtensions)}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]icon${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.icon.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]apple-icon${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.apple.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]opengraph-image${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.openGraph.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]twitter-image${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.twitter.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n  ]\n\n  compiledRegexCache.set(cacheKey, regexes)\n  return regexes\n}\n\n/**\n * Determine if the file is a metadata route file entry\n * @param appDirRelativePath the relative file path to app/\n * @param pageExtensions the js extensions, such as ['js', 'jsx', 'ts', 'tsx']\n * @param strictlyMatchExtensions if it's true, match the file with page extension, otherwise match the file with default corresponding extension\n * @returns if the file is a metadata route file\n */\nexport function isMetadataRouteFile(\n  appDirRelativePath: string,\n  pageExtensions: PageExtensions,\n  strictlyMatchExtensions: boolean\n): boolean {\n  // Early exit for empty or obviously non-metadata paths\n  if (!appDirRelativePath || appDirRelativePath.length < 2) {\n    return false\n  }\n\n  const normalizedPath = normalizePathSep(appDirRelativePath)\n\n  // Fast path check for common cases\n  const fastResult = fastPathCheck(normalizedPath)\n  if (fastResult !== null) {\n    return fastResult\n  }\n\n  // Get compiled regexes from cache\n  const regexes = getCompiledRegexes(pageExtensions, strictlyMatchExtensions)\n\n  // Use for loop instead of .some() for better performance\n  for (let i = 0; i < regexes.length; i++) {\n    if (regexes[i].test(normalizedPath)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n// Check if the route is a static metadata route, with /route suffix\n// e.g. /favicon.ico/route, /icon.png/route, etc.\n// But skip the text routes like robots.txt since they might also be dynamic.\n// Checking route path is not enough to determine if text routes is dynamic.\nexport function isStaticMetadataRoute(route: string) {\n  // extract ext with regex\n  const pathname = route.replace(/\\/route$/, '')\n\n  const matched =\n    isAppRouteRoute(route) &&\n    isMetadataRouteFile(pathname, [], true) &&\n    // These routes can either be built by static or dynamic entrypoints,\n    // so we assume they're dynamic\n    pathname !== '/robots.txt' &&\n    pathname !== '/manifest.webmanifest' &&\n    !pathname.endsWith('/sitemap.xml')\n\n  return matched\n}\n\n/**\n * Determine if a page or pathname is a metadata page.\n *\n * The input is a page or pathname, which can be with or without page suffix /foo/page or /foo.\n * But it will not contain the /route suffix.\n *\n * .e.g\n * /robots -> true\n * /sitemap -> true\n * /foo -> false\n */\nexport function isMetadataPage(page: string) {\n  const matched = !isAppRouteRoute(page) && isMetadataRouteFile(page, [], false)\n\n  return matched\n}\n\n/*\n * Determine if a Next.js route is a metadata route.\n * `route` will has a route suffix.\n *\n * e.g.\n * /app/robots/route -> true\n * /robots/route -> true\n * /sitemap/[__metadata_id__]/route -> true\n * /app/sitemap/page -> false\n * /icon-a102f4/route -> true\n */\nexport function isMetadataRoute(route: string): boolean {\n  let page = normalizeAppPath(route)\n    .replace(/^\\/?app\\//, '')\n    // Remove the dynamic route id\n    .replace('/[__metadata_id__]', '')\n    // Remove the /route suffix\n    .replace(/\\/route$/, '')\n\n  if (page[0] !== '/') page = '/' + page\n\n  const matched = isAppRouteRoute(route) && isMetadataRouteFile(page, [], false)\n\n  return matched\n}\n","/**\n * This module is for next.js server internal usage of path module.\n * It will use native path module for nodejs runtime.\n * It will use path-browserify polyfill for edge runtime.\n */\nlet path\n\nif (process.env.NEXT_RUNTIME === 'edge') {\n  path = require('next/dist/compiled/path-browserify')\n} else {\n  path = require('path')\n}\n\nmodule.exports = path\n","export interface PathLocale {\n  detectedLocale?: string\n  pathname: string\n}\n\n/**\n * A cache of lowercased locales for each list of locales. This is stored as a\n * WeakMap so if the locales are garbage collected, the cache entry will be\n * removed as well.\n */\nconst cache = new WeakMap<readonly string[], readonly string[]>()\n\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */\nexport function normalizeLocalePath(\n  pathname: string,\n  locales?: readonly string[]\n): PathLocale {\n  // If locales is undefined, return the pathname as is.\n  if (!locales) return { pathname }\n\n  // Get the cached lowercased locales or create a new cache entry.\n  let lowercasedLocales = cache.get(locales)\n  if (!lowercasedLocales) {\n    lowercasedLocales = locales.map((locale) => locale.toLowerCase())\n    cache.set(locales, lowercasedLocales)\n  }\n\n  let detectedLocale: string | undefined\n\n  // The first segment will be empty, because it has a leading `/`. If\n  // there is no further segment, there is no locale (or it's the default).\n  const segments = pathname.split('/', 2)\n\n  // If there's no second segment (ie, the pathname is just `/`), there's no\n  // locale.\n  if (!segments[1]) return { pathname }\n\n  // The second segment will contain the locale part if any.\n  const segment = segments[1].toLowerCase()\n\n  // See if the segment matches one of the locales. If it doesn't, there is\n  // no locale (or it's the default).\n  const index = lowercasedLocales.indexOf(segment)\n  if (index < 0) return { pathname }\n\n  // Return the case-sensitive locale.\n  detectedLocale = locales[index]\n\n  // Remove the `/${locale}` part of the pathname.\n  pathname = pathname.slice(detectedLocale.length + 1) || '/'\n\n  return { pathname, detectedLocale }\n}\n","import type { Key } from 'next/dist/compiled/path-to-regexp'\nimport { regexpToFunction } from 'next/dist/compiled/path-to-regexp'\nimport { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\n\ninterface Options {\n  /**\n   * A transformer function that will be applied to the regexp generated\n   * from the provided path and path-to-regexp.\n   */\n  regexModifier?: (regex: string) => string\n  /**\n   * When true the function will remove all unnamed parameters\n   * from the matched parameters.\n   */\n  removeUnnamedParams?: boolean\n  /**\n   * When true the regexp won't allow an optional trailing delimiter\n   * to match.\n   */\n  strict?: boolean\n\n  /**\n   * When true the matcher will be case-sensitive, defaults to false\n   */\n  sensitive?: boolean\n}\n\nexport type PatchMatcher = (\n  pathname: string,\n  params?: Record<string, any>\n) => Record<string, any> | false\n\n/**\n * Generates a path matcher function for a given path and options based on\n * path-to-regexp. By default the match will be case insensitive, non strict\n * and delimited by `/`.\n */\nexport function getPathMatch(path: string, options?: Options): PatchMatcher {\n  const keys: Key[] = []\n  const regexp = pathToRegexp(path, keys, {\n    delimiter: '/',\n    sensitive:\n      typeof options?.sensitive === 'boolean' ? options.sensitive : false,\n    strict: options?.strict,\n  })\n\n  const matcher = regexpToFunction<Record<string, any>>(\n    options?.regexModifier\n      ? new RegExp(options.regexModifier(regexp.source), regexp.flags)\n      : regexp,\n    keys\n  )\n\n  /**\n   * A matcher function that will check if a given pathname matches the path\n   * given in the builder function. When the path does not match it will return\n   * `false` but if it does it will return an object with the matched params\n   * merged with the params provided in the second argument.\n   */\n  return (pathname, params) => {\n    // If no pathname is provided it's not a match.\n    if (typeof pathname !== 'string') return false\n\n    const match = matcher(pathname)\n\n    // If the path did not match `false` will be returned.\n    if (!match) return false\n\n    /**\n     * If unnamed params are not allowed they must be removed from\n     * the matched parameters. path-to-regexp uses \"string\" for named and\n     * \"number\" for unnamed parameters.\n     */\n    if (options?.removeUnnamedParams) {\n      for (const key of keys) {\n        if (typeof key.name === 'number') {\n          delete match.params[key.name]\n        }\n      }\n    }\n\n    return { ...params, ...match.params }\n  }\n}\n","import type { ServerRuntime } from '../types'\n\nexport const TEXT_PLAIN_CONTENT_TYPE_HEADER = 'text/plain'\nexport const HTML_CONTENT_TYPE_HEADER = 'text/html; charset=utf-8'\nexport const JSON_CONTENT_TYPE_HEADER = 'application/json; charset=utf-8'\nexport const NEXT_QUERY_PARAM_PREFIX = 'nxtP'\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI'\n\nexport const MATCHED_PATH_HEADER = 'x-matched-path'\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate'\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER =\n  'x-prerender-revalidate-if-generated'\n\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc'\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments'\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc'\nexport const RSC_SUFFIX = '.rsc'\nexport const ACTION_SUFFIX = '.action'\nexport const NEXT_DATA_SUFFIX = '.json'\nexport const NEXT_META_SUFFIX = '.meta'\nexport const NEXT_BODY_SUFFIX = '.body'\n\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags'\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags'\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER =\n  'x-next-revalidate-tag-token'\n\nexport const NEXT_RESUME_HEADER = 'next-resume'\n\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 128\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_'\n\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000\n\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe\n\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware'\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`\n\n// Patterns to detect proxy files (replacement for middleware)\nexport const PROXY_FILENAME = 'proxy'\nexport const PROXY_LOCATION_REGEXP = `(?:src/)?${PROXY_FILENAME}`\n\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation'\n\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages'\nexport const DOT_NEXT_ALIAS = 'private-dot-next'\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir'\nexport const APP_DIR_ALIAS = 'private-next-app-dir'\nexport const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy'\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate'\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference'\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper'\nexport const RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS =\n  'private-next-rsc-track-dynamic-import'\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption'\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS =\n  'private-next-rsc-action-client-wrapper'\n\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`\n\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`\n\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`\n\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`\n\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`\n\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`\n\nexport const GSP_NO_RETURNED_VALUE =\n  'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?'\nexport const GSSP_NO_RETURNED_VALUE =\n  'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?'\n\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR =\n  'The `unstable_revalidate` property is available for general use.\\n' +\n  'Please use `revalidate` instead.'\n\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`\n\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`\n\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`\n\nexport const ESLINT_DEFAULT_DIRS = ['app', 'pages', 'components', 'lib', 'src']\n\nexport const SERVER_RUNTIME: Record<string, ServerRuntime> = {\n  edge: 'edge',\n  experimentalEdge: 'experimental-edge',\n  nodejs: 'nodejs',\n}\n\nexport const WEB_SOCKET_MAX_RECONNECTIONS = 12\n\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */\nconst WEBPACK_LAYERS_NAMES = {\n  /**\n   * The layer for the shared code between the client and server bundles.\n   */\n  shared: 'shared',\n  /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes and metadata routes.\n   */\n  reactServerComponents: 'rsc',\n  /**\n   * Server Side Rendering layer for app (ssr).\n   */\n  serverSideRendering: 'ssr',\n  /**\n   * The browser client bundle layer for actions.\n   */\n  actionBrowser: 'action-browser',\n  /**\n   * The Node.js bundle layer for the API routes.\n   */\n  apiNode: 'api-node',\n  /**\n   * The Edge Lite bundle layer for the API routes.\n   */\n  apiEdge: 'api-edge',\n  /**\n   * The layer for the middleware code.\n   */\n  middleware: 'middleware',\n  /**\n   * The layer for the instrumentation hooks.\n   */\n  instrument: 'instrument',\n  /**\n   * The layer for assets on the edge.\n   */\n  edgeAsset: 'edge-asset',\n  /**\n   * The browser client bundle layer for App directory.\n   */\n  appPagesBrowser: 'app-pages-browser',\n  /**\n   * The browser client bundle layer for Pages directory.\n   */\n  pagesDirBrowser: 'pages-dir-browser',\n  /**\n   * The Edge Lite bundle layer for Pages directory.\n   */\n  pagesDirEdge: 'pages-dir-edge',\n  /**\n   * The Node.js bundle layer for Pages directory.\n   */\n  pagesDirNode: 'pages-dir-node',\n} as const\n\nexport type WebpackLayerName =\n  (typeof WEBPACK_LAYERS_NAMES)[keyof typeof WEBPACK_LAYERS_NAMES]\n\nconst WEBPACK_LAYERS = {\n  ...WEBPACK_LAYERS_NAMES,\n  GROUP: {\n    builtinReact: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n    serverOnly: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    neutralTarget: [\n      // pages api\n      WEBPACK_LAYERS_NAMES.apiNode,\n      WEBPACK_LAYERS_NAMES.apiEdge,\n    ],\n    clientOnly: [\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n    ],\n    bundled: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.shared,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    appPages: [\n      // app router pages and layouts\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n  },\n}\n\nconst WEBPACK_RESOURCE_QUERIES = {\n  edgeSSREntry: '__next_edge_ssr_entry__',\n  metadata: '__next_metadata__',\n  metadataRoute: '__next_metadata_route__',\n  metadataImageMeta: '__next_metadata_image_meta__',\n}\n\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES }\n","import { normalizeAppPath } from './app-paths'\n\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n  '(..)(..)',\n  '(.)',\n  '(..)',\n  '(...)',\n] as const\n\nexport function isInterceptionRouteAppPath(path: string): boolean {\n  // TODO-APP: add more serious validation\n  return (\n    path\n      .split('/')\n      .find((segment) =>\n        INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n      ) !== undefined\n  )\n}\n\ntype InterceptionRouteInformation = {\n  /**\n   * The intercepting route. This is the route that is being intercepted or the\n   * route that the user was coming from. This is matched by the Next-Url\n   * header.\n   */\n  interceptingRoute: string\n\n  /**\n   * The intercepted route. This is the route that is being intercepted or the\n   * route that the user is going to. This is matched by the request pathname.\n   */\n  interceptedRoute: string\n}\n\nexport function extractInterceptionRouteInformation(\n  path: string\n): InterceptionRouteInformation {\n  let interceptingRoute: string | undefined\n  let marker: (typeof INTERCEPTION_ROUTE_MARKERS)[number] | undefined\n  let interceptedRoute: string | undefined\n\n  for (const segment of path.split('/')) {\n    marker = INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n    if (marker) {\n      ;[interceptingRoute, interceptedRoute] = path.split(marker, 2)\n      break\n    }\n  }\n\n  if (!interceptingRoute || !marker || !interceptedRoute) {\n    throw new Error(\n      `Invalid interception route: ${path}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`\n    )\n  }\n\n  interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n\n  switch (marker) {\n    case '(.)':\n      // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n      if (interceptingRoute === '/') {\n        interceptedRoute = `/${interceptedRoute}`\n      } else {\n        interceptedRoute = interceptingRoute + '/' + interceptedRoute\n      }\n      break\n    case '(..)':\n      // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n      if (interceptingRoute === '/') {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..) marker at the root level, use (.) instead.`\n        )\n      }\n      interceptedRoute = interceptingRoute\n        .split('/')\n        .slice(0, -1)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    case '(...)':\n      // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n      interceptedRoute = '/' + interceptedRoute\n      break\n    case '(..)(..)':\n      // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n\n      const splitInterceptingRoute = interceptingRoute.split('/')\n      if (splitInterceptingRoute.length <= 2) {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..)(..) marker at the root level or one level up.`\n        )\n      }\n\n      interceptedRoute = splitInterceptingRoute\n        .slice(0, -2)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    default:\n      throw new Error('Invariant: unexpected marker')\n  }\n\n  return { interceptingRoute, interceptedRoute }\n}\n","// regexp is based on https://github.com/sindresorhus/escape-string-regexp\nconst reHasRegExp = /[|\\\\{}()[\\]^$+*?.-]/\nconst reReplaceRegExp = /[|\\\\{}()[\\]^$+*?.-]/g\n\nexport function escapeStringRegexp(str: string) {\n  // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23\n  if (reHasRegExp.test(str)) {\n    return str.replace(reReplaceRegExp, '\\\\$&')\n  }\n  return str\n}\n","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */\nexport function removeTrailingSlash(route: string) {\n  return route.replace(/\\/$/, '') || '/'\n}\n","import { DEFAULT_SEGMENT_KEY } from '../../segment'\nimport type { LoaderTree } from '../../../../server/lib/app-dir-module'\n\nexport function parseLoaderTree(tree: LoaderTree) {\n  const [segment, parallelRoutes, modules] = tree\n  const { layout, template } = modules\n  let { page } = modules\n  // a __DEFAULT__ segment means that this route didn't match any of the\n  // segments in the route, so we should use the default page\n  page = segment === DEFAULT_SEGMENT_KEY ? modules.defaultPage : page\n\n  const conventionPath = layout?.[1] || template?.[1] || page?.[1]\n\n  return {\n    page,\n    segment,\n    modules,\n    /* it can be either layout / template / page */\n    conventionPath,\n    parallelRoutes,\n  }\n}\n","import { INTERCEPTION_ROUTE_MARKERS } from './interception-routes'\nimport type { DynamicParamTypes } from '../../app-router-types'\n\n/**\n * Parse dynamic route segment to type of parameter\n */\nexport function getSegmentParam(segment: string): {\n  param: string\n  type: DynamicParamTypes\n} | null {\n  const interceptionMarker = INTERCEPTION_ROUTE_MARKERS.find((marker) =>\n    segment.startsWith(marker)\n  )\n\n  // if an interception marker is part of the path segment, we need to jump ahead\n  // to the relevant portion for param parsing\n  if (interceptionMarker) {\n    segment = segment.slice(interceptionMarker.length)\n  }\n\n  if (segment.startsWith('[[...') && segment.endsWith(']]')) {\n    return {\n      // TODO-APP: Optional catchall does not currently work with parallel routes,\n      // so for now aren't handling a potential interception marker.\n      type: 'optional-catchall',\n      param: segment.slice(5, -2),\n    }\n  }\n\n  if (segment.startsWith('[...') && segment.endsWith(']')) {\n    return {\n      type: interceptionMarker ? 'catchall-intercepted' : 'catchall',\n      param: segment.slice(4, -1),\n    }\n  }\n\n  if (segment.startsWith('[') && segment.endsWith(']')) {\n    return {\n      type: interceptionMarker ? 'dynamic-intercepted' : 'dynamic',\n      param: segment.slice(1, -1),\n    }\n  }\n\n  return null\n}\n\nexport function isCatchAll(\n  type: DynamicParamTypes\n): type is 'catchall' | 'catchall-intercepted' | 'optional-catchall' {\n  return (\n    type === 'catchall' ||\n    type === 'catchall-intercepted' ||\n    type === 'optional-catchall'\n  )\n}\n\nexport function getParamProperties(paramType: DynamicParamTypes): {\n  repeat: boolean\n  optional: boolean\n} {\n  let repeat = false\n  let optional = false\n\n  switch (paramType) {\n    case 'catchall':\n    case 'catchall-intercepted':\n      repeat = true\n      break\n    case 'optional-catchall':\n      repeat = true\n      optional = true\n      break\n    case 'dynamic':\n    case 'dynamic-intercepted':\n      break\n    default:\n      paramType satisfies never\n  }\n\n  return { repeat, optional }\n}\n","import type { DynamicParam } from '../../../../server/app-render/app-render'\nimport type { LoaderTree } from '../../../../server/lib/app-dir-module'\nimport type { OpaqueFallbackRouteParams } from '../../../../server/request/fallback-params'\nimport type { Params } from '../../../../server/request/params'\nimport type { DynamicParamTypesShort } from '../../app-router-types'\nimport { InvariantError } from '../../invariant-error'\nimport { parseLoaderTree } from './parse-loader-tree'\nimport { getSegmentParam } from './get-segment-param'\n\n/**\n * Gets the value of a param from the params object. This correctly handles the\n * case where the param is a fallback route param and encodes the resulting\n * value.\n *\n * @param interpolatedParams - The params object.\n * @param segmentKey - The key of the segment.\n * @param fallbackRouteParams - The fallback route params.\n * @returns The value of the param.\n */\nfunction getParamValue(\n  interpolatedParams: Params,\n  segmentKey: string,\n  fallbackRouteParams: OpaqueFallbackRouteParams | null\n) {\n  let value = interpolatedParams[segmentKey]\n\n  if (fallbackRouteParams?.has(segmentKey)) {\n    // We know that the fallback route params has the segment key because we\n    // checked that above.\n    const [searchValue] = fallbackRouteParams.get(segmentKey)!\n    value = searchValue\n  } else if (Array.isArray(value)) {\n    value = value.map((i) => encodeURIComponent(i))\n  } else if (typeof value === 'string') {\n    value = encodeURIComponent(value)\n  }\n\n  return value\n}\n\nexport function interpolateParallelRouteParams(\n  loaderTree: LoaderTree,\n  params: Params,\n  pagePath: string,\n  fallbackRouteParams: OpaqueFallbackRouteParams | null\n) {\n  const interpolated = structuredClone(params)\n\n  // Stack-based traversal with depth tracking\n  const stack: Array<{ tree: LoaderTree; depth: number }> = [\n    { tree: loaderTree, depth: 0 },\n  ]\n\n  // Derive value from pagePath based on depth and parameter type\n  const pathSegments = pagePath.split('/').slice(1) // Remove first empty string\n\n  while (stack.length > 0) {\n    const { tree, depth } = stack.pop()!\n    const { segment, parallelRoutes } = parseLoaderTree(tree)\n\n    // Check if current segment contains a parameter\n    const segmentParam = getSegmentParam(segment)\n    if (\n      segmentParam &&\n      !interpolated.hasOwnProperty(segmentParam.param) &&\n      // If the param is in the fallback route params, we don't need to\n      // interpolate it because it's already marked as being unknown.\n      !fallbackRouteParams?.has(segmentParam.param)\n    ) {\n      switch (segmentParam.type) {\n        case 'catchall':\n        case 'optional-catchall':\n        case 'catchall-intercepted':\n          // For catchall parameters, take all remaining segments from this depth\n          const remainingSegments = pathSegments.slice(depth)\n\n          // Process each segment to handle any dynamic params\n          const processedSegments = remainingSegments\n            .flatMap((pathSegment) => {\n              const param = getSegmentParam(pathSegment)\n              // If the segment matches a param, return the param value otherwise,\n              // it's a static segment, so just return that. We don't use the\n              // `getParamValue` function here because we don't want the values to\n              // be encoded, that's handled on get by the `getDynamicParam`\n              // function.\n              return param ? interpolated[param.param] : pathSegment\n            })\n            .filter((s) => s !== undefined)\n\n          if (processedSegments.length > 0) {\n            interpolated[segmentParam.param] = processedSegments\n          }\n          break\n        case 'dynamic':\n        case 'dynamic-intercepted':\n          // For regular dynamic parameters, take the segment at this depth\n          if (depth < pathSegments.length) {\n            const pathSegment = pathSegments[depth]\n            const param = getSegmentParam(pathSegment)\n\n            interpolated[segmentParam.param] = param\n              ? interpolated[param.param]\n              : pathSegment\n          }\n          break\n        default:\n          segmentParam.type satisfies never\n      }\n    }\n\n    // Calculate next depth - increment if this is not a route group and not empty\n    let nextDepth = depth\n    const isRouteGroup = segment.startsWith('(') && segment.endsWith(')')\n    if (!isRouteGroup && segment !== '') {\n      nextDepth++\n    }\n\n    // Add all parallel routes to the stack for processing\n    for (const route of Object.values(parallelRoutes)) {\n      stack.push({ tree: route, depth: nextDepth })\n    }\n  }\n\n  return interpolated\n}\n\n/**\n *\n * Shared logic on client and server for creating a dynamic param value.\n *\n * This code needs to be shared with the client so it can extract dynamic route\n * params from the URL without a server request.\n *\n * Because everything in this module is sent to the client, we should aim to\n * keep this code as simple as possible. The special case handling for catchall\n * and optional is, alas, unfortunate.\n */\nexport function getDynamicParam(\n  interpolatedParams: Params,\n  segmentKey: string,\n  dynamicParamType: DynamicParamTypesShort,\n  fallbackRouteParams: OpaqueFallbackRouteParams | null\n): DynamicParam {\n  let value: string | string[] | undefined = getParamValue(\n    interpolatedParams,\n    segmentKey,\n    fallbackRouteParams\n  )\n\n  // handle the case where an optional catchall does not have a value,\n  // e.g. `/dashboard/[[...slug]]` when requesting `/dashboard`\n  if (!value || value.length === 0) {\n    if (dynamicParamType === 'oc') {\n      return {\n        param: segmentKey,\n        value: null,\n        type: dynamicParamType,\n        treeSegment: [segmentKey, '', dynamicParamType],\n      }\n    }\n\n    throw new InvariantError(\n      `Missing value for segment key: \"${segmentKey}\" with dynamic param type: ${dynamicParamType}`\n    )\n  }\n\n  return {\n    param: segmentKey,\n    // The value that is passed to user code.\n    value,\n    // The value that is rendered in the router tree.\n    treeSegment: [\n      segmentKey,\n      Array.isArray(value) ? value.join('/') : value,\n      dynamicParamType,\n    ],\n    type: dynamicParamType,\n  }\n}\n\n/**\n * Regular expression pattern used to match route parameters.\n * Matches both single parameters and parameter groups.\n * Examples:\n *   - `[[...slug]]` matches parameter group with key 'slug', repeat: true, optional: true\n *   - `[...slug]` matches parameter group with key 'slug', repeat: true, optional: false\n *   - `[[foo]]` matches parameter with key 'foo', repeat: false, optional: true\n *   - `[bar]` matches parameter with key 'bar', repeat: false, optional: false\n */\nexport const PARAMETER_PATTERN = /^([^[]*)\\[((?:\\[[^\\]]*\\])|[^\\]]+)\\](.*)$/\n\n/**\n * Parses a given parameter from a route to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[[...slug]]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[[foo]]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `[bar]` -> `{ key: 'bar', repeat: false, optional: false }`\n *   - `fizz` -> `{ key: 'fizz', repeat: false, optional: false }`\n * @param param - The parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseParameter(param: string) {\n  const match = param.match(PARAMETER_PATTERN)\n\n  if (!match) {\n    return parseMatchedParameter(param)\n  }\n\n  return parseMatchedParameter(match[2])\n}\n\n/**\n * Parses a matched parameter from the PARAMETER_PATTERN regex to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`\n * @param param - The matched parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseMatchedParameter(param: string) {\n  const optional = param.startsWith('[') && param.endsWith(']')\n  if (optional) {\n    param = param.slice(1, -1)\n  }\n  const repeat = param.startsWith('...')\n  if (repeat) {\n    param = param.slice(3)\n  }\n  return { key: param, repeat, optional }\n}\n","import {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../../../lib/constants'\nimport { INTERCEPTION_ROUTE_MARKERS } from './interception-routes'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { PARAMETER_PATTERN, parseMatchedParameter } from './get-dynamic-param'\n\nexport interface Group {\n  pos: number\n  repeat: boolean\n  optional: boolean\n}\n\nexport interface RouteRegex {\n  groups: { [groupName: string]: Group }\n  re: RegExp\n}\n\nexport type RegexReference = {\n  names: Record<string, string>\n  intercepted: Record<string, string>\n}\n\ntype GetNamedRouteRegexOptions = {\n  /**\n   * Whether to prefix the route keys with the NEXT_INTERCEPTION_MARKER_PREFIX\n   * or NEXT_QUERY_PARAM_PREFIX. This is only relevant when creating the\n   * routes-manifest during the build.\n   */\n  prefixRouteKeys: boolean\n\n  /**\n   * Whether to include the suffix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n\n  /**\n   * Whether to backtrack duplicate keys. This is only relevant when creating\n   * the routes-manifest during the build.\n   */\n  backreferenceDuplicateKeys?: boolean\n\n  /**\n   * If provided, this will be used as the reference for the dynamic parameter\n   * keys instead of generating them in context. This is currently only used for\n   * interception routes.\n   */\n  reference?: RegexReference\n}\n\ntype GetRouteRegexOptions = {\n  /**\n   * Whether to include extra parts in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   * of adding this option.\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n}\n\nfunction getParametrizedRoute(\n  route: string,\n  includeSuffix: boolean,\n  includePrefix: boolean\n) {\n  const groups: { [groupName: string]: Group } = {}\n  let groupIndex = 1\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const markerMatch = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n      segment.startsWith(m)\n    )\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (markerMatch && paramMatches && paramMatches[2]) {\n      const { key, optional, repeat } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n      segments.push(`/${escapeStringRegexp(markerMatch)}([^/]+?)`)\n    } else if (paramMatches && paramMatches[2]) {\n      const { key, repeat, optional } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = repeat ? (optional ? '(?:/(.+?))?' : '/(.+?)') : '/([^/]+?)'\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    parameterizedRoute: segments.join(''),\n    groups,\n  }\n}\n\n/**\n * From a normalized route this function generates a regular expression and\n * a corresponding groups object intended to be used to store matching groups\n * from the regular expression.\n */\nexport function getRouteRegex(\n  normalizedRoute: string,\n  {\n    includeSuffix = false,\n    includePrefix = false,\n    excludeOptionalTrailingSlash = false,\n  }: GetRouteRegexOptions = {}\n): RouteRegex {\n  const { parameterizedRoute, groups } = getParametrizedRoute(\n    normalizedRoute,\n    includeSuffix,\n    includePrefix\n  )\n\n  let re = parameterizedRoute\n  if (!excludeOptionalTrailingSlash) {\n    re += '(?:/)?'\n  }\n\n  return {\n    re: new RegExp(`^${re}$`),\n    groups: groups,\n  }\n}\n\n/**\n * Builds a function to generate a minimal routeKey using only a-z and minimal\n * number of characters.\n */\nfunction buildGetSafeRouteKey() {\n  let i = 0\n\n  return () => {\n    let routeKey = ''\n    let j = ++i\n    while (j > 0) {\n      routeKey += String.fromCharCode(97 + ((j - 1) % 26))\n      j = Math.floor((j - 1) / 26)\n    }\n    return routeKey\n  }\n}\n\nfunction getSafeKeyFromSegment({\n  interceptionMarker,\n  getSafeRouteKey,\n  segment,\n  routeKeys,\n  keyPrefix,\n  backreferenceDuplicateKeys,\n}: {\n  interceptionMarker?: string\n  getSafeRouteKey: () => string\n  segment: string\n  routeKeys: Record<string, string>\n  keyPrefix?: string\n  backreferenceDuplicateKeys: boolean\n}) {\n  const { key, optional, repeat } = parseMatchedParameter(segment)\n\n  // replace any non-word characters since they can break\n  // the named regex\n  let cleanedKey = key.replace(/\\W/g, '')\n\n  if (keyPrefix) {\n    cleanedKey = `${keyPrefix}${cleanedKey}`\n  }\n  let invalidKey = false\n\n  // check if the key is still invalid and fallback to using a known\n  // safe key\n  if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n    invalidKey = true\n  }\n  if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {\n    invalidKey = true\n  }\n\n  if (invalidKey) {\n    cleanedKey = getSafeRouteKey()\n  }\n\n  const duplicateKey = cleanedKey in routeKeys\n\n  if (keyPrefix) {\n    routeKeys[cleanedKey] = `${keyPrefix}${key}`\n  } else {\n    routeKeys[cleanedKey] = key\n  }\n\n  // if the segment has an interception marker, make sure that's part of the regex pattern\n  // this is to ensure that the route with the interception marker doesn't incorrectly match\n  // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])\n  const interceptionPrefix = interceptionMarker\n    ? escapeStringRegexp(interceptionMarker)\n    : ''\n\n  let pattern: string\n  if (duplicateKey && backreferenceDuplicateKeys) {\n    // Use a backreference to the key to ensure that the key is the same value\n    // in each of the placeholders.\n    pattern = `\\\\k<${cleanedKey}>`\n  } else if (repeat) {\n    pattern = `(?<${cleanedKey}>.+?)`\n  } else {\n    pattern = `(?<${cleanedKey}>[^/]+?)`\n  }\n\n  return {\n    key,\n    pattern: optional\n      ? `(?:/${interceptionPrefix}${pattern})?`\n      : `/${interceptionPrefix}${pattern}`,\n    cleanedKey: cleanedKey,\n    optional,\n    repeat,\n  }\n}\n\nfunction getNamedParametrizedRoute(\n  route: string,\n  prefixRouteKeys: boolean,\n  includeSuffix: boolean,\n  includePrefix: boolean,\n  backreferenceDuplicateKeys: boolean,\n  reference: RegexReference = { names: {}, intercepted: {} }\n) {\n  const getSafeRouteKey = buildGetSafeRouteKey()\n  const routeKeys: { [named: string]: string } = {}\n\n  const segments: string[] = []\n  const inverseParts: string[] = []\n\n  // Ensure we don't mutate the original reference object.\n  reference = structuredClone(reference)\n\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const hasInterceptionMarker = INTERCEPTION_ROUTE_MARKERS.some((m) =>\n      segment.startsWith(m)\n    )\n\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    const interceptionMarker = hasInterceptionMarker\n      ? paramMatches?.[1]\n      : undefined\n\n    let keyPrefix: string | undefined\n    if (interceptionMarker && paramMatches?.[2]) {\n      keyPrefix = prefixRouteKeys ? NEXT_INTERCEPTION_MARKER_PREFIX : undefined\n      reference.intercepted[paramMatches[2]] = interceptionMarker\n    } else if (paramMatches?.[2] && reference.intercepted[paramMatches[2]]) {\n      keyPrefix = prefixRouteKeys ? NEXT_INTERCEPTION_MARKER_PREFIX : undefined\n    } else {\n      keyPrefix = prefixRouteKeys ? NEXT_QUERY_PARAM_PREFIX : undefined\n    }\n\n    if (interceptionMarker && paramMatches && paramMatches[2]) {\n      // If there's an interception marker, add it to the segments.\n      const { key, pattern, cleanedKey, repeat, optional } =\n        getSafeKeyFromSegment({\n          getSafeRouteKey,\n          interceptionMarker,\n          segment: paramMatches[2],\n          routeKeys,\n          keyPrefix,\n          backreferenceDuplicateKeys,\n        })\n\n      segments.push(pattern)\n      inverseParts.push(\n        `/${paramMatches[1]}:${reference.names[key] ?? cleanedKey}${repeat ? (optional ? '*' : '+') : ''}`\n      )\n      reference.names[key] ??= cleanedKey\n    } else if (paramMatches && paramMatches[2]) {\n      // If there's a prefix, add it to the segments if it's enabled.\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n        inverseParts.push(`/${paramMatches[1]}`)\n      }\n\n      const { key, pattern, cleanedKey, repeat, optional } =\n        getSafeKeyFromSegment({\n          getSafeRouteKey,\n          segment: paramMatches[2],\n          routeKeys,\n          keyPrefix,\n          backreferenceDuplicateKeys,\n        })\n\n      // Remove the leading slash if includePrefix already added it.\n      let s = pattern\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n      inverseParts.push(\n        `/:${reference.names[key] ?? cleanedKey}${repeat ? (optional ? '*' : '+') : ''}`\n      )\n      reference.names[key] ??= cleanedKey\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n      inverseParts.push(`/${segment}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n      inverseParts.push(paramMatches[3])\n    }\n  }\n\n  return {\n    namedParameterizedRoute: segments.join(''),\n    routeKeys,\n    pathToRegexpPattern: inverseParts.join(''),\n    reference,\n  }\n}\n\n/**\n * This function extends `getRouteRegex` generating also a named regexp where\n * each group is named along with a routeKeys object that indexes the assigned\n * named group with its corresponding key. When the routeKeys need to be\n * prefixed to uniquely identify internally the \"prefixRouteKey\" arg should\n * be \"true\" currently this is only the case when creating the routes-manifest\n * during the build\n */\nexport function getNamedRouteRegex(\n  normalizedRoute: string,\n  options: GetNamedRouteRegexOptions\n) {\n  const result = getNamedParametrizedRoute(\n    normalizedRoute,\n    options.prefixRouteKeys,\n    options.includeSuffix ?? false,\n    options.includePrefix ?? false,\n    options.backreferenceDuplicateKeys ?? false,\n    options.reference\n  )\n\n  let namedRegex = result.namedParameterizedRoute\n  if (!options.excludeOptionalTrailingSlash) {\n    namedRegex += '(?:/)?'\n  }\n\n  return {\n    ...getRouteRegex(normalizedRoute, options),\n    namedRegex: `^${namedRegex}$`,\n    routeKeys: result.routeKeys,\n    pathToRegexpPattern: result.pathToRegexpPattern,\n    reference: result.reference,\n  }\n}\n\n/**\n * Generates a named regexp.\n * This is intended to be using for build time only.\n */\nexport function getNamedMiddlewareRegex(\n  normalizedRoute: string,\n  options: {\n    catchAll?: boolean\n  }\n) {\n  const { parameterizedRoute } = getParametrizedRoute(\n    normalizedRoute,\n    false,\n    false\n  )\n  const { catchAll = true } = options\n  if (parameterizedRoute === '/') {\n    let catchAllRegex = catchAll ? '.*' : ''\n    return {\n      namedRegex: `^/${catchAllRegex}$`,\n    }\n  }\n\n  const { namedParameterizedRoute } = getNamedParametrizedRoute(\n    normalizedRoute,\n    false,\n    false,\n    false,\n    false,\n    undefined\n  )\n  let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : ''\n  return {\n    namedRegex: `^${namedParameterizedRoute}${catchAllGroupedRegex}$`,\n  }\n}\n","import type { HtmlProps } from './html-context.shared-runtime'\nimport type { ComponentType, JSX } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from '../../types'\nimport type { COMPILER_NAMES } from './constants'\nimport type fs from 'fs'\n\nexport type NextComponentType<\n  Context extends BaseContext = NextPageContext,\n  InitialProps = {},\n  Props = {},\n> = ComponentType<Props> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param context Context of `page`\n   */\n  getInitialProps?(context: Context): InitialProps | Promise<InitialProps>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType<P = {}> = NextComponentType<\n  AppContextType,\n  P,\n  AppPropsType<any, P>\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport const WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'] as const\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n  attribution?: { [key: string]: unknown }\n} & (\n  | {\n      label: 'web-vital'\n      name: (typeof WEB_VITALS)[number]\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => DocumentInitialProps | Promise<DocumentInitialProps>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  isExperimentalCompile?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & {\n    statusCode?: number\n    source?: typeof COMPILER_NAMES.server | typeof COMPILER_NAMES.edgeServer\n  }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: readonly string[]\n  defaultLocale?: string\n  domainLocales?: readonly DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n  notFoundSrcPage?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: readonly string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<Router extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: Router\n}\n\nexport type AppInitialProps<PageProps = any> = {\n  pageProps: PageProps\n}\n\nexport type AppPropsType<\n  Router extends NextRouter = NextRouter,\n  PageProps = {},\n> = AppInitialProps<PageProps> & {\n  Component: NextComponentType<NextPageContext, any, any>\n  router: Router\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n  defaultGetInitialProps(\n    ctx: DocumentContext,\n    options?: { nonce?: string }\n  ): Promise<DocumentInitialProps>\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | Iterable<React.ReactNode> | JSX.Element\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: Partial<{\n    [key: string]: string | string[]\n  }>\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: Partial<{\n    [key: string]: string\n  }>\n\n  body: any\n\n  env: Env\n\n  draftMode?: boolean\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<Data = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<Data>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<Data>\n  status: (statusCode: number) => NextApiResponse<Data>\n  redirect(url: string): NextApiResponse<Data>\n  redirect(status: number, url: string): NextApiResponse<Data>\n\n  /**\n   * Set draft mode\n   */\n  setDraftMode: (options: { enable: boolean }) => NextApiResponse<Data>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n      /**\n       * Specifies the path for the preview session to work under. By default,\n       * the path is considered the \"default path\", i.e., any pages under \"/\".\n       */\n      path?: string\n    }\n  ) => NextApiResponse<Data>\n\n  /**\n   * Clear preview data for Next.js' prerender mode\n   */\n  clearPreviewData: (options?: { path?: string }) => NextApiResponse<Data>\n\n  /**\n   * Revalidate a specific page and regenerate it using On-Demand Incremental\n   * Static Regeneration.\n   * The path should be an actual path, not a rewritten path. E.g. for\n   * \"/blog/[slug]\" this should be \"/blog/post-1\".\n   * @link https://nextjs.org/docs/app/building-your-application/data-fetching/incremental-static-regeneration#on-demand-revalidation-with-revalidatepath\n   */\n  revalidate: (\n    urlPath: string,\n    opts?: {\n      unstable_onlyGenerated?: boolean\n    }\n  ) => Promise<void>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => unknown | Promise<unknown>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {},\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  (['mark', 'measure', 'getEntriesByName'] as const).every(\n    (method) => typeof performance[method] === 'function'\n  )\n\nexport class DecodeError extends Error {}\nexport class NormalizeError extends Error {}\nexport class PageNotFoundError extends Error {\n  code: string\n\n  constructor(page: string) {\n    super()\n    this.code = 'ENOENT'\n    this.name = 'PageNotFoundError'\n    this.message = `Cannot find module for page: ${page}`\n  }\n}\n\nexport class MissingStaticPage extends Error {\n  constructor(page: string, message: string) {\n    super()\n    this.message = `Failed to load static file for page: ${page} ${message}`\n  }\n}\n\nexport class MiddlewareNotFoundError extends Error {\n  code: string\n  constructor() {\n    super()\n    this.code = 'ENOENT'\n    this.message = `Cannot find the middleware module`\n  }\n}\n\nexport interface CacheFs {\n  existsSync: typeof fs.existsSync\n  readFile: typeof fs.promises.readFile\n  readFileSync: typeof fs.readFileSync\n  writeFile(f: string, d: any): Promise<void>\n  mkdir(dir: string): Promise<void | string>\n  stat(f: string): Promise<{ mtime: Date }>\n}\n\nexport function stringifyError(error: Error) {\n  return JSON.stringify({ message: error.message, stack: error.stack })\n}\n","import type { Token } from 'next/dist/compiled/path-to-regexp'\n\n/**\n * Route pattern normalization utilities for path-to-regexp compatibility.\n *\n * path-to-regexp 6.3.0+ introduced stricter validation that rejects certain\n * patterns commonly used in Next.js interception routes. This module provides\n * normalization functions to make Next.js route patterns compatible with the\n * updated library while preserving all functionality.\n */\n\n/**\n * Internal separator used to normalize adjacent parameter patterns.\n * This unique marker is inserted between adjacent parameters and stripped out\n * during parameter extraction to avoid conflicts with real URL content.\n */\nexport const PARAM_SEPARATOR = '_NEXTSEP_'\n\n/**\n * Detects if a route pattern needs normalization for path-to-regexp compatibility.\n */\nexport function hasAdjacentParameterIssues(route: string): boolean {\n  if (typeof route !== 'string') return false\n\n  // Check for interception route markers followed immediately by parameters\n  // Pattern: /(.):param, /(..):param, /(...):param, /(.)(.):param etc.\n  // These patterns cause \"Must have text between two parameters\" errors\n  if (/\\/\\(\\.{1,3}\\):[^/\\s]+/.test(route)) {\n    return true\n  }\n\n  // Check for basic adjacent parameters without separators\n  // Pattern: :param1:param2 (but not :param* or other URL patterns)\n  if (/:[a-zA-Z_][a-zA-Z0-9_]*:[a-zA-Z_][a-zA-Z0-9_]*/.test(route)) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Normalizes route patterns that have adjacent parameters without text between them.\n * Inserts a unique separator that can be safely stripped out later.\n */\nexport function normalizeAdjacentParameters(route: string): string {\n  let normalized = route\n\n  // Handle interception route patterns: (.):param -> (.)_NEXTSEP_:param\n  normalized = normalized.replace(\n    /(\\([^)]*\\)):([^/\\s]+)/g,\n    `$1${PARAM_SEPARATOR}:$2`\n  )\n\n  // Handle other adjacent parameter patterns: :param1:param2 -> :param1_NEXTSEP_:param2\n  normalized = normalized.replace(/:([^:/\\s)]+)(?=:)/g, `:$1${PARAM_SEPARATOR}`)\n\n  return normalized\n}\n\n/**\n * Normalizes tokens that have repeating modifiers (* or +) but empty prefix and suffix.\n *\n * path-to-regexp 6.3.0+ introduced validation that throws:\n * \"Can not repeat without prefix/suffix\"\n *\n * This occurs when a token has modifier: '*' or '+' with both prefix: '' and suffix: ''\n */\nexport function normalizeTokensForRegexp(tokens: Token[]): Token[] {\n  return tokens.map((token) => {\n    // Token union type: Token = string | TokenObject\n    // Literal path segments are strings, parameters/wildcards are objects\n    if (\n      typeof token === 'object' &&\n      token !== null &&\n      // Not all token objects have 'modifier' property (e.g., simple text tokens)\n      'modifier' in token &&\n      // Only repeating modifiers (* or +) cause the validation error\n      // Other modifiers like '?' (optional) are fine\n      (token.modifier === '*' || token.modifier === '+') &&\n      // Token objects can have different shapes depending on route pattern\n      'prefix' in token &&\n      'suffix' in token &&\n      // Both prefix and suffix must be empty strings\n      // This is what causes the validation error in path-to-regexp\n      token.prefix === '' &&\n      token.suffix === ''\n    ) {\n      // Add minimal prefix to satisfy path-to-regexp validation\n      // We use '/' as it's the most common path delimiter and won't break route matching\n      // The prefix gets used in regex generation but doesn't affect parameter extraction\n      return {\n        ...token,\n        prefix: '/',\n      }\n    }\n    return token\n  })\n}\n\n/**\n * Strips normalization separators from compiled pathname.\n * This removes separators that were inserted by normalizeAdjacentParameters\n * to satisfy path-to-regexp validation.\n *\n * Only removes separators in the specific contexts where they were inserted:\n * - After interception route markers: (.)_NEXTSEP_ -> (.)\n *\n * This targeted approach ensures we don't accidentally remove the separator\n * from legitimate user content.\n */\nexport function stripNormalizedSeparators(pathname: string): string {\n  // Remove separator after interception route markers\n  // Pattern: (.)_NEXTSEP_ -> (.), (..)_NEXTSEP_ -> (..), etc.\n  // The separator appears after the closing paren of interception markers\n  return pathname.replace(new RegExp(`\\\\)${PARAM_SEPARATOR}`, 'g'), ')')\n}\n\n/**\n * Strips normalization separators from extracted route parameters.\n * Used by both server and client code to clean up parameters after route matching.\n */\nexport function stripParameterSeparators(\n  params: Record<string, any>\n): Record<string, any> {\n  const cleaned: Record<string, any> = {}\n\n  for (const [key, value] of Object.entries(params)) {\n    if (typeof value === 'string') {\n      // Remove the separator if it appears at the start of parameter values\n      cleaned[key] = value.replace(new RegExp(`^${PARAM_SEPARATOR}`), '')\n    } else if (Array.isArray(value)) {\n      // Handle array parameters (from repeated route segments)\n      cleaned[key] = value.map((item) =>\n        typeof item === 'string'\n          ? item.replace(new RegExp(`^${PARAM_SEPARATOR}`), '')\n          : item\n      )\n    } else {\n      cleaned[key] = value\n    }\n  }\n\n  return cleaned\n}\n","/**\n * Client-safe utilities for route matching that don't import server-side\n * utilities to avoid bundling issues with Turbopack\n */\n\nimport type {\n  Key,\n  TokensToRegexpOptions,\n  ParseOptions,\n  TokensToFunctionOptions,\n} from 'next/dist/compiled/path-to-regexp'\nimport {\n  pathToRegexp,\n  compile,\n  regexpToFunction,\n} from 'next/dist/compiled/path-to-regexp'\nimport {\n  hasAdjacentParameterIssues,\n  normalizeAdjacentParameters,\n  stripParameterSeparators,\n  stripNormalizedSeparators,\n} from '../../../../lib/route-pattern-normalizer'\n\n/**\n * Client-safe wrapper around pathToRegexp that handles path-to-regexp 6.3.0+ validation errors.\n * This includes both \"Can not repeat without prefix/suffix\" and \"Must have text between parameters\" errors.\n */\nexport function safePathToRegexp(\n  route: string | RegExp | Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n): RegExp {\n  if (typeof route !== 'string') {\n    return pathToRegexp(route, keys, options)\n  }\n\n  // Check if normalization is needed and cache the result\n  const needsNormalization = hasAdjacentParameterIssues(route)\n  const routeToUse = needsNormalization\n    ? normalizeAdjacentParameters(route)\n    : route\n\n  try {\n    return pathToRegexp(routeToUse, keys, options)\n  } catch (error) {\n    // Only try normalization if we haven't already normalized\n    if (!needsNormalization) {\n      try {\n        const normalizedRoute = normalizeAdjacentParameters(route)\n        return pathToRegexp(normalizedRoute, keys, options)\n      } catch (retryError) {\n        // If that doesn't work, fall back to original error\n        throw error\n      }\n    }\n    throw error\n  }\n}\n\n/**\n * Client-safe wrapper around compile that handles path-to-regexp 6.3.0+ validation errors.\n * No server-side error reporting to avoid bundling issues.\n * When normalization is applied, the returned compiler function automatically strips\n * the internal separator from the output URL.\n */\nexport function safeCompile(\n  route: string,\n  options?: TokensToFunctionOptions & ParseOptions\n) {\n  // Check if normalization is needed and cache the result\n  const needsNormalization = hasAdjacentParameterIssues(route)\n  const routeToUse = needsNormalization\n    ? normalizeAdjacentParameters(route)\n    : route\n\n  try {\n    const compiler = compile(routeToUse, options)\n\n    // If we normalized the route, wrap the compiler to strip separators from output\n    // The normalization inserts _NEXTSEP_ as a literal string in the pattern to satisfy\n    // path-to-regexp validation, but we don't want it in the final compiled URL\n    if (needsNormalization) {\n      return (params: any) => {\n        return stripNormalizedSeparators(compiler(params))\n      }\n    }\n\n    return compiler\n  } catch (error) {\n    // Only try normalization if we haven't already normalized\n    if (!needsNormalization) {\n      try {\n        const normalizedRoute = normalizeAdjacentParameters(route)\n        const compiler = compile(normalizedRoute, options)\n\n        // Wrap the compiler to strip separators from output\n        return (params: any) => {\n          return stripNormalizedSeparators(compiler(params))\n        }\n      } catch (retryError) {\n        // If that doesn't work, fall back to original error\n        throw error\n      }\n    }\n    throw error\n  }\n}\n\n/**\n * Client-safe wrapper around regexpToFunction that automatically cleans parameters.\n */\nexport function safeRegexpToFunction<\n  T extends Record<string, any> = Record<string, any>,\n>(regexp: RegExp, keys?: Key[]): (pathname: string) => { params: T } | false {\n  const originalMatcher = regexpToFunction<T>(regexp, keys || [])\n\n  return (pathname: string) => {\n    const result = originalMatcher(pathname)\n    if (!result) return false\n\n    // Clean parameters before returning\n    return {\n      ...result,\n      params: stripParameterSeparators(result.params as any) as T,\n    }\n  }\n}\n\n/**\n * Safe wrapper for route matcher functions that automatically cleans parameters.\n * This is client-safe and doesn't import path-to-regexp.\n */\nexport function safeRouteMatcher<T extends Record<string, any>>(\n  matcherFn: (pathname: string) => false | T\n): (pathname: string) => false | T {\n  return (pathname: string) => {\n    const result = matcherFn(pathname)\n    if (!result) return false\n\n    // Clean parameters before returning\n    return stripParameterSeparators(result) as T\n  }\n}\n","import type { Group } from './route-regex'\nimport { DecodeError } from '../../utils'\nimport type { Params } from '../../../../server/request/params'\nimport { safeRouteMatcher } from './route-match-utils'\n\nexport interface RouteMatchFn {\n  (pathname: string): false | Params\n}\n\ntype RouteMatcherOptions = {\n  // We only use the exec method of the RegExp object. This helps us avoid using\n  // type assertions that the passed in properties are of the correct type.\n  re: Pick<RegExp, 'exec'>\n  groups: Record<string, Group>\n}\n\nexport function getRouteMatcher({\n  re,\n  groups,\n}: RouteMatcherOptions): RouteMatchFn {\n  const rawMatcher = (pathname: string) => {\n    const routeMatch = re.exec(pathname)\n    if (!routeMatch) return false\n\n    const decode = (param: string) => {\n      try {\n        return decodeURIComponent(param)\n      } catch {\n        throw new DecodeError('failed to decode param')\n      }\n    }\n\n    const params: Params = {}\n    for (const [key, group] of Object.entries(groups)) {\n      const match = routeMatch[group.pos]\n      if (match !== undefined) {\n        if (group.repeat) {\n          params[key] = match.split('/').map((entry) => decode(entry))\n        } else {\n          params[key] = decode(match)\n        }\n      }\n    }\n\n    return params\n  }\n\n  // Wrap with safe matcher to handle parameter cleaning\n  return safeRouteMatcher(rawMatcher)\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  for (const [key, value] of searchParams.entries()) {\n    const existing = query[key]\n    if (typeof existing === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      query[key] = [existing, value]\n    }\n  }\n  return query\n}\n\nfunction stringifyUrlQueryParam(param: unknown): string {\n  if (typeof param === 'string') {\n    return param\n  }\n\n  if (\n    (typeof param === 'number' && !isNaN(param)) ||\n    typeof param === 'boolean'\n  ) {\n    return String(param)\n  } else {\n    return ''\n  }\n}\n\nexport function urlQueryToSearchParams(query: ParsedUrlQuery): URLSearchParams {\n  const searchParams = new URLSearchParams()\n  for (const [key, value] of Object.entries(query)) {\n    if (Array.isArray(value)) {\n      for (const item of value) {\n        searchParams.append(key, stringifyUrlQueryParam(item))\n      }\n    } else {\n      searchParams.set(key, stringifyUrlQueryParam(value))\n    }\n  }\n  return searchParams\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  for (const searchParams of searchParamsList) {\n    for (const key of searchParams.keys()) {\n      target.delete(key)\n    }\n\n    for (const [key, value] of searchParams.entries()) {\n      target.append(key, value)\n    }\n  }\n\n  return target\n}\n","import type { ParsedUrlQuery } from 'querystring'\nimport { getLocationOrigin } from '../../utils'\nimport { searchParamsToUrlQuery } from './querystring'\n\nexport interface ParsedRelativeUrl {\n  hash: string\n  href: string\n  pathname: string\n  query: ParsedUrlQuery\n  search: string\n  slashes: undefined\n}\n\n/**\n * Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative\n * (e.g. `./hello`) then at least base must be.\n * Absolute urls are rejected with one exception, in the browser, absolute urls that are on\n * the current origin will be parsed as relative\n */\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery?: true\n): ParsedRelativeUrl\nexport function parseRelativeUrl(\n  url: string,\n  base: string | undefined,\n  parseQuery: false\n): Omit<ParsedRelativeUrl, 'query'>\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery = true\n): ParsedRelativeUrl | Omit<ParsedRelativeUrl, 'query'> {\n  const globalBase = new URL(\n    typeof window === 'undefined' ? 'http://n' : getLocationOrigin()\n  )\n\n  const resolvedBase = base\n    ? new URL(base, globalBase)\n    : url.startsWith('.')\n      ? new URL(\n          typeof window === 'undefined' ? 'http://n' : window.location.href\n        )\n      : globalBase\n\n  const { pathname, searchParams, search, hash, href, origin } = new URL(\n    url,\n    resolvedBase\n  )\n\n  if (origin !== globalBase.origin) {\n    throw new Error(`invariant: invalid relative URL, router received ${url}`)\n  }\n\n  return {\n    pathname,\n    query: parseQuery ? searchParamsToUrlQuery(searchParams) : undefined,\n    search,\n    hash,\n    href: href.slice(origin.length),\n    // We don't know for relative URLs at this point since we set a custom, internal\n    // base that isn't surfaced to users.\n    slashes: undefined,\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nimport { searchParamsToUrlQuery } from './querystring'\nimport { parseRelativeUrl } from './parse-relative-url'\n\nexport interface ParsedUrl {\n  hash: string\n  hostname?: string | null\n  href: string\n  pathname: string\n  port?: string | null\n  protocol?: string | null\n  query: ParsedUrlQuery\n  origin?: string | null\n  search: string\n  slashes: boolean | undefined\n}\n\nexport function parseUrl(url: string): ParsedUrl {\n  if (url.startsWith('/')) {\n    return parseRelativeUrl(url)\n  }\n\n  const parsedURL = new URL(url)\n  return {\n    hash: parsedURL.hash,\n    hostname: parsedURL.hostname,\n    href: parsedURL.href,\n    pathname: parsedURL.pathname,\n    port: parsedURL.port,\n    protocol: parsedURL.protocol,\n    query: searchParamsToUrlQuery(parsedURL.searchParams),\n    search: parsedURL.search,\n    origin: parsedURL.origin,\n    slashes:\n      parsedURL.href.slice(\n        parsedURL.protocol.length,\n        parsedURL.protocol.length + 2\n      ) === '//',\n  }\n}\n","import type { NextApiRequestCookies } from '.'\n\n/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */\n\nexport function getCookieParser(headers: {\n  [key: string]: string | string[] | null | undefined\n}): () => NextApiRequestCookies {\n  return function parseCookie(): NextApiRequestCookies {\n    const { cookie } = headers\n\n    if (!cookie) {\n      return {}\n    }\n\n    const { parse: parseCookieFn } =\n      require('next/dist/compiled/cookie') as typeof import('next/dist/compiled/cookie')\n    return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie)\n  }\n}\n","import type { IncomingMessage } from 'http'\nimport type { Key } from 'next/dist/compiled/path-to-regexp'\nimport type { NextParsedUrlQuery } from '../../../../server/request-meta'\nimport type { RouteHas } from '../../../../lib/load-custom-routes'\nimport type { BaseNextRequest } from '../../../../server/base-http'\n\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { parseUrl } from './parse-url'\nimport {\n  INTERCEPTION_ROUTE_MARKERS,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\nimport { getCookieParser } from '../../../../server/api-utils/get-cookie-parser'\nimport type { Params } from '../../../../server/request/params'\nimport { safePathToRegexp, safeCompile } from './route-match-utils'\n\n/**\n * Ensure only a-zA-Z are used for param names for proper interpolating\n * with path-to-regexp\n */\nfunction getSafeParamName(paramName: string) {\n  let newParamName = ''\n\n  for (let i = 0; i < paramName.length; i++) {\n    const charCode = paramName.charCodeAt(i)\n\n    if (\n      (charCode > 64 && charCode < 91) || // A-Z\n      (charCode > 96 && charCode < 123) // a-z\n    ) {\n      newParamName += paramName[i]\n    }\n  }\n  return newParamName\n}\n\nfunction escapeSegment(str: string, segmentName: string) {\n  return str.replace(\n    new RegExp(`:${escapeStringRegexp(segmentName)}`, 'g'),\n    `__ESC_COLON_${segmentName}`\n  )\n}\n\nfunction unescapeSegments(str: string) {\n  return str.replace(/__ESC_COLON_/gi, ':')\n}\n\nexport function matchHas(\n  req: BaseNextRequest | IncomingMessage,\n  query: Params,\n  has: RouteHas[] = [],\n  missing: RouteHas[] = []\n): false | Params {\n  const params: Params = {}\n\n  const hasMatch = (hasItem: RouteHas) => {\n    let value\n    let key = hasItem.key\n\n    switch (hasItem.type) {\n      case 'header': {\n        key = key!.toLowerCase()\n        value = req.headers[key] as string\n        break\n      }\n      case 'cookie': {\n        if ('cookies' in req) {\n          value = req.cookies[hasItem.key]\n        } else {\n          const cookies = getCookieParser(req.headers)()\n          value = cookies[hasItem.key]\n        }\n\n        break\n      }\n      case 'query': {\n        value = query[key!]\n        break\n      }\n      case 'host': {\n        const { host } = req?.headers || {}\n        // remove port from host if present\n        const hostname = host?.split(':', 1)[0].toLowerCase()\n        value = hostname\n        break\n      }\n      default: {\n        break\n      }\n    }\n\n    if (!hasItem.value && value) {\n      params[getSafeParamName(key!)] = value\n      return true\n    } else if (value) {\n      const matcher = new RegExp(`^${hasItem.value}$`)\n      const matches = Array.isArray(value)\n        ? value.slice(-1)[0].match(matcher)\n        : value.match(matcher)\n\n      if (matches) {\n        if (Array.isArray(matches)) {\n          if (matches.groups) {\n            Object.keys(matches.groups).forEach((groupKey) => {\n              params[groupKey] = matches.groups![groupKey]\n            })\n          } else if (hasItem.type === 'host' && matches[0]) {\n            params.host = matches[0]\n          }\n        }\n        return true\n      }\n    }\n    return false\n  }\n\n  const allMatch =\n    has.every((item) => hasMatch(item)) &&\n    !missing.some((item) => hasMatch(item))\n\n  if (allMatch) {\n    return params\n  }\n  return false\n}\n\nexport function compileNonPath(value: string, params: Params): string {\n  if (!value.includes(':')) {\n    return value\n  }\n\n  for (const key of Object.keys(params)) {\n    if (value.includes(`:${key}`)) {\n      value = value\n        .replace(\n          new RegExp(`:${key}\\\\*`, 'g'),\n          `:${key}--ESCAPED_PARAM_ASTERISKS`\n        )\n        .replace(\n          new RegExp(`:${key}\\\\?`, 'g'),\n          `:${key}--ESCAPED_PARAM_QUESTION`\n        )\n        .replace(new RegExp(`:${key}\\\\+`, 'g'), `:${key}--ESCAPED_PARAM_PLUS`)\n        .replace(\n          new RegExp(`:${key}(?!\\\\w)`, 'g'),\n          `--ESCAPED_PARAM_COLON${key}`\n        )\n    }\n  }\n  value = value\n    .replace(/(:|\\*|\\?|\\+|\\(|\\)|\\{|\\})/g, '\\\\$1')\n    .replace(/--ESCAPED_PARAM_PLUS/g, '+')\n    .replace(/--ESCAPED_PARAM_COLON/g, ':')\n    .replace(/--ESCAPED_PARAM_QUESTION/g, '?')\n    .replace(/--ESCAPED_PARAM_ASTERISKS/g, '*')\n\n  // the value needs to start with a forward-slash to be compiled\n  // correctly\n  return safeCompile(`/${value}`, { validate: false })(params).slice(1)\n}\n\nexport function parseDestination(args: {\n  destination: string\n  params: Readonly<Params>\n  query: Readonly<NextParsedUrlQuery>\n}) {\n  let escaped = args.destination\n  for (const param of Object.keys({ ...args.params, ...args.query })) {\n    if (!param) continue\n\n    escaped = escapeSegment(escaped, param)\n  }\n\n  const parsed = parseUrl(escaped)\n\n  let pathname = parsed.pathname\n  if (pathname) {\n    pathname = unescapeSegments(pathname)\n  }\n\n  let href = parsed.href\n  if (href) {\n    href = unescapeSegments(href)\n  }\n\n  let hostname = parsed.hostname\n  if (hostname) {\n    hostname = unescapeSegments(hostname)\n  }\n\n  let hash = parsed.hash\n  if (hash) {\n    hash = unescapeSegments(hash)\n  }\n\n  let search = parsed.search\n  if (search) {\n    search = unescapeSegments(search)\n  }\n\n  let origin = parsed.origin\n  if (origin) {\n    origin = unescapeSegments(origin)\n  }\n\n  return {\n    ...parsed,\n    pathname,\n    hostname,\n    href,\n    hash,\n    search,\n    origin,\n  }\n}\n\nexport function prepareDestination(args: {\n  appendParamsToQuery: boolean\n  destination: string\n  params: Params\n  query: NextParsedUrlQuery\n}) {\n  const parsedDestination = parseDestination(args)\n\n  const {\n    hostname: destHostname,\n    query: destQuery,\n    search: destSearch,\n  } = parsedDestination\n\n  // The following code assumes that the pathname here includes the hash if it's\n  // present.\n  let destPath = parsedDestination.pathname\n  if (parsedDestination.hash) {\n    destPath = `${destPath}${parsedDestination.hash}`\n  }\n\n  const destParams: (string | number)[] = []\n\n  const destPathParamKeys: Key[] = []\n  safePathToRegexp(destPath, destPathParamKeys)\n  for (const key of destPathParamKeys) {\n    destParams.push(key.name)\n  }\n\n  if (destHostname) {\n    const destHostnameParamKeys: Key[] = []\n    safePathToRegexp(destHostname, destHostnameParamKeys)\n    for (const key of destHostnameParamKeys) {\n      destParams.push(key.name)\n    }\n  }\n\n  const destPathCompiler = safeCompile(\n    destPath,\n    // we don't validate while compiling the destination since we should\n    // have already validated before we got to this point and validating\n    // breaks compiling destinations with named pattern params from the source\n    // e.g. /something:hello(.*) -> /another/:hello is broken with validation\n    // since compile validation is meant for reversing and not for inserting\n    // params from a separate path-regex into another\n    { validate: false }\n  )\n\n  let destHostnameCompiler\n  if (destHostname) {\n    destHostnameCompiler = safeCompile(destHostname, { validate: false })\n  }\n\n  // update any params in query values\n  for (const [key, strOrArray] of Object.entries(destQuery)) {\n    // the value needs to start with a forward-slash to be compiled\n    // correctly\n    if (Array.isArray(strOrArray)) {\n      destQuery[key] = strOrArray.map((value) =>\n        compileNonPath(unescapeSegments(value), args.params)\n      )\n    } else if (typeof strOrArray === 'string') {\n      destQuery[key] = compileNonPath(unescapeSegments(strOrArray), args.params)\n    }\n  }\n\n  // add path params to query if it's not a redirect and not\n  // already defined in destination query or path\n  let paramKeys = Object.keys(args.params).filter(\n    (name) => name !== 'nextInternalLocale'\n  )\n\n  if (\n    args.appendParamsToQuery &&\n    !paramKeys.some((key) => destParams.includes(key))\n  ) {\n    for (const key of paramKeys) {\n      if (!(key in destQuery)) {\n        destQuery[key] = args.params[key]\n      }\n    }\n  }\n\n  let newUrl\n\n  // The compiler also that the interception route marker is an unnamed param, hence '0',\n  // so we need to add it to the params object.\n  if (isInterceptionRouteAppPath(destPath)) {\n    for (const segment of destPath.split('/')) {\n      const marker = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n        segment.startsWith(m)\n      )\n      if (marker) {\n        if (marker === '(..)(..)') {\n          args.params['0'] = '(..)'\n          args.params['1'] = '(..)'\n        } else {\n          args.params['0'] = marker\n        }\n        break\n      }\n    }\n  }\n\n  try {\n    newUrl = destPathCompiler(args.params)\n\n    const [pathname, hash] = newUrl.split('#', 2)\n    if (destHostnameCompiler) {\n      parsedDestination.hostname = destHostnameCompiler(args.params)\n    }\n    parsedDestination.pathname = pathname\n    parsedDestination.hash = `${hash ? '#' : ''}${hash || ''}`\n    parsedDestination.search = destSearch\n      ? compileNonPath(destSearch, args.params)\n      : ''\n  } catch (err: any) {\n    if (err.message.match(/Expected .*? to not repeat, but got an array/)) {\n      throw new Error(\n        `To use a multi-match in the destination you must add \\`*\\` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match`\n      )\n    }\n    throw err\n  }\n\n  // Query merge order lowest priority to highest\n  // 1. initial URL query values\n  // 2. path segment values\n  // 3. destination specified query values\n  parsedDestination.query = {\n    ...args.query,\n    ...parsedDestination.query,\n  }\n\n  return {\n    newUrl,\n    destQuery,\n    parsedDestination,\n  }\n}\n","import type { OutgoingHttpHeaders } from 'http'\nimport {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../lib/constants'\n\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */\nexport function fromNodeOutgoingHttpHeaders(\n  nodeHeaders: OutgoingHttpHeaders\n): Headers {\n  const headers = new Headers()\n  for (let [key, value] of Object.entries(nodeHeaders)) {\n    const values = Array.isArray(value) ? value : [value]\n    for (let v of values) {\n      if (typeof v === 'undefined') continue\n      if (typeof v === 'number') {\n        v = v.toString()\n      }\n\n      headers.append(key, v)\n    }\n  }\n  return headers\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nexport function splitCookiesString(cookiesString: string) {\n  var cookiesStrings = []\n  var pos = 0\n  var start\n  var ch\n  var lastComma\n  var nextStart\n  var cookiesSeparatorFound\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1\n    }\n    return pos < cookiesString.length\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos)\n\n    return ch !== '=' && ch !== ';' && ch !== ','\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos\n    cookiesSeparatorFound = false\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos)\n      if (ch === ',') {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos\n        pos += 1\n\n        skipWhitespace()\n        nextStart = pos\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === '=') {\n          // we found cookies separator\n          cookiesSeparatorFound = true\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart\n          cookiesStrings.push(cookiesString.substring(start, lastComma))\n          start = pos\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1\n        }\n      } else {\n        pos += 1\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length))\n    }\n  }\n\n  return cookiesStrings\n}\n\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */\nexport function toNodeOutgoingHttpHeaders(\n  headers: Headers\n): OutgoingHttpHeaders {\n  const nodeHeaders: OutgoingHttpHeaders = {}\n  const cookies: string[] = []\n  if (headers) {\n    for (const [key, value] of headers.entries()) {\n      if (key.toLowerCase() === 'set-cookie') {\n        // We may have gotten a comma joined string of cookies, or multiple\n        // set-cookie headers. We need to merge them into one header array\n        // to represent all the cookies.\n        cookies.push(...splitCookiesString(value))\n        nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies\n      } else {\n        nodeHeaders[key] = value\n      }\n    }\n  }\n  return nodeHeaders\n}\n\n/**\n * Validate the correctness of a user-provided URL.\n */\nexport function validateURL(url: string | URL): string {\n  try {\n    return String(new URL(String(url)))\n  } catch (error: any) {\n    throw new Error(\n      `URL is malformed \"${String(\n        url\n      )}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`,\n      { cause: error }\n    )\n  }\n}\n\n/**\n * Normalizes `nxtP` and `nxtI` query param values to remove the prefix.\n * This function does not mutate the input key.\n */\nexport function normalizeNextQueryParam(key: string): null | string {\n  const prefixes = [NEXT_QUERY_PARAM_PREFIX, NEXT_INTERCEPTION_MARKER_PREFIX]\n  for (const prefix of prefixes) {\n    if (key !== prefix && key.startsWith(prefix)) {\n      return key.substring(prefix.length)\n    }\n  }\n  return null\n}\n","/**\n * Decodes a query path parameter.\n *\n * @param value - The value to decode.\n * @returns The decoded value.\n */\nexport function decodeQueryPathParameter(value: string) {\n  // When deployed to Vercel, the value may be encoded, so this attempts to\n  // decode it and returns the original value if it fails.\n  try {\n    return decodeURIComponent(value)\n  } catch {\n    return value\n  }\n}\n","import type { UrlWithParsedQuery } from 'url'\nimport { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\n\nconst DUMMY_ORIGIN = 'http://n'\n\nexport function isFullStringUrl(url: string) {\n  return /https?:\\/\\//.test(url)\n}\n\nexport function parseUrl(url: string): URL | undefined {\n  let parsed: URL | undefined = undefined\n  try {\n    parsed = new URL(url, DUMMY_ORIGIN)\n  } catch {}\n  return parsed\n}\n\nexport function parseReqUrl(url: string): UrlWithParsedQuery | undefined {\n  const parsedUrl: URL | undefined = parseUrl(url)\n\n  if (!parsedUrl) {\n    return\n  }\n\n  const query: Record<string, string | string[]> = {}\n\n  for (const key of parsedUrl.searchParams.keys()) {\n    const values = parsedUrl.searchParams.getAll(key)\n    query[key] = values.length > 1 ? values : values[0]\n  }\n\n  const legacyUrl: UrlWithParsedQuery = {\n    query,\n    hash: parsedUrl.hash,\n    search: parsedUrl.search,\n    path: parsedUrl.pathname,\n    pathname: parsedUrl.pathname,\n    href: `${parsedUrl.pathname}${parsedUrl.search}${parsedUrl.hash}`,\n    host: '',\n    hostname: '',\n    auth: '',\n    protocol: '',\n    slashes: null,\n    port: '',\n  }\n  return legacyUrl\n}\n\nexport function stripNextRscUnionQuery(relativeUrl: string): string {\n  const urlInstance = new URL(relativeUrl, DUMMY_ORIGIN)\n  urlInstance.searchParams.delete(NEXT_RSC_UNION_QUERY)\n\n  return urlInstance.pathname + urlInstance.search\n}\n","\"use strict\";\n\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) return obj;\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") return { default: obj };\n\n    var cache = _getRequireWildcardCache(nodeInterop);\n\n    if (cache && cache.has(obj)) return cache.get(obj);\n\n    var newObj = { __proto__: null };\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);\n            else newObj[key] = obj[key];\n        }\n    }\n\n    newObj.default = obj;\n\n    if (cache) cache.set(obj, newObj);\n\n    return newObj;\n}\nexports._ = _interop_require_wildcard;\n","// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { UrlObject } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport * as querystring from './querystring'\n\nconst slashedProtocols = /https?|ftp|gopher|file/\n\nexport function formatUrl(urlObj: UrlObject) {\n  let { auth, hostname } = urlObj\n  let protocol = urlObj.protocol || ''\n  let pathname = urlObj.pathname || ''\n  let hash = urlObj.hash || ''\n  let query = urlObj.query || ''\n  let host: string | false = false\n\n  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : ''\n\n  if (urlObj.host) {\n    host = auth + urlObj.host\n  } else if (hostname) {\n    host = auth + (~hostname.indexOf(':') ? `[${hostname}]` : hostname)\n    if (urlObj.port) {\n      host += ':' + urlObj.port\n    }\n  }\n\n  if (query && typeof query === 'object') {\n    query = String(querystring.urlQueryToSearchParams(query as ParsedUrlQuery))\n  }\n\n  let search = urlObj.search || (query && `?${query}`) || ''\n\n  if (protocol && !protocol.endsWith(':')) protocol += ':'\n\n  if (\n    urlObj.slashes ||\n    ((!protocol || slashedProtocols.test(protocol)) && host !== false)\n  ) {\n    host = '//' + (host || '')\n    if (pathname && pathname[0] !== '/') pathname = '/' + pathname\n  } else if (!host) {\n    host = ''\n  }\n\n  if (hash && hash[0] !== '#') hash = '#' + hash\n  if (search && search[0] !== '?') search = '?' + search\n\n  pathname = pathname.replace(/[?#]/g, encodeURIComponent)\n  search = search.replace('#', '%23')\n\n  return `${protocol}${host}${pathname}${search}${hash}`\n}\n\nexport const urlObjectKeys = [\n  'auth',\n  'hash',\n  'host',\n  'hostname',\n  'href',\n  'path',\n  'pathname',\n  'port',\n  'protocol',\n  'query',\n  'search',\n  'slashes',\n]\n\nexport function formatWithValidation(url: UrlObject): string {\n  if (process.env.NODE_ENV === 'development') {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach((key) => {\n        if (!urlObjectKeys.includes(key)) {\n          console.warn(\n            `Unknown key passed via urlObject into url.format: ${key}`\n          )\n        }\n      })\n    }\n  }\n\n  return formatUrl(url)\n}\n","import type { Rewrite } from '../lib/load-custom-routes'\nimport type { RouteMatchFn } from '../shared/lib/router/utils/route-matcher'\nimport type { NextConfig } from './config'\nimport type { BaseNextRequest } from './base-http'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { UrlWithParsedQuery } from 'url'\n\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { getPathMatch } from '../shared/lib/router/utils/path-match'\nimport { getNamedRouteRegex } from '../shared/lib/router/utils/route-regex'\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher'\nimport {\n  matchHas,\n  prepareDestination,\n} from '../shared/lib/router/utils/prepare-destination'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { normalizeRscURL } from '../shared/lib/router/utils/app-paths'\nimport {\n  NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER,\n  NEXT_CACHE_REVALIDATED_TAGS_HEADER,\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../lib/constants'\nimport { normalizeNextQueryParam } from './web/utils'\nimport type { IncomingHttpHeaders, IncomingMessage } from 'http'\nimport { decodeQueryPathParameter } from './lib/decode-query-path-parameter'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\nimport { parseReqUrl } from '../lib/url'\nimport { formatUrl } from '../shared/lib/router/utils/format-url'\n\nfunction filterInternalQuery(\n  query: Record<string, undefined | string | string[]>,\n  paramKeys: string[]\n) {\n  // this is used to pass query information in rewrites\n  // but should not be exposed in final query\n  delete query['nextInternalLocale']\n\n  for (const key in query) {\n    const isNextQueryPrefix =\n      key !== NEXT_QUERY_PARAM_PREFIX && key.startsWith(NEXT_QUERY_PARAM_PREFIX)\n\n    const isNextInterceptionMarkerPrefix =\n      key !== NEXT_INTERCEPTION_MARKER_PREFIX &&\n      key.startsWith(NEXT_INTERCEPTION_MARKER_PREFIX)\n\n    if (\n      isNextQueryPrefix ||\n      isNextInterceptionMarkerPrefix ||\n      paramKeys.includes(key)\n    ) {\n      delete query[key]\n    }\n  }\n}\n\nexport function normalizeCdnUrl(\n  req: BaseNextRequest | IncomingMessage,\n  paramKeys: string[]\n) {\n  // make sure to normalize req.url from CDNs to strip dynamic and rewrite\n  // params from the query which are added during routing\n  const _parsedUrl = parseReqUrl(req.url!)\n\n  // we can't normalize if we can't parse\n  if (!_parsedUrl) {\n    return req.url\n  }\n  delete (_parsedUrl as any).search\n  filterInternalQuery(_parsedUrl.query, paramKeys)\n\n  req.url = formatUrl(_parsedUrl)\n}\n\nexport function interpolateDynamicPath(\n  pathname: string,\n  params: ParsedUrlQuery,\n  defaultRouteRegex?: ReturnType<typeof getNamedRouteRegex> | undefined\n) {\n  if (!defaultRouteRegex) return pathname\n\n  for (const param of Object.keys(defaultRouteRegex.groups)) {\n    const { optional, repeat } = defaultRouteRegex.groups[param]\n    let builtParam = `[${repeat ? '...' : ''}${param}]`\n\n    if (optional) {\n      builtParam = `[${builtParam}]`\n    }\n\n    let paramValue: string\n    const value = params[param]\n\n    if (Array.isArray(value)) {\n      paramValue = value.map((v) => v && encodeURIComponent(v)).join('/')\n    } else if (value) {\n      paramValue = encodeURIComponent(value)\n    } else {\n      paramValue = ''\n    }\n\n    if (paramValue || optional) {\n      pathname = pathname.replaceAll(builtParam, paramValue)\n    }\n  }\n\n  return pathname\n}\n\nexport function normalizeDynamicRouteParams(\n  query: ParsedUrlQuery,\n  defaultRouteRegex: ReturnType<typeof getNamedRouteRegex>,\n  defaultRouteMatches: ParsedUrlQuery,\n  ignoreMissingOptional: boolean\n) {\n  let hasValidParams = true\n  let params: ParsedUrlQuery = {}\n\n  for (const key of Object.keys(defaultRouteRegex.groups)) {\n    let value: string | string[] | undefined = query[key]\n\n    if (typeof value === 'string') {\n      value = normalizeRscURL(value)\n    } else if (Array.isArray(value)) {\n      value = value.map(normalizeRscURL)\n    }\n\n    // if the value matches the default value we can't rely\n    // on the parsed params, this is used to signal if we need\n    // to parse x-now-route-matches or not\n    const defaultValue = defaultRouteMatches![key]\n    const isOptional = defaultRouteRegex!.groups[key].optional\n\n    const isDefaultValue = Array.isArray(defaultValue)\n      ? defaultValue.some((defaultVal) => {\n          return Array.isArray(value)\n            ? value.some((val) => val.includes(defaultVal))\n            : value?.includes(defaultVal)\n        })\n      : value?.includes(defaultValue as string)\n\n    if (\n      isDefaultValue ||\n      (typeof value === 'undefined' && !(isOptional && ignoreMissingOptional))\n    ) {\n      return { params: {}, hasValidParams: false }\n    }\n\n    // non-provided optional values should be undefined so normalize\n    // them to undefined\n    if (\n      isOptional &&\n      (!value ||\n        (Array.isArray(value) &&\n          value.length === 1 &&\n          // fallback optional catch-all SSG pages have\n          // [[...paramName]] for the root path on Vercel\n          (value[0] === 'index' || value[0] === `[[...${key}]]`)) ||\n        value === 'index' ||\n        value === `[[...${key}]]`)\n    ) {\n      value = undefined\n      delete query[key]\n    }\n\n    // query values from the proxy aren't already split into arrays\n    // so make sure to normalize catch-all values\n    if (\n      value &&\n      typeof value === 'string' &&\n      defaultRouteRegex!.groups[key].repeat\n    ) {\n      value = value.split('/')\n    }\n\n    if (value) {\n      params[key] = value\n    }\n  }\n\n  return {\n    params,\n    hasValidParams,\n  }\n}\n\nexport function getServerUtils({\n  page,\n  i18n,\n  basePath,\n  rewrites,\n  pageIsDynamic,\n  trailingSlash,\n  caseSensitive,\n}: {\n  page: string\n  i18n?: NextConfig['i18n']\n  basePath: string\n  rewrites: DeepReadonly<{\n    fallback?: ReadonlyArray<Rewrite>\n    afterFiles?: ReadonlyArray<Rewrite>\n    beforeFiles?: ReadonlyArray<Rewrite>\n  }>\n  pageIsDynamic: boolean\n  trailingSlash?: boolean\n  caseSensitive: boolean\n}) {\n  let defaultRouteRegex: ReturnType<typeof getNamedRouteRegex> | undefined\n  let dynamicRouteMatcher: RouteMatchFn | undefined\n  let defaultRouteMatches: ParsedUrlQuery | undefined\n\n  if (pageIsDynamic) {\n    defaultRouteRegex = getNamedRouteRegex(page, {\n      prefixRouteKeys: false,\n    })\n    dynamicRouteMatcher = getRouteMatcher(defaultRouteRegex)\n    defaultRouteMatches = dynamicRouteMatcher(page) as ParsedUrlQuery\n  }\n\n  function handleRewrites(\n    req: BaseNextRequest | IncomingMessage,\n    parsedUrl: DeepReadonly<UrlWithParsedQuery>\n  ) {\n    // Here we deep clone the parsedUrl to avoid mutating the original. We also\n    // cast this to a mutable type so we can mutate it within this scope.\n    const rewrittenParsedUrl = structuredClone(parsedUrl) as UrlWithParsedQuery\n    const rewriteParams: Record<string, string> = {}\n    let fsPathname = rewrittenParsedUrl.pathname\n\n    const matchesPage = () => {\n      const fsPathnameNoSlash = removeTrailingSlash(fsPathname || '')\n      return (\n        fsPathnameNoSlash === removeTrailingSlash(page) ||\n        dynamicRouteMatcher?.(fsPathnameNoSlash)\n      )\n    }\n\n    const checkRewrite = (rewrite: DeepReadonly<Rewrite>): boolean => {\n      const matcher = getPathMatch(\n        rewrite.source + (trailingSlash ? '(/)?' : ''),\n        {\n          removeUnnamedParams: true,\n          strict: true,\n          sensitive: !!caseSensitive,\n        }\n      )\n\n      if (!rewrittenParsedUrl.pathname) return false\n\n      let params = matcher(rewrittenParsedUrl.pathname)\n\n      if ((rewrite.has || rewrite.missing) && params) {\n        const hasParams = matchHas(\n          req,\n          rewrittenParsedUrl.query,\n          rewrite.has as Rewrite['has'],\n          rewrite.missing as Rewrite['missing']\n        )\n\n        if (hasParams) {\n          Object.assign(params, hasParams)\n        } else {\n          params = false\n        }\n      }\n\n      if (params) {\n        const { parsedDestination, destQuery } = prepareDestination({\n          appendParamsToQuery: true,\n          destination: rewrite.destination,\n          params: params,\n          query: rewrittenParsedUrl.query,\n        })\n\n        // if the rewrite destination is external break rewrite chain\n        if (parsedDestination.protocol) {\n          return true\n        }\n\n        Object.assign(rewriteParams, destQuery, params)\n        Object.assign(rewrittenParsedUrl.query, parsedDestination.query)\n        delete (parsedDestination as any).query\n\n        Object.assign(rewrittenParsedUrl, parsedDestination)\n\n        fsPathname = rewrittenParsedUrl.pathname\n        if (!fsPathname) return false\n\n        if (basePath) {\n          fsPathname = fsPathname.replace(new RegExp(`^${basePath}`), '') || '/'\n        }\n\n        if (i18n) {\n          const result = normalizeLocalePath(fsPathname, i18n.locales)\n          fsPathname = result.pathname\n          rewrittenParsedUrl.query.nextInternalLocale =\n            result.detectedLocale || params.nextInternalLocale\n        }\n\n        if (fsPathname === page) {\n          return true\n        }\n\n        if (pageIsDynamic && dynamicRouteMatcher) {\n          const dynamicParams = dynamicRouteMatcher(fsPathname)\n          if (dynamicParams) {\n            rewrittenParsedUrl.query = {\n              ...rewrittenParsedUrl.query,\n              ...dynamicParams,\n            }\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n\n    for (const rewrite of rewrites.beforeFiles || []) {\n      checkRewrite(rewrite)\n    }\n\n    if (fsPathname !== page) {\n      let finished = false\n\n      for (const rewrite of rewrites.afterFiles || []) {\n        finished = checkRewrite(rewrite)\n        if (finished) break\n      }\n\n      if (!finished && !matchesPage()) {\n        for (const rewrite of rewrites.fallback || []) {\n          finished = checkRewrite(rewrite)\n          if (finished) break\n        }\n      }\n    }\n\n    return { rewriteParams, rewrittenParsedUrl }\n  }\n\n  function getParamsFromRouteMatches(routeMatchesHeader: string) {\n    // If we don't have a default route regex, we can't get params from route\n    // matches\n    if (!defaultRouteRegex) return null\n\n    const { groups, routeKeys } = defaultRouteRegex\n\n    const matcher = getRouteMatcher({\n      re: {\n        // Simulate a RegExp match from the \\`req.url\\` input\n        exec: (str: string) => {\n          // Normalize all the prefixed query params.\n          const obj: Record<string, string> = Object.fromEntries(\n            new URLSearchParams(str)\n          )\n          for (const [key, value] of Object.entries(obj)) {\n            const normalizedKey = normalizeNextQueryParam(key)\n            if (!normalizedKey) continue\n\n            obj[normalizedKey] = value\n            delete obj[key]\n          }\n\n          // Use all the named route keys.\n          const result = {} as RegExpExecArray\n          for (const keyName of Object.keys(routeKeys)) {\n            const paramName = routeKeys[keyName]\n\n            // If this param name is not a valid parameter name, then skip it.\n            if (!paramName) continue\n\n            const group = groups[paramName]\n            const value = obj[keyName]\n\n            // When we're missing a required param, we can't match the route.\n            if (!group.optional && !value) return null\n\n            result[group.pos] = value\n          }\n\n          return result\n        },\n      },\n      groups,\n    })\n\n    const routeMatches = matcher(routeMatchesHeader)\n    if (!routeMatches) return null\n\n    return routeMatches\n  }\n\n  function normalizeQueryParams(\n    query: Record<string, string | string[] | undefined>,\n    routeParamKeys: Set<string>\n  ) {\n    // this is used to pass query information in rewrites\n    // but should not be exposed in final query\n    delete query['nextInternalLocale']\n\n    for (const [key, value] of Object.entries(query)) {\n      const normalizedKey = normalizeNextQueryParam(key)\n      if (!normalizedKey) continue\n\n      // Remove the prefixed key from the query params because we want\n      // to consume it for the dynamic route matcher.\n      delete query[key]\n      routeParamKeys.add(normalizedKey)\n\n      if (typeof value === 'undefined') continue\n\n      query[normalizedKey] = Array.isArray(value)\n        ? value.map((v) => decodeQueryPathParameter(v))\n        : decodeQueryPathParameter(value)\n    }\n  }\n\n  return {\n    handleRewrites,\n    defaultRouteRegex,\n    dynamicRouteMatcher,\n    defaultRouteMatches,\n    normalizeQueryParams,\n    getParamsFromRouteMatches,\n    /**\n     * Normalize dynamic route params.\n     *\n     * @param query - The query params to normalize.\n     * @param ignoreMissingOptional - Whether to ignore missing optional params.\n     * @returns The normalized params and whether they are valid.\n     */\n    normalizeDynamicRouteParams: (\n      query: ParsedUrlQuery,\n      ignoreMissingOptional: boolean\n    ) => {\n      if (!defaultRouteRegex || !defaultRouteMatches) {\n        return { params: {}, hasValidParams: false }\n      }\n\n      return normalizeDynamicRouteParams(\n        query,\n        defaultRouteRegex,\n        defaultRouteMatches,\n        ignoreMissingOptional\n      )\n    },\n\n    normalizeCdnUrl: (\n      req: BaseNextRequest | IncomingMessage,\n      paramKeys: string[]\n    ) => normalizeCdnUrl(req, paramKeys),\n\n    interpolateDynamicPath: (\n      pathname: string,\n      params: Record<string, undefined | string | string[]>\n    ) => interpolateDynamicPath(pathname, params, defaultRouteRegex),\n\n    filterInternalQuery: (query: ParsedUrlQuery, paramKeys: string[]) =>\n      filterInternalQuery(query, paramKeys),\n  }\n}\n\nexport function getPreviouslyRevalidatedTags(\n  headers: IncomingHttpHeaders,\n  previewModeId: string | undefined\n): string[] {\n  return typeof headers[NEXT_CACHE_REVALIDATED_TAGS_HEADER] === 'string' &&\n    headers[NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER] === previewModeId\n    ? headers[NEXT_CACHE_REVALIDATED_TAGS_HEADER].split(',')\n    : []\n}\n","import { isMetadataPage } from './is-metadata-route'\nimport path from '../../shared/lib/isomorphic/path'\nimport { interpolateDynamicPath } from '../../server/server-utils'\nimport { getNamedRouteRegex } from '../../shared/lib/router/utils/route-regex'\nimport { djb2Hash } from '../../shared/lib/hash'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep'\nimport {\n  isGroupSegment,\n  isParallelRouteSegment,\n} from '../../shared/lib/segment'\n\n/*\n * If there's special convention like (...) or @ in the page path,\n * Give it a unique hash suffix to avoid conflicts\n *\n * e.g.\n * /opengraph-image -> /opengraph-image\n * /(post)/opengraph-image.tsx -> /opengraph-image-[0-9a-z]{6}\n *\n * Sitemap is an exception, it should not have a suffix.\n * Each sitemap contains all the urls of sub routes, we don't have the case of duplicates `/(group)/sitemap.[ext]` and `/sitemap.[ext]` since they should be the same.\n * Hence we always normalize the urls for sitemap and do not append hash suffix, and ensure user-land only contains one sitemap per pathname.\n *\n * /sitemap -> /sitemap\n * /(post)/sitemap -> /sitemap\n */\nfunction getMetadataRouteSuffix(page: string) {\n  // Remove the last segment and get the parent pathname\n  // e.g. /parent/a/b/c -> /parent/a/b\n  // e.g. /parent/opengraph-image -> /parent\n  const parentPathname = path.dirname(page)\n  // Only apply suffix to metadata routes except for sitemaps\n  if (page.endsWith('/sitemap') || page.endsWith('/sitemap.xml')) {\n    return ''\n  }\n\n  // Calculate the hash suffix based on the parent path\n  let suffix = ''\n  // Check if there's any special characters in the parent pathname.\n  const segments = parentPathname.split('/')\n  if (\n    segments.some((seg) => isGroupSegment(seg) || isParallelRouteSegment(seg))\n  ) {\n    // Hash the parent path to get a unique suffix\n    suffix = djb2Hash(parentPathname).toString(36).slice(0, 6)\n  }\n  return suffix\n}\n\n/**\n * Fill the dynamic segment in the metadata route\n *\n * Example:\n * fillMetadataSegment('/a/[slug]', { params: { slug: 'b' } }, 'open-graph') -> '/a/b/open-graph'\n *\n */\nexport function fillMetadataSegment(\n  segment: string,\n  params: any,\n  lastSegment: string\n) {\n  const pathname = normalizeAppPath(segment)\n  const routeRegex = getNamedRouteRegex(pathname, {\n    prefixRouteKeys: false,\n  })\n  const route = interpolateDynamicPath(pathname, params, routeRegex)\n  const { name, ext } = path.parse(lastSegment)\n  const pagePath = path.posix.join(segment, name)\n  const suffix = getMetadataRouteSuffix(pagePath)\n  const routeSuffix = suffix ? `-${suffix}` : ''\n\n  return normalizePathSep(path.join(route, `${name}${routeSuffix}${ext}`))\n}\n\n/**\n * Map metadata page key to the corresponding route\n *\n * static file page key:    /app/robots.txt -> /robots.xml -> /robots.txt/route\n * dynamic route page key:  /app/robots.tsx -> /robots -> /robots.txt/route\n *\n * @param page\n * @returns\n */\nexport function normalizeMetadataRoute(page: string) {\n  if (!isMetadataPage(page)) {\n    return page\n  }\n  let route = page\n  let suffix = ''\n  if (page === '/robots') {\n    route += '.txt'\n  } else if (page === '/manifest') {\n    route += '.webmanifest'\n  } else {\n    suffix = getMetadataRouteSuffix(page)\n  }\n  // Support both /<metadata-route.ext> and custom routes /<metadata-route>/route.ts.\n  // If it's a metadata file route, we need to append /[id]/route to the page.\n  if (!route.endsWith('/route')) {\n    const { dir, name: baseName, ext } = path.parse(route)\n    route = path.posix.join(\n      dir,\n      `${baseName}${suffix ? `-${suffix}` : ''}${ext}`,\n      'route'\n    )\n  }\n\n  return route\n}\n\n// Normalize metadata route page to either a single route or a dynamic route.\n// e.g. Input: /sitemap/route\n// when isDynamic is false, single route -> /sitemap.xml/route\n// when isDynamic is false, dynamic route -> /sitemap/[__metadata_id__]/route\n// also works for pathname such as /sitemap -> /sitemap.xml, but will not append /route suffix\nexport function normalizeMetadataPageToRoute(page: string, isDynamic: boolean) {\n  const isRoute = page.endsWith('/route')\n  const routePagePath = isRoute ? page.slice(0, -'/route'.length) : page\n  const metadataRouteExtension = routePagePath.endsWith('/sitemap')\n    ? '.xml'\n    : ''\n  const mapped = isDynamic\n    ? `${routePagePath}/[__metadata_id__]`\n    : `${routePagePath}${metadataRouteExtension}`\n\n  return mapped + (isRoute ? '/route' : '')\n}\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-rsc']!.ReactServerDOMTurbopackStatic\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nconst { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/client/components/layout-router.js\"));\n","'use client'\n\nimport type {\n  CacheNode,\n  LazyCacheNode,\n} from '../../shared/lib/app-router-types'\nimport type { LoadingModuleData } from '../../shared/lib/app-router-types'\nimport type {\n  FlightRouterState,\n  FlightSegmentPath,\n  Segment,\n} from '../../shared/lib/app-router-types'\nimport type { ErrorComponent } from './error-boundary'\nimport {\n  ACTION_SERVER_PATCH,\n  type FocusAndScrollRef,\n} from './router-reducer/router-reducer-types'\n\nimport React, {\n  Activity,\n  useContext,\n  use,\n  startTransition,\n  Suspense,\n  useDeferredValue,\n  type JSX,\n  type ActivityProps,\n} from 'react'\nimport ReactDOM from 'react-dom'\nimport {\n  LayoutRouterContext,\n  GlobalLayoutRouterContext,\n  TemplateContext,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport { fetchServerResponse } from './router-reducer/fetch-server-response'\nimport { unresolvedThenable } from './unresolved-thenable'\nimport { ErrorBoundary } from './error-boundary'\nimport { matchSegment } from './match-segments'\nimport { disableSmoothScrollDuringRouteTransition } from '../../shared/lib/router/utils/disable-smooth-scroll'\nimport { RedirectBoundary } from './redirect-boundary'\nimport { HTTPAccessFallbackBoundary } from './http-access-fallback/error-boundary'\nimport { createRouterCacheKey } from './router-reducer/create-router-cache-key'\nimport { hasInterceptionRouteInCurrentTree } from './router-reducer/reducers/has-interception-route-in-current-tree'\nimport { dispatchAppRouterAction } from './use-action-queue'\nimport { useRouterBFCache, type RouterBFCacheEntry } from './bfcache'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport {\n  NavigationPromisesContext,\n  type NavigationPromises,\n} from '../../shared/lib/hooks-client-context.shared-runtime'\nimport { getParamValueFromCacheKey } from '../route-params'\nimport type { Params } from '../../server/request/params'\n\n/**\n * Add refetch marker to router state at the point of the current layout segment.\n * This ensures the response returned is not further down than the current layout segment.\n */\nfunction walkAddRefetch(\n  segmentPathToWalk: FlightSegmentPath | undefined,\n  treeToRecreate: FlightRouterState\n): FlightRouterState {\n  if (segmentPathToWalk) {\n    const [segment, parallelRouteKey] = segmentPathToWalk\n    const isLast = segmentPathToWalk.length === 2\n\n    if (matchSegment(treeToRecreate[0], segment)) {\n      if (treeToRecreate[1].hasOwnProperty(parallelRouteKey)) {\n        if (isLast) {\n          const subTree = walkAddRefetch(\n            undefined,\n            treeToRecreate[1][parallelRouteKey]\n          )\n          return [\n            treeToRecreate[0],\n            {\n              ...treeToRecreate[1],\n              [parallelRouteKey]: [\n                subTree[0],\n                subTree[1],\n                subTree[2],\n                'refetch',\n              ],\n            },\n          ]\n        }\n\n        return [\n          treeToRecreate[0],\n          {\n            ...treeToRecreate[1],\n            [parallelRouteKey]: walkAddRefetch(\n              segmentPathToWalk.slice(2),\n              treeToRecreate[1][parallelRouteKey]\n            ),\n          },\n        ]\n      }\n    }\n  }\n\n  return treeToRecreate\n}\n\nconst __DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = (\n  ReactDOM as any\n).__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE\n\n// TODO-APP: Replace with new React API for finding dom nodes without a `ref` when available\n/**\n * Wraps ReactDOM.findDOMNode with additional logic to hide React Strict Mode warning\n */\nfunction findDOMNode(\n  instance: React.ReactInstance | null | undefined\n): Element | Text | null {\n  // Tree-shake for server bundle\n  if (typeof window === 'undefined') return null\n\n  // __DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE.findDOMNode is null during module init.\n  // We need to lazily reference it.\n  const internal_reactDOMfindDOMNode =\n    __DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE.findDOMNode\n  return internal_reactDOMfindDOMNode(instance)\n}\n\nconst rectProperties = [\n  'bottom',\n  'height',\n  'left',\n  'right',\n  'top',\n  'width',\n  'x',\n  'y',\n] as const\n/**\n * Check if a HTMLElement is hidden or fixed/sticky position\n */\nfunction shouldSkipElement(element: HTMLElement) {\n  // we ignore fixed or sticky positioned elements since they'll likely pass the \"in-viewport\" check\n  // and will result in a situation we bail on scroll because of something like a fixed nav,\n  // even though the actual page content is offscreen\n  if (['sticky', 'fixed'].includes(getComputedStyle(element).position)) {\n    return true\n  }\n\n  // Uses `getBoundingClientRect` to check if the element is hidden instead of `offsetParent`\n  // because `offsetParent` doesn't consider document/body\n  const rect = element.getBoundingClientRect()\n  return rectProperties.every((item) => rect[item] === 0)\n}\n\n/**\n * Check if the top corner of the HTMLElement is in the viewport.\n */\nfunction topOfElementInViewport(element: HTMLElement, viewportHeight: number) {\n  const rect = element.getBoundingClientRect()\n  return rect.top >= 0 && rect.top <= viewportHeight\n}\n\n/**\n * Find the DOM node for a hash fragment.\n * If `top` the page has to scroll to the top of the page. This mirrors the browser's behavior.\n * If the hash fragment is an id, the page has to scroll to the element with that id.\n * If the hash fragment is a name, the page has to scroll to the first element with that name.\n */\nfunction getHashFragmentDomNode(hashFragment: string) {\n  // If the hash fragment is `top` the page has to scroll to the top of the page.\n  if (hashFragment === 'top') {\n    return document.body\n  }\n\n  // If the hash fragment is an id, the page has to scroll to the element with that id.\n  return (\n    document.getElementById(hashFragment) ??\n    // If the hash fragment is a name, the page has to scroll to the first element with that name.\n    document.getElementsByName(hashFragment)[0]\n  )\n}\ninterface ScrollAndFocusHandlerProps {\n  focusAndScrollRef: FocusAndScrollRef\n  children: React.ReactNode\n  segmentPath: FlightSegmentPath\n}\nclass InnerScrollAndFocusHandler extends React.Component<ScrollAndFocusHandlerProps> {\n  handlePotentialScroll = () => {\n    // Handle scroll and focus, it's only applied once in the first useEffect that triggers that changed.\n    const { focusAndScrollRef, segmentPath } = this.props\n\n    if (focusAndScrollRef.apply) {\n      // segmentPaths is an array of segment paths that should be scrolled to\n      // if the current segment path is not in the array, the scroll is not applied\n      // unless the array is empty, in which case the scroll is always applied\n      if (\n        focusAndScrollRef.segmentPaths.length !== 0 &&\n        !focusAndScrollRef.segmentPaths.some((scrollRefSegmentPath) =>\n          segmentPath.every((segment, index) =>\n            matchSegment(segment, scrollRefSegmentPath[index])\n          )\n        )\n      ) {\n        return\n      }\n\n      let domNode:\n        | ReturnType<typeof getHashFragmentDomNode>\n        | ReturnType<typeof findDOMNode> = null\n      const hashFragment = focusAndScrollRef.hashFragment\n\n      if (hashFragment) {\n        domNode = getHashFragmentDomNode(hashFragment)\n      }\n\n      // `findDOMNode` is tricky because it returns just the first child if the component is a fragment.\n      // This already caused a bug where the first child was a <link/> in head.\n      if (!domNode) {\n        domNode = findDOMNode(this)\n      }\n\n      // If there is no DOM node this layout-router level is skipped. It'll be handled higher-up in the tree.\n      if (!(domNode instanceof Element)) {\n        return\n      }\n\n      // Verify if the element is a HTMLElement and if we want to consider it for scroll behavior.\n      // If the element is skipped, try to select the next sibling and try again.\n      while (!(domNode instanceof HTMLElement) || shouldSkipElement(domNode)) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (domNode.parentElement?.localName === 'head') {\n            // TODO: We enter this state when metadata was rendered as part of the page or via Next.js.\n            // This is always a bug in Next.js and caused by React hoisting metadata.\n            // We need to replace `findDOMNode` in favor of Fragment Refs (when available) so that we can skip over metadata.\n          }\n        }\n\n        // No siblings found that match the criteria are found, so handle scroll higher up in the tree instead.\n        if (domNode.nextElementSibling === null) {\n          return\n        }\n        domNode = domNode.nextElementSibling\n      }\n\n      // State is mutated to ensure that the focus and scroll is applied only once.\n      focusAndScrollRef.apply = false\n      focusAndScrollRef.hashFragment = null\n      focusAndScrollRef.segmentPaths = []\n\n      disableSmoothScrollDuringRouteTransition(\n        () => {\n          // In case of hash scroll, we only need to scroll the element into view\n          if (hashFragment) {\n            ;(domNode as HTMLElement).scrollIntoView()\n\n            return\n          }\n          // Store the current viewport height because reading `clientHeight` causes a reflow,\n          // and it won't change during this function.\n          const htmlElement = document.documentElement\n          const viewportHeight = htmlElement.clientHeight\n\n          // If the element's top edge is already in the viewport, exit early.\n          if (topOfElementInViewport(domNode as HTMLElement, viewportHeight)) {\n            return\n          }\n\n          // Otherwise, try scrolling go the top of the document to be backward compatible with pages\n          // scrollIntoView() called on `<html/>` element scrolls horizontally on chrome and firefox (that shouldn't happen)\n          // We could use it to scroll horizontally following RTL but that also seems to be broken - it will always scroll left\n          // scrollLeft = 0 also seems to ignore RTL and manually checking for RTL is too much hassle so we will scroll just vertically\n          htmlElement.scrollTop = 0\n\n          // Scroll to domNode if domNode is not in viewport when scrolled to top of document\n          if (!topOfElementInViewport(domNode as HTMLElement, viewportHeight)) {\n            // Scroll into view doesn't scroll horizontally by default when not needed\n            ;(domNode as HTMLElement).scrollIntoView()\n          }\n        },\n        {\n          // We will force layout by querying domNode position\n          dontForceLayout: true,\n          onlyHashChange: focusAndScrollRef.onlyHashChange,\n        }\n      )\n\n      // Mutate after scrolling so that it can be read by `disableSmoothScrollDuringRouteTransition`\n      focusAndScrollRef.onlyHashChange = false\n\n      // Set focus on the element\n      domNode.focus()\n    }\n  }\n\n  componentDidMount() {\n    this.handlePotentialScroll()\n  }\n\n  componentDidUpdate() {\n    // Because this property is overwritten in handlePotentialScroll it's fine to always run it when true as it'll be set to false for subsequent renders.\n    if (this.props.focusAndScrollRef.apply) {\n      this.handlePotentialScroll()\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nfunction ScrollAndFocusHandler({\n  segmentPath,\n  children,\n}: {\n  segmentPath: FlightSegmentPath\n  children: React.ReactNode\n}) {\n  const context = useContext(GlobalLayoutRouterContext)\n  if (!context) {\n    throw new Error('invariant global layout router not mounted')\n  }\n\n  return (\n    <InnerScrollAndFocusHandler\n      segmentPath={segmentPath}\n      focusAndScrollRef={context.focusAndScrollRef}\n    >\n      {children}\n    </InnerScrollAndFocusHandler>\n  )\n}\n\n/**\n * InnerLayoutRouter handles rendering the provided segment based on the cache.\n */\nfunction InnerLayoutRouter({\n  tree,\n  segmentPath,\n  debugNameContext,\n  cacheNode,\n  params,\n  url,\n  isActive,\n}: {\n  tree: FlightRouterState\n  segmentPath: FlightSegmentPath\n  debugNameContext: string\n  cacheNode: CacheNode\n  params: Params\n  url: string\n  isActive: boolean\n}) {\n  const context = useContext(GlobalLayoutRouterContext)\n  const parentNavPromises = useContext(NavigationPromisesContext)\n\n  if (!context) {\n    throw new Error('invariant global layout router not mounted')\n  }\n\n  const { tree: fullTree } = context\n\n  // `rsc` represents the renderable node for this segment.\n\n  // If this segment has a `prefetchRsc`, it's the statically prefetched data.\n  // We should use that on initial render instead of `rsc`. Then we'll switch\n  // to `rsc` when the dynamic response streams in.\n  //\n  // If no prefetch data is available, then we go straight to rendering `rsc`.\n  const resolvedPrefetchRsc =\n    cacheNode.prefetchRsc !== null ? cacheNode.prefetchRsc : cacheNode.rsc\n\n  // We use `useDeferredValue` to handle switching between the prefetched and\n  // final values. The second argument is returned on initial render, then it\n  // re-renders with the first argument.\n  const rsc: any = useDeferredValue(cacheNode.rsc, resolvedPrefetchRsc)\n\n  // `rsc` is either a React node or a promise for a React node, except we\n  // special case `null` to represent that this segment's data is missing. If\n  // it's a promise, we need to unwrap it so we can determine whether or not the\n  // data is missing.\n  const resolvedRsc: React.ReactNode =\n    typeof rsc === 'object' && rsc !== null && typeof rsc.then === 'function'\n      ? use(rsc)\n      : rsc\n\n  if (!resolvedRsc) {\n    // The data for this segment is not available, and there's no pending\n    // navigation that will be able to fulfill it. We need to fetch more from\n    // the server and patch the cache.\n\n    // Only fetch data for the active segment. Inactive segments (rendered\n    // offscreen for bfcache) should not trigger fetches.\n    if (isActive) {\n      // Check if there's already a pending request.\n      let lazyData = cacheNode.lazyData\n      if (lazyData === null) {\n        /**\n         * Router state with refetch marker added\n         */\n        // TODO-APP: remove ''\n        const refetchTree = walkAddRefetch(['', ...segmentPath], fullTree)\n        const includeNextUrl = hasInterceptionRouteInCurrentTree(fullTree)\n        const navigatedAt = Date.now()\n        cacheNode.lazyData = lazyData = fetchServerResponse(\n          new URL(url, location.origin),\n          {\n            flightRouterState: refetchTree,\n            nextUrl: includeNextUrl\n              ? // We always send the last next-url, not the current when\n                // performing a dynamic request. This is because we update\n                // the next-url after a navigation, but we want the same\n                // interception route to be matched that used the last\n                // next-url.\n                context.previousNextUrl || context.nextUrl\n              : null,\n          }\n        ).then((serverResponse) => {\n          startTransition(() => {\n            dispatchAppRouterAction({\n              type: ACTION_SERVER_PATCH,\n              previousTree: fullTree,\n              serverResponse,\n              navigatedAt,\n            })\n          })\n\n          return serverResponse\n        })\n\n        // Suspend while waiting for lazyData to resolve\n        use(lazyData)\n      }\n    }\n    // Suspend infinitely as `changeByServerResponse` will cause a different part of the tree to be rendered.\n    // A falsey `resolvedRsc` indicates missing data -- we should not commit that branch, and we need to wait for the data to arrive.\n    use(unresolvedThenable) as never\n  }\n\n  // If we get to this point, then we know we have something we can render.\n  let content = resolvedRsc\n\n  // In dev, we create a NavigationPromisesContext containing the instrumented promises that provide\n  // `useSelectedLayoutSegment` and `useSelectedLayoutSegments`.\n  // Promises are cached outside of render to survive suspense retries.\n  let navigationPromises: NavigationPromises | null = null\n  if (process.env.NODE_ENV !== 'production') {\n    const { createNestedLayoutNavigationPromises } =\n      require('./navigation-devtools') as typeof import('./navigation-devtools')\n\n    navigationPromises = createNestedLayoutNavigationPromises(\n      tree,\n      parentNavPromises\n    )\n  }\n\n  if (navigationPromises) {\n    content = (\n      <NavigationPromisesContext.Provider value={navigationPromises}>\n        {resolvedRsc}\n      </NavigationPromisesContext.Provider>\n    )\n  }\n\n  const subtree = (\n    // The layout router context narrows down tree and childNodes at each level.\n    <LayoutRouterContext.Provider\n      value={{\n        parentTree: tree,\n        parentCacheNode: cacheNode,\n        parentSegmentPath: segmentPath,\n        parentParams: params,\n        debugNameContext: debugNameContext,\n\n        // TODO-APP: overriding of url for parallel routes\n        url: url,\n        isActive: isActive,\n      }}\n    >\n      {content}\n    </LayoutRouterContext.Provider>\n  )\n  // Ensure root layout is not wrapped in a div as the root layout renders `<html>`\n  return subtree\n}\n\n/**\n * Renders suspense boundary with the provided \"loading\" property as the fallback.\n * If no loading property is provided it renders the children without a suspense boundary.\n */\nfunction LoadingBoundary({\n  name,\n  loading,\n  children,\n}: {\n  name: ActivityProps['name']\n  loading: LoadingModuleData | Promise<LoadingModuleData>\n  children: React.ReactNode\n}): JSX.Element {\n  // If loading is a promise, unwrap it. This happens in cases where we haven't\n  // yet received the loading data from the server — which includes whether or\n  // not this layout has a loading component at all.\n  //\n  // It's OK to suspend here instead of inside the fallback because this\n  // promise will resolve simultaneously with the data for the segment itself.\n  // So it will never suspend for longer than it would have if we didn't use\n  // a Suspense fallback at all.\n  let loadingModuleData\n  if (\n    typeof loading === 'object' &&\n    loading !== null &&\n    typeof (loading as any).then === 'function'\n  ) {\n    const promiseForLoading = loading as Promise<LoadingModuleData>\n    loadingModuleData = use(promiseForLoading)\n  } else {\n    loadingModuleData = loading as LoadingModuleData\n  }\n\n  if (loadingModuleData) {\n    const loadingRsc = loadingModuleData[0]\n    const loadingStyles = loadingModuleData[1]\n    const loadingScripts = loadingModuleData[2]\n    return (\n      <Suspense\n        name={name}\n        fallback={\n          <>\n            {loadingStyles}\n            {loadingScripts}\n            {loadingRsc}\n          </>\n        }\n      >\n        {children}\n      </Suspense>\n    )\n  }\n\n  return <>{children}</>\n}\n\n/**\n * OuterLayoutRouter handles the current segment as well as <Offscreen> rendering of other segments.\n * It can be rendered next to each other with a different `parallelRouterKey`, allowing for Parallel routes.\n */\nexport default function OuterLayoutRouter({\n  parallelRouterKey,\n  error,\n  errorStyles,\n  errorScripts,\n  templateStyles,\n  templateScripts,\n  template,\n  notFound,\n  forbidden,\n  unauthorized,\n  segmentViewBoundaries,\n}: {\n  parallelRouterKey: string\n  error: ErrorComponent | undefined\n  errorStyles: React.ReactNode | undefined\n  errorScripts: React.ReactNode | undefined\n  templateStyles: React.ReactNode | undefined\n  templateScripts: React.ReactNode | undefined\n  template: React.ReactNode\n  notFound: React.ReactNode | undefined\n  forbidden: React.ReactNode | undefined\n  unauthorized: React.ReactNode | undefined\n  segmentViewBoundaries?: React.ReactNode\n}) {\n  const context = useContext(LayoutRouterContext)\n  if (!context) {\n    throw new Error('invariant expected layout router to be mounted')\n  }\n\n  const {\n    parentTree,\n    parentCacheNode,\n    parentSegmentPath,\n    parentParams,\n    url,\n    isActive,\n    debugNameContext,\n  } = context\n\n  // Get the CacheNode for this segment by reading it from the parent segment's\n  // child map.\n  const parentParallelRoutes = parentCacheNode.parallelRoutes\n  let segmentMap = parentParallelRoutes.get(parallelRouterKey)\n  // If the parallel router cache node does not exist yet, create it.\n  // This writes to the cache when there is no item in the cache yet. It never *overwrites* existing cache items which is why it's safe in concurrent mode.\n  if (!segmentMap) {\n    segmentMap = new Map()\n    parentParallelRoutes.set(parallelRouterKey, segmentMap)\n  }\n  const parentTreeSegment = parentTree[0]\n  const segmentPath =\n    parentSegmentPath === null\n      ? // TODO: The root segment value is currently omitted from the segment\n        // path. This has led to a bunch of special cases scattered throughout\n        // the code. We should clean this up.\n        [parallelRouterKey]\n      : parentSegmentPath.concat([parentTreeSegment, parallelRouterKey])\n\n  // The \"state\" key of a segment is the one passed to React — it represents the\n  // identity of the UI tree. Whenever the state key changes, the tree is\n  // recreated and the state is reset. In the App Router model, search params do\n  // not cause state to be lost, so two segments with the same segment path but\n  // different search params should have the same state key.\n  //\n  // The \"cache\" key of a segment, however, *does* include the search params, if\n  // it's possible that the segment accessed the search params on the server.\n  // (This only applies to page segments; layout segments cannot access search\n  // params on the server.)\n  const activeTree = parentTree[1][parallelRouterKey]\n  const activeSegment = activeTree[0]\n  const activeStateKey = createRouterCacheKey(activeSegment, true) // no search params\n\n  // At each level of the route tree, not only do we render the currently\n  // active segment — we also render the last N segments that were active at\n  // this level inside a hidden <Activity> boundary, to preserve their state\n  // if or when the user navigates to them again.\n  //\n  // bfcacheEntry is a linked list of FlightRouterStates.\n  let bfcacheEntry: RouterBFCacheEntry | null = useRouterBFCache(\n    activeTree,\n    activeStateKey\n  )\n  let children: Array<React.ReactNode> = []\n  do {\n    const tree = bfcacheEntry.tree\n    const stateKey = bfcacheEntry.stateKey\n    const segment = tree[0]\n    const cacheKey = createRouterCacheKey(segment)\n\n    // Read segment path from the parallel router cache node.\n    let cacheNode = segmentMap.get(cacheKey)\n    if (cacheNode === undefined) {\n      // When data is not available during rendering client-side we need to fetch\n      // it from the server.\n      const newLazyCacheNode: LazyCacheNode = {\n        lazyData: null,\n        rsc: null,\n        prefetchRsc: null,\n        head: null,\n        prefetchHead: null,\n        parallelRoutes: new Map(),\n        loading: null,\n        navigatedAt: -1,\n      }\n\n      // Flight data fetch kicked off during render and put into the cache.\n      cacheNode = newLazyCacheNode\n      segmentMap.set(cacheKey, newLazyCacheNode)\n    }\n\n    /*\n    - Error boundary\n      - Only renders error boundary if error component is provided.\n      - Rendered for each segment to ensure they have their own error state.\n      - When gracefully degrade for bots, skip rendering error boundary.\n    - Loading boundary\n      - Only renders suspense boundary if loading components is provided.\n      - Rendered for each segment to ensure they have their own loading state.\n      - Passed to the router during rendering to ensure it can be immediately rendered when suspending on a Flight fetch.\n  */\n\n    let segmentBoundaryTriggerNode: React.ReactNode = null\n    let segmentViewStateNode: React.ReactNode = null\n    if (process.env.NODE_ENV !== 'production') {\n      const { SegmentBoundaryTriggerNode, SegmentViewStateNode } =\n        require('../../next-devtools/userspace/app/segment-explorer-node') as typeof import('../../next-devtools/userspace/app/segment-explorer-node')\n\n      const pagePrefix = normalizeAppPath(url)\n      segmentViewStateNode = (\n        <SegmentViewStateNode key={pagePrefix} page={pagePrefix} />\n      )\n\n      segmentBoundaryTriggerNode = (\n        <>\n          <SegmentBoundaryTriggerNode />\n        </>\n      )\n    }\n\n    let params = parentParams\n    if (Array.isArray(segment)) {\n      // This segment contains a route param. Accumulate these as we traverse\n      // down the router tree. The result represents the set of params that\n      // the layout/page components are permitted to access below this point.\n      const paramName = segment[0]\n      const paramCacheKey = segment[1]\n      const paramType = segment[2]\n      const paramValue = getParamValueFromCacheKey(paramCacheKey, paramType)\n      if (paramValue !== null) {\n        params = {\n          ...parentParams,\n          [paramName]: paramValue,\n        }\n      }\n    }\n\n    const debugName = getBoundaryDebugNameFromSegment(segment)\n    // `debugNameContext` represents the nearest non-\"virtual\" parent segment.\n    // `getBoundaryDebugNameFromSegment` returns undefined for virtual segments.\n    // So if `debugName` is undefined, the context is passed through unchanged.\n    const childDebugNameContext = debugName ?? debugNameContext\n\n    // In practical terms, clicking this name in the Suspense DevTools\n    // should select the child slots of that layout.\n    //\n    // So the name we apply to the Activity boundary is actually based on\n    // the nearest parent segments.\n    //\n    // We skip over \"virtual\" parents, i.e. ones inserted by Next.js that\n    // don't correspond to application-defined code.\n    const isVirtual = debugName === undefined\n    const debugNameToDisplay = isVirtual ? undefined : debugNameContext\n\n    // TODO: The loading module data for a segment is stored on the parent, then\n    // applied to each of that parent segment's parallel route slots. In the\n    // simple case where there's only one parallel route (the `children` slot),\n    // this is no different from if the loading module data where stored on the\n    // child directly. But I'm not sure this actually makes sense when there are\n    // multiple parallel routes. It's not a huge issue because you always have\n    // the option to define a narrower loading boundary for a particular slot. But\n    // this sort of smells like an implementation accident to me.\n    const loadingModuleData = parentCacheNode.loading\n    let child = (\n      <TemplateContext.Provider\n        key={stateKey}\n        value={\n          <ScrollAndFocusHandler segmentPath={segmentPath}>\n            <ErrorBoundary\n              errorComponent={error}\n              errorStyles={errorStyles}\n              errorScripts={errorScripts}\n            >\n              <LoadingBoundary\n                name={debugNameToDisplay}\n                loading={loadingModuleData}\n              >\n                <HTTPAccessFallbackBoundary\n                  notFound={notFound}\n                  forbidden={forbidden}\n                  unauthorized={unauthorized}\n                >\n                  <RedirectBoundary>\n                    <InnerLayoutRouter\n                      url={url}\n                      tree={tree}\n                      params={params}\n                      cacheNode={cacheNode}\n                      segmentPath={segmentPath}\n                      debugNameContext={childDebugNameContext}\n                      isActive={isActive && stateKey === activeStateKey}\n                    />\n                    {segmentBoundaryTriggerNode}\n                  </RedirectBoundary>\n                </HTTPAccessFallbackBoundary>\n              </LoadingBoundary>\n            </ErrorBoundary>\n            {segmentViewStateNode}\n          </ScrollAndFocusHandler>\n        }\n      >\n        {templateStyles}\n        {templateScripts}\n        {template}\n      </TemplateContext.Provider>\n    )\n\n    if (process.env.NODE_ENV !== 'production') {\n      const { SegmentStateProvider } =\n        require('../../next-devtools/userspace/app/segment-explorer-node') as typeof import('../../next-devtools/userspace/app/segment-explorer-node')\n\n      child = (\n        <SegmentStateProvider key={stateKey}>\n          {child}\n          {segmentViewBoundaries}\n        </SegmentStateProvider>\n      )\n    }\n\n    if (process.env.__NEXT_CACHE_COMPONENTS) {\n      child = (\n        <Activity\n          name={debugNameToDisplay}\n          key={stateKey}\n          mode={stateKey === activeStateKey ? 'visible' : 'hidden'}\n        >\n          {child}\n        </Activity>\n      )\n    }\n\n    children.push(child)\n\n    bfcacheEntry = bfcacheEntry.next\n  } while (bfcacheEntry !== null)\n\n  return children\n}\n\nfunction getBoundaryDebugNameFromSegment(segment: Segment): string | undefined {\n  if (segment === '/') {\n    // Reached the root\n    return '/'\n  }\n  if (typeof segment === 'string') {\n    if (isVirtualLayout(segment)) {\n      return undefined\n    } else {\n      return segment + '/'\n    }\n  }\n  const paramCacheKey = segment[1]\n  return paramCacheKey + '/'\n}\n\nfunction isVirtualLayout(segment: string): boolean {\n  return (\n    // This is inserted by the loader. We should consider encoding these\n    // in a more special way instead of checking the name, to distinguish them\n    // from app-defined groups.\n    segment === '(slot)'\n  )\n}\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nconst { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/client/components/render-from-template-context.js\"));\n","'use client'\n\nimport React, { useContext, type JSX } from 'react'\nimport { TemplateContext } from '../../shared/lib/app-router-context.shared-runtime'\n\nexport default function RenderFromTemplateContext(): JSX.Element {\n  const children = useContext(TemplateContext)\n  return <>{children}</>\n}\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nconst { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/client/components/client-page.js\"));\n","'use client'\n\nimport type { ParsedUrlQuery } from 'querystring'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nimport type { Params } from '../../server/request/params'\nimport { LayoutRouterContext } from '../../shared/lib/app-router-context.shared-runtime'\nimport { use } from 'react'\nimport { urlSearchParamsToParsedUrlQuery } from '../route-params'\nimport { SearchParamsContext } from '../../shared/lib/hooks-client-context.shared-runtime'\n\n/**\n * When the Page is a client component we send the params and searchParams to this client wrapper\n * where they are turned into dynamically tracked values before being passed to the actual Page component.\n *\n * additionally we may send promises representing the params and searchParams. We don't ever use these passed\n * values but it can be necessary for the sender to send a Promise that doesn't resolve in certain situations.\n * It is up to the caller to decide if the promises are needed.\n */\nexport function ClientPageRoot({\n  Component,\n  serverProvidedParams,\n}: {\n  Component: React.ComponentType<any>\n  serverProvidedParams: null | {\n    searchParams: ParsedUrlQuery\n    params: Params\n    promises: Array<Promise<any>> | null\n  }\n}) {\n  let searchParams: ParsedUrlQuery\n  let params: Params\n  if (serverProvidedParams !== null) {\n    searchParams = serverProvidedParams.searchParams\n    params = serverProvidedParams.params\n  } else {\n    // When Cache Components is enabled, the server does not pass the params as\n    // props; they are parsed on the client and passed via context.\n    const layoutRouterContext = use(LayoutRouterContext)\n    params =\n      layoutRouterContext !== null ? layoutRouterContext.parentParams : {}\n\n    // This is an intentional behavior change: when Cache Components is enabled,\n    // client segments receive the \"canonical\" search params, not the\n    // rewritten ones. Users should either call useSearchParams directly or pass\n    // the rewritten ones in from a Server Component.\n    // TODO: Log a deprecation error when this object is accessed\n    searchParams = urlSearchParamsToParsedUrlQuery(use(SearchParamsContext)!)\n  }\n\n  if (typeof window === 'undefined') {\n    const { workAsyncStorage } =\n      require('../../server/app-render/work-async-storage.external') as typeof import('../../server/app-render/work-async-storage.external')\n\n    let clientSearchParams: Promise<ParsedUrlQuery>\n    let clientParams: Promise<Params>\n    // We are going to instrument the searchParams prop with tracking for the\n    // appropriate context. We wrap differently in prerendering vs rendering\n    const store = workAsyncStorage.getStore()\n    if (!store) {\n      throw new InvariantError(\n        'Expected workStore to exist when handling searchParams in a client Page.'\n      )\n    }\n\n    const { createSearchParamsFromClient } =\n      require('../../server/request/search-params') as typeof import('../../server/request/search-params')\n    clientSearchParams = createSearchParamsFromClient(searchParams, store)\n\n    const { createParamsFromClient } =\n      require('../../server/request/params') as typeof import('../../server/request/params')\n    clientParams = createParamsFromClient(params, store)\n\n    return <Component params={clientParams} searchParams={clientSearchParams} />\n  } else {\n    const { createRenderSearchParamsFromClient } =\n      require('../request/search-params.browser') as typeof import('../request/search-params.browser')\n    const clientSearchParams = createRenderSearchParamsFromClient(searchParams)\n    const { createRenderParamsFromClient } =\n      require('../request/params.browser') as typeof import('../request/params.browser')\n    const clientParams = createRenderParamsFromClient(params)\n\n    return <Component params={clientParams} searchParams={clientSearchParams} />\n  }\n}\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nconst { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/client/components/client-segment.js\"));\n","'use client'\n\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nimport type { Params } from '../../server/request/params'\nimport { LayoutRouterContext } from '../../shared/lib/app-router-context.shared-runtime'\nimport { use } from 'react'\n\n/**\n * When the Page is a client component we send the params to this client wrapper\n * where they are turned into dynamically tracked values before being passed to the actual Segment component.\n *\n * additionally we may send a promise representing params. We don't ever use this passed\n * value but it can be necessary for the sender to send a Promise that doesn't resolve in certain situations\n * such as when cacheComponents is enabled. It is up to the caller to decide if the promises are needed.\n */\nexport function ClientSegmentRoot({\n  Component,\n  slots,\n  serverProvidedParams,\n}: {\n  Component: React.ComponentType<any>\n  slots: { [key: string]: React.ReactNode }\n  serverProvidedParams: null | {\n    params: Params\n    promises: Array<Promise<any>> | null\n  }\n}) {\n  let params: Params\n  if (serverProvidedParams !== null) {\n    params = serverProvidedParams.params\n  } else {\n    // When Cache Components is enabled, the server does not pass the params\n    // as props; they are parsed on the client and passed via context.\n    const layoutRouterContext = use(LayoutRouterContext)\n    params =\n      layoutRouterContext !== null ? layoutRouterContext.parentParams : {}\n  }\n\n  if (typeof window === 'undefined') {\n    const { workAsyncStorage } =\n      require('../../server/app-render/work-async-storage.external') as typeof import('../../server/app-render/work-async-storage.external')\n\n    let clientParams: Promise<Params>\n    // We are going to instrument the searchParams prop with tracking for the\n    // appropriate context. We wrap differently in prerendering vs rendering\n    const store = workAsyncStorage.getStore()\n    if (!store) {\n      throw new InvariantError(\n        'Expected workStore to exist when handling params in a client segment such as a Layout or Template.'\n      )\n    }\n\n    const { createParamsFromClient } =\n      require('../../server/request/params') as typeof import('../../server/request/params')\n    clientParams = createParamsFromClient(params, store)\n\n    return <Component {...slots} params={clientParams} />\n  } else {\n    const { createRenderParamsFromClient } =\n      require('../request/params.browser') as typeof import('../request/params.browser')\n    const clientParams = createRenderParamsFromClient(params)\n    return <Component {...slots} params={clientParams} />\n  }\n}\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nconst { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/client/components/http-access-fallback/error-boundary.js\"));\n","'use client'\n\n/**\n * HTTPAccessFallbackBoundary is a boundary that catches errors and renders a\n * fallback component for HTTP errors.\n *\n * It receives the status code, and determine if it should render fallbacks for few HTTP 4xx errors.\n *\n * e.g. 404\n * 404 represents not found, and the fallback component pair contains the component and its styles.\n *\n */\n\nimport React, { useContext } from 'react'\nimport { useUntrackedPathname } from '../navigation-untracked'\nimport {\n  HTTPAccessErrorStatus,\n  getAccessFallbackHTTPStatus,\n  getAccessFallbackErrorTypeByStatus,\n  isHTTPAccessFallbackError,\n} from './http-access-fallback'\nimport { warnOnce } from '../../../shared/lib/utils/warn-once'\nimport { MissingSlotContext } from '../../../shared/lib/app-router-context.shared-runtime'\n\ninterface HTTPAccessFallbackBoundaryProps {\n  notFound?: React.ReactNode\n  forbidden?: React.ReactNode\n  unauthorized?: React.ReactNode\n  // TODO: Make this required once `React.createElement` understands that positional args go into children\n  children?: React.ReactNode\n  missingSlots?: Set<string>\n}\n\ninterface HTTPAccessFallbackErrorBoundaryProps\n  extends HTTPAccessFallbackBoundaryProps {\n  pathname: string | null\n  missingSlots?: Set<string>\n}\n\ninterface HTTPAccessBoundaryState {\n  triggeredStatus: number | undefined\n  previousPathname: string | null\n}\n\nclass HTTPAccessFallbackErrorBoundary extends React.Component<\n  HTTPAccessFallbackErrorBoundaryProps,\n  HTTPAccessBoundaryState\n> {\n  constructor(props: HTTPAccessFallbackErrorBoundaryProps) {\n    super(props)\n    this.state = {\n      triggeredStatus: undefined,\n      previousPathname: props.pathname,\n    }\n  }\n\n  componentDidCatch(): void {\n    if (\n      process.env.NODE_ENV === 'development' &&\n      this.props.missingSlots &&\n      this.props.missingSlots.size > 0 &&\n      // A missing children slot is the typical not-found case, so no need to warn\n      !this.props.missingSlots.has('children')\n    ) {\n      let warningMessage =\n        'No default component was found for a parallel route rendered on this page. Falling back to nearest NotFound boundary.\\n' +\n        'Learn more: https://nextjs.org/docs/app/building-your-application/routing/parallel-routes#defaultjs\\n\\n'\n\n      const formattedSlots = Array.from(this.props.missingSlots)\n        .sort((a, b) => a.localeCompare(b))\n        .map((slot) => `@${slot}`)\n        .join(', ')\n\n      warningMessage += 'Missing slots: ' + formattedSlots\n\n      warnOnce(warningMessage)\n    }\n  }\n\n  static getDerivedStateFromError(error: any) {\n    if (isHTTPAccessFallbackError(error)) {\n      const httpStatus = getAccessFallbackHTTPStatus(error)\n      return {\n        triggeredStatus: httpStatus,\n      }\n    }\n    // Re-throw if error is not for 404\n    throw error\n  }\n\n  static getDerivedStateFromProps(\n    props: HTTPAccessFallbackErrorBoundaryProps,\n    state: HTTPAccessBoundaryState\n  ): HTTPAccessBoundaryState | null {\n    /**\n     * Handles reset of the error boundary when a navigation happens.\n     * Ensures the error boundary does not stay enabled when navigating to a new page.\n     * Approach of setState in render is safe as it checks the previous pathname and then overrides\n     * it as outlined in https://react.dev/reference/react/useState#storing-information-from-previous-renders\n     */\n    if (props.pathname !== state.previousPathname && state.triggeredStatus) {\n      return {\n        triggeredStatus: undefined,\n        previousPathname: props.pathname,\n      }\n    }\n    return {\n      triggeredStatus: state.triggeredStatus,\n      previousPathname: props.pathname,\n    }\n  }\n\n  render() {\n    const { notFound, forbidden, unauthorized, children } = this.props\n    const { triggeredStatus } = this.state\n    const errorComponents = {\n      [HTTPAccessErrorStatus.NOT_FOUND]: notFound,\n      [HTTPAccessErrorStatus.FORBIDDEN]: forbidden,\n      [HTTPAccessErrorStatus.UNAUTHORIZED]: unauthorized,\n    }\n\n    if (triggeredStatus) {\n      const isNotFound =\n        triggeredStatus === HTTPAccessErrorStatus.NOT_FOUND && notFound\n      const isForbidden =\n        triggeredStatus === HTTPAccessErrorStatus.FORBIDDEN && forbidden\n      const isUnauthorized =\n        triggeredStatus === HTTPAccessErrorStatus.UNAUTHORIZED && unauthorized\n\n      // If there's no matched boundary in this layer, keep throwing the error by rendering the children\n      if (!(isNotFound || isForbidden || isUnauthorized)) {\n        return children\n      }\n\n      return (\n        <>\n          <meta name=\"robots\" content=\"noindex\" />\n          {process.env.NODE_ENV === 'development' && (\n            <meta\n              name=\"boundary-next-error\"\n              content={getAccessFallbackErrorTypeByStatus(triggeredStatus)}\n            />\n          )}\n          {errorComponents[triggeredStatus]}\n        </>\n      )\n    }\n\n    return children\n  }\n}\n\nexport function HTTPAccessFallbackBoundary({\n  notFound,\n  forbidden,\n  unauthorized,\n  children,\n}: HTTPAccessFallbackBoundaryProps) {\n  // When we're rendering the missing params shell, this will return null. This\n  // is because we won't be rendering any not found boundaries or error\n  // boundaries for the missing params shell. When this runs on the client\n  // (where these error can occur), we will get the correct pathname.\n  const pathname = useUntrackedPathname()\n  const missingSlots = useContext(MissingSlotContext)\n  const hasErrorFallback = !!(notFound || forbidden || unauthorized)\n\n  if (hasErrorFallback) {\n    return (\n      <HTTPAccessFallbackErrorBoundary\n        pathname={pathname}\n        notFound={notFound}\n        forbidden={forbidden}\n        unauthorized={unauthorized}\n        missingSlots={missingSlots}\n      >\n        {children}\n      </HTTPAccessFallbackErrorBoundary>\n    )\n  }\n\n  return <>{children}</>\n}\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nconst { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/metadata/generate/icon-mark.js\"));\n","'use client'\n\n// This is a client component that only renders during SSR,\n// but will be replaced during streaming with an icon insertion script tag.\n// We don't want it to be presented anywhere so it's only visible during streaming,\n// right after the icon meta tags so that browser can pick it up as soon as it's rendered.\n// Note: we don't just emit the script here because we only need the script if it's not in the head,\n// and we need it to be hoistable alongside the other metadata but sync scripts are not hoistable.\nexport const IconMark = () => {\n  if (typeof window !== 'undefined') {\n    return null\n  }\n  return <meta name=\"«nxt-icon»\" />\n}\n","/**\n * This module is for next.js server internal usage of path module.\n * It will use native path module for nodejs runtime.\n * It will use path-browserify polyfill for edge runtime.\n */\nlet path\n\nif (process.env.NEXT_RUNTIME === 'edge') {\n  path = require('next/dist/compiled/path-browserify')\n} else {\n  path = require('path')\n}\n\nmodule.exports = path\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nconst { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/.pnpm/next@16.0.1_@babel+core@7.2_8c0b5e8e5b95ee81267902a24f16aaed/node_modules/next/dist/esm/lib/framework/boundary-components.js\"));\n","'use client'\n\nimport type { ReactNode } from 'react'\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n  ROOT_LAYOUT_BOUNDARY_NAME,\n} from './boundary-constants'\n\n// We use a namespace object to allow us to recover the name of the function\n// at runtime even when production bundling/minification is used.\nconst NameSpace = {\n  [METADATA_BOUNDARY_NAME]: function ({ children }: { children: ReactNode }) {\n    return children\n  },\n  [VIEWPORT_BOUNDARY_NAME]: function ({ children }: { children: ReactNode }) {\n    return children\n  },\n  [OUTLET_BOUNDARY_NAME]: function ({ children }: { children: ReactNode }) {\n    return children\n  },\n  [ROOT_LAYOUT_BOUNDARY_NAME]: function ({\n    children,\n  }: {\n    children: ReactNode\n  }) {\n    return children\n  },\n}\n\nexport const MetadataBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[METADATA_BOUNDARY_NAME.slice(0) as typeof METADATA_BOUNDARY_NAME]\n\nexport const ViewportBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[VIEWPORT_BOUNDARY_NAME.slice(0) as typeof VIEWPORT_BOUNDARY_NAME]\n\nexport const OutletBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[OUTLET_BOUNDARY_NAME.slice(0) as typeof OUTLET_BOUNDARY_NAME]\n\nexport const RootLayoutBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[\n    ROOT_LAYOUT_BOUNDARY_NAME.slice(0) as typeof ROOT_LAYOUT_BOUNDARY_NAME\n  ]\n","(()=>{\"use strict\";var e={328:e=>{function hash(e){var r=5381,_=e.length;while(_){r=r*33^e.charCodeAt(--_)}return r>>>0}e.exports=hash}};var r={};function __nccwpck_require__(_){var a=r[_];if(a!==undefined){return a.exports}var t=r[_]={exports:{}};var i=true;try{e[_](t,t.exports,__nccwpck_require__);i=false}finally{if(i)delete r[_]}return t.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var _=__nccwpck_require__(328);module.exports=_})();","(function(){\"use strict\";var e={879:function(e,t){const{hasOwnProperty:n}=Object.prototype;const r=configure();r.configure=configure;r.stringify=r;r.default=r;t.stringify=r;t.configure=configure;e.exports=r;const i=/[\\u0000-\\u001f\\u0022\\u005c\\ud800-\\udfff]/;function strEscape(e){if(e.length<5e3&&!i.test(e)){return`\"${e}\"`}return JSON.stringify(e)}function sort(e,t){if(e.length>200||t){return e.sort(t)}for(let t=1;t<e.length;t++){const n=e[t];let r=t;while(r!==0&&e[r-1]>n){e[r]=e[r-1];r--}e[r]=n}return e}const f=Object.getOwnPropertyDescriptor(Object.getPrototypeOf(Object.getPrototypeOf(new Int8Array)),Symbol.toStringTag).get;function isTypedArrayWithEntries(e){return f.call(e)!==undefined&&e.length!==0}function stringifyTypedArray(e,t,n){if(e.length<n){n=e.length}const r=t===\",\"?\"\":\" \";let i=`\"0\":${r}${e[0]}`;for(let f=1;f<n;f++){i+=`${t}\"${f}\":${r}${e[f]}`}return i}function getCircularValueOption(e){if(n.call(e,\"circularValue\")){const t=e.circularValue;if(typeof t===\"string\"){return`\"${t}\"`}if(t==null){return t}if(t===Error||t===TypeError){return{toString(){throw new TypeError(\"Converting circular structure to JSON\")}}}throw new TypeError('The \"circularValue\" argument must be of type string or the value null or undefined')}return'\"[Circular]\"'}function getDeterministicOption(e){let t;if(n.call(e,\"deterministic\")){t=e.deterministic;if(typeof t!==\"boolean\"&&typeof t!==\"function\"){throw new TypeError('The \"deterministic\" argument must be of type boolean or comparator function')}}return t===undefined?true:t}function getBooleanOption(e,t){let r;if(n.call(e,t)){r=e[t];if(typeof r!==\"boolean\"){throw new TypeError(`The \"${t}\" argument must be of type boolean`)}}return r===undefined?true:r}function getPositiveIntegerOption(e,t){let r;if(n.call(e,t)){r=e[t];if(typeof r!==\"number\"){throw new TypeError(`The \"${t}\" argument must be of type number`)}if(!Number.isInteger(r)){throw new TypeError(`The \"${t}\" argument must be an integer`)}if(r<1){throw new RangeError(`The \"${t}\" argument must be >= 1`)}}return r===undefined?Infinity:r}function getItemCount(e){if(e===1){return\"1 item\"}return`${e} items`}function getUniqueReplacerSet(e){const t=new Set;for(const n of e){if(typeof n===\"string\"||typeof n===\"number\"){t.add(String(n))}}return t}function getStrictOption(e){if(n.call(e,\"strict\")){const t=e.strict;if(typeof t!==\"boolean\"){throw new TypeError('The \"strict\" argument must be of type boolean')}if(t){return e=>{let t=`Object can not safely be stringified. Received type ${typeof e}`;if(typeof e!==\"function\")t+=` (${e.toString()})`;throw new Error(t)}}}}function configure(e){e={...e};const t=getStrictOption(e);if(t){if(e.bigint===undefined){e.bigint=false}if(!(\"circularValue\"in e)){e.circularValue=Error}}const n=getCircularValueOption(e);const r=getBooleanOption(e,\"bigint\");const i=getDeterministicOption(e);const f=typeof i===\"function\"?i:undefined;const u=getPositiveIntegerOption(e,\"maximumDepth\");const o=getPositiveIntegerOption(e,\"maximumBreadth\");function stringifyFnReplacer(e,s,l,c,a,g){let p=s[e];if(typeof p===\"object\"&&p!==null&&typeof p.toJSON===\"function\"){p=p.toJSON(e)}p=c.call(s,e,p);switch(typeof p){case\"string\":return strEscape(p);case\"object\":{if(p===null){return\"null\"}if(l.indexOf(p)!==-1){return n}let e=\"\";let t=\",\";const r=g;if(Array.isArray(p)){if(p.length===0){return\"[]\"}if(u<l.length+1){return'\"[Array]\"'}l.push(p);if(a!==\"\"){g+=a;e+=`\\n${g}`;t=`,\\n${g}`}const n=Math.min(p.length,o);let i=0;for(;i<n-1;i++){const n=stringifyFnReplacer(String(i),p,l,c,a,g);e+=n!==undefined?n:\"null\";e+=t}const f=stringifyFnReplacer(String(i),p,l,c,a,g);e+=f!==undefined?f:\"null\";if(p.length-1>o){const n=p.length-o-1;e+=`${t}\"... ${getItemCount(n)} not stringified\"`}if(a!==\"\"){e+=`\\n${r}`}l.pop();return`[${e}]`}let s=Object.keys(p);const y=s.length;if(y===0){return\"{}\"}if(u<l.length+1){return'\"[Object]\"'}let d=\"\";let h=\"\";if(a!==\"\"){g+=a;t=`,\\n${g}`;d=\" \"}const $=Math.min(y,o);if(i&&!isTypedArrayWithEntries(p)){s=sort(s,f)}l.push(p);for(let n=0;n<$;n++){const r=s[n];const i=stringifyFnReplacer(r,p,l,c,a,g);if(i!==undefined){e+=`${h}${strEscape(r)}:${d}${i}`;h=t}}if(y>o){const n=y-o;e+=`${h}\"...\":${d}\"${getItemCount(n)} not stringified\"`;h=t}if(a!==\"\"&&h.length>1){e=`\\n${g}${e}\\n${r}`}l.pop();return`{${e}}`}case\"number\":return isFinite(p)?String(p):t?t(p):\"null\";case\"boolean\":return p===true?\"true\":\"false\";case\"undefined\":return undefined;case\"bigint\":if(r){return String(p)}default:return t?t(p):undefined}}function stringifyArrayReplacer(e,i,f,s,l,c){if(typeof i===\"object\"&&i!==null&&typeof i.toJSON===\"function\"){i=i.toJSON(e)}switch(typeof i){case\"string\":return strEscape(i);case\"object\":{if(i===null){return\"null\"}if(f.indexOf(i)!==-1){return n}const e=c;let t=\"\";let r=\",\";if(Array.isArray(i)){if(i.length===0){return\"[]\"}if(u<f.length+1){return'\"[Array]\"'}f.push(i);if(l!==\"\"){c+=l;t+=`\\n${c}`;r=`,\\n${c}`}const n=Math.min(i.length,o);let a=0;for(;a<n-1;a++){const e=stringifyArrayReplacer(String(a),i[a],f,s,l,c);t+=e!==undefined?e:\"null\";t+=r}const g=stringifyArrayReplacer(String(a),i[a],f,s,l,c);t+=g!==undefined?g:\"null\";if(i.length-1>o){const e=i.length-o-1;t+=`${r}\"... ${getItemCount(e)} not stringified\"`}if(l!==\"\"){t+=`\\n${e}`}f.pop();return`[${t}]`}f.push(i);let a=\"\";if(l!==\"\"){c+=l;r=`,\\n${c}`;a=\" \"}let g=\"\";for(const e of s){const n=stringifyArrayReplacer(e,i[e],f,s,l,c);if(n!==undefined){t+=`${g}${strEscape(e)}:${a}${n}`;g=r}}if(l!==\"\"&&g.length>1){t=`\\n${c}${t}\\n${e}`}f.pop();return`{${t}}`}case\"number\":return isFinite(i)?String(i):t?t(i):\"null\";case\"boolean\":return i===true?\"true\":\"false\";case\"undefined\":return undefined;case\"bigint\":if(r){return String(i)}default:return t?t(i):undefined}}function stringifyIndent(e,s,l,c,a){switch(typeof s){case\"string\":return strEscape(s);case\"object\":{if(s===null){return\"null\"}if(typeof s.toJSON===\"function\"){s=s.toJSON(e);if(typeof s!==\"object\"){return stringifyIndent(e,s,l,c,a)}if(s===null){return\"null\"}}if(l.indexOf(s)!==-1){return n}const t=a;if(Array.isArray(s)){if(s.length===0){return\"[]\"}if(u<l.length+1){return'\"[Array]\"'}l.push(s);a+=c;let e=`\\n${a}`;const n=`,\\n${a}`;const r=Math.min(s.length,o);let i=0;for(;i<r-1;i++){const t=stringifyIndent(String(i),s[i],l,c,a);e+=t!==undefined?t:\"null\";e+=n}const f=stringifyIndent(String(i),s[i],l,c,a);e+=f!==undefined?f:\"null\";if(s.length-1>o){const t=s.length-o-1;e+=`${n}\"... ${getItemCount(t)} not stringified\"`}e+=`\\n${t}`;l.pop();return`[${e}]`}let r=Object.keys(s);const g=r.length;if(g===0){return\"{}\"}if(u<l.length+1){return'\"[Object]\"'}a+=c;const p=`,\\n${a}`;let y=\"\";let d=\"\";let h=Math.min(g,o);if(isTypedArrayWithEntries(s)){y+=stringifyTypedArray(s,p,o);r=r.slice(s.length);h-=s.length;d=p}if(i){r=sort(r,f)}l.push(s);for(let e=0;e<h;e++){const t=r[e];const n=stringifyIndent(t,s[t],l,c,a);if(n!==undefined){y+=`${d}${strEscape(t)}: ${n}`;d=p}}if(g>o){const e=g-o;y+=`${d}\"...\": \"${getItemCount(e)} not stringified\"`;d=p}if(d!==\"\"){y=`\\n${a}${y}\\n${t}`}l.pop();return`{${y}}`}case\"number\":return isFinite(s)?String(s):t?t(s):\"null\";case\"boolean\":return s===true?\"true\":\"false\";case\"undefined\":return undefined;case\"bigint\":if(r){return String(s)}default:return t?t(s):undefined}}function stringifySimple(e,s,l){switch(typeof s){case\"string\":return strEscape(s);case\"object\":{if(s===null){return\"null\"}if(typeof s.toJSON===\"function\"){s=s.toJSON(e);if(typeof s!==\"object\"){return stringifySimple(e,s,l)}if(s===null){return\"null\"}}if(l.indexOf(s)!==-1){return n}let t=\"\";const r=s.length!==undefined;if(r&&Array.isArray(s)){if(s.length===0){return\"[]\"}if(u<l.length+1){return'\"[Array]\"'}l.push(s);const e=Math.min(s.length,o);let n=0;for(;n<e-1;n++){const e=stringifySimple(String(n),s[n],l);t+=e!==undefined?e:\"null\";t+=\",\"}const r=stringifySimple(String(n),s[n],l);t+=r!==undefined?r:\"null\";if(s.length-1>o){const e=s.length-o-1;t+=`,\"... ${getItemCount(e)} not stringified\"`}l.pop();return`[${t}]`}let c=Object.keys(s);const a=c.length;if(a===0){return\"{}\"}if(u<l.length+1){return'\"[Object]\"'}let g=\"\";let p=Math.min(a,o);if(r&&isTypedArrayWithEntries(s)){t+=stringifyTypedArray(s,\",\",o);c=c.slice(s.length);p-=s.length;g=\",\"}if(i){c=sort(c,f)}l.push(s);for(let e=0;e<p;e++){const n=c[e];const r=stringifySimple(n,s[n],l);if(r!==undefined){t+=`${g}${strEscape(n)}:${r}`;g=\",\"}}if(a>o){const e=a-o;t+=`${g}\"...\":\"${getItemCount(e)} not stringified\"`}l.pop();return`{${t}}`}case\"number\":return isFinite(s)?String(s):t?t(s):\"null\";case\"boolean\":return s===true?\"true\":\"false\";case\"undefined\":return undefined;case\"bigint\":if(r){return String(s)}default:return t?t(s):undefined}}function stringify(e,t,n){if(arguments.length>1){let r=\"\";if(typeof n===\"number\"){r=\" \".repeat(Math.min(n,10))}else if(typeof n===\"string\"){r=n.slice(0,10)}if(t!=null){if(typeof t===\"function\"){return stringifyFnReplacer(\"\",{\"\":e},[],t,r,\"\")}if(Array.isArray(t)){return stringifyArrayReplacer(\"\",e,[],getUniqueReplacerSet(t),r,\"\")}}if(r.length!==0){return stringifyIndent(\"\",e,[],r,\"\")}}return stringifySimple(\"\",e,[])}return stringify}}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var i=t[n]={exports:{}};var f=true;try{e[n](i,i.exports,__nccwpck_require__);f=false}finally{if(f)delete t[n]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n=__nccwpck_require__(879);module.exports=n})();","const DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE';\nexport class DynamicServerError extends Error {\n    constructor(description){\n        super(`Dynamic server usage: ${description}`), this.description = description, this.digest = DYNAMIC_ERROR_CODE;\n    }\n}\nexport function isDynamicServerError(err) {\n    if (typeof err !== 'object' || err === null || !('digest' in err) || typeof err.digest !== 'string') {\n        return false;\n    }\n    return err.digest === DYNAMIC_ERROR_CODE;\n}\n\n//# sourceMappingURL=hooks-server-context.js.map","const NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT';\nexport class StaticGenBailoutError extends Error {\n    constructor(...args){\n        super(...args), this.code = NEXT_STATIC_GEN_BAILOUT;\n    }\n}\nexport function isStaticGenBailoutError(error) {\n    if (typeof error !== 'object' || error === null || !('code' in error)) {\n        return false;\n    }\n    return error.code === NEXT_STATIC_GEN_BAILOUT;\n}\n\n//# sourceMappingURL=static-generation-bailout.js.map","// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = 'BAILOUT_TO_CLIENT_SIDE_RENDERING';\n/** An error that should be thrown when we want to bail out to client-side rendering. */ export class BailoutToCSRError extends Error {\n    constructor(reason){\n        super(`Bail out to client-side rendering: ${reason}`), this.reason = reason, this.digest = BAILOUT_TO_CSR;\n    }\n}\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */ export function isBailoutToCSRError(err) {\n    if (typeof err !== 'object' || err === null || !('digest' in err)) {\n        return false;\n    }\n    return err.digest === BAILOUT_TO_CSR;\n}\n\n//# sourceMappingURL=bailout-to-csr.js.map","// This regex will have fast negatives meaning valid identifiers may not pass\n// this test. However this is only used during static generation to provide hints\n// about why a page bailed out of some or all prerendering and we can use bracket notation\n// for example while `ಠ_ಠ` is a valid identifier it's ok to print `searchParams['ಠ_ಠ']`\n// even if this would have been fine too `searchParams.ಠ_ಠ`\nconst isDefinitelyAValidIdentifier = /^[A-Za-z_$][A-Za-z0-9_$]*$/;\nexport function describeStringPropertyAccess(target, prop) {\n    if (isDefinitelyAValidIdentifier.test(prop)) {\n        return `\\`${target}.${prop}\\``;\n    }\n    return `\\`${target}[${JSON.stringify(prop)}]\\``;\n}\nexport function describeHasCheckingStringProperty(target, prop) {\n    const stringifiedProp = JSON.stringify(prop);\n    return `\\`Reflect.has(${target}, ${stringifiedProp})\\`, \\`${stringifiedProp} in ${target}\\`, or similar`;\n}\nexport const wellKnownProperties = new Set([\n    'hasOwnProperty',\n    'isPrototypeOf',\n    'propertyIsEnumerable',\n    'toString',\n    'valueOf',\n    'toLocaleString',\n    // Promise prototype\n    'then',\n    'catch',\n    'finally',\n    // React Promise extension\n    'status',\n    // 'value',\n    // 'error',\n    // React introspection\n    'displayName',\n    '_debugInfo',\n    // Common tested properties\n    'toJSON',\n    '$$typeof',\n    '__esModule'\n]);\n\n//# sourceMappingURL=reflect-utils.js.map","import { jsx as _jsx, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { Suspense, cache, cloneElement } from 'react';\nimport { AppleWebAppMeta, FormatDetectionMeta, ItunesMeta, BasicMeta, ViewportMeta, VerificationMeta, FacebookMeta, PinterestMeta } from './generate/basic';\nimport { AlternatesMetadata } from './generate/alternate';\nimport { OpenGraphMetadata, TwitterMetadata, AppLinksMeta } from './generate/opengraph';\nimport { IconsMetadata } from './generate/icons';\nimport { resolveMetadata, resolveViewport } from './resolve-metadata';\nimport { MetaFilter } from './generate/meta';\nimport { isHTTPAccessFallbackError } from '../../client/components/http-access-fallback/http-access-fallback';\nimport { createServerSearchParamsForMetadata } from '../../server/request/search-params';\nimport { createServerPathnameForMetadata } from '../../server/request/pathname';\nimport { isPostpone } from '../../server/lib/router-utils/is-postpone';\nimport { MetadataBoundary, ViewportBoundary, OutletBoundary } from '../framework/boundary-components';\n// Use a promise to share the status of the metadata resolving,\n// returning two components `MetadataTree` and `MetadataOutlet`\n// `MetadataTree` is the one that will be rendered at first in the content sequence for metadata tags.\n// `MetadataOutlet` is the one that will be rendered under error boundaries for metadata resolving errors.\n// In this way we can let the metadata tags always render successfully,\n// and the error will be caught by the error boundary and trigger fallbacks.\nexport function createMetadataComponents({ tree, pathname, parsedQuery, metadataContext, getDynamicParamFromSegment, errorType, workStore, serveStreamingMetadata }) {\n    const searchParams = createServerSearchParamsForMetadata(parsedQuery, workStore);\n    const pathnameForMetadata = createServerPathnameForMetadata(pathname, workStore);\n    function Viewport() {\n        const pendingViewportTags = getResolvedViewport(tree, searchParams, getDynamicParamFromSegment, workStore, errorType).catch((viewportErr)=>{\n            // When Legacy PPR is enabled viewport can reject with a Postpone type\n            // This will go away once Legacy PPR is removed and dynamic metadata will\n            // stay pending until after the prerender is complete when it is dynamic\n            if (isPostpone(viewportErr)) {\n                throw viewportErr;\n            }\n            if (!errorType && isHTTPAccessFallbackError(viewportErr)) {\n                return getNotFoundViewport(tree, searchParams, getDynamicParamFromSegment, workStore).catch(()=>null);\n            }\n            // We're going to throw the error from the metadata outlet so we just render null here instead\n            return null;\n        });\n        return /*#__PURE__*/ _jsx(ViewportBoundary, {\n            children: pendingViewportTags\n        });\n    }\n    Viewport.displayName = 'Next.Viewport';\n    function Metadata() {\n        const pendingMetadataTags = getResolvedMetadata(tree, pathnameForMetadata, searchParams, getDynamicParamFromSegment, metadataContext, workStore, errorType).catch((metadataErr)=>{\n            // When Legacy PPR is enabled metadata can reject with a Postpone type\n            // This will go away once Legacy PPR is removed and dynamic metadata will\n            // stay pending until after the prerender is complete when it is dynamic\n            if (isPostpone(metadataErr)) {\n                throw metadataErr;\n            }\n            if (!errorType && isHTTPAccessFallbackError(metadataErr)) {\n                return getNotFoundMetadata(tree, pathnameForMetadata, searchParams, getDynamicParamFromSegment, metadataContext, workStore).catch(()=>null);\n            }\n            // We're going to throw the error from the metadata outlet so we just render null here instead\n            return null;\n        });\n        // TODO: We shouldn't change what we render based on whether we are streaming or not.\n        // If we aren't streaming we should just block the response until we have resolved the\n        // metadata.\n        if (!serveStreamingMetadata) {\n            return /*#__PURE__*/ _jsx(MetadataBoundary, {\n                children: pendingMetadataTags\n            });\n        }\n        return /*#__PURE__*/ _jsx(\"div\", {\n            hidden: true,\n            children: /*#__PURE__*/ _jsx(MetadataBoundary, {\n                children: /*#__PURE__*/ _jsx(Suspense, {\n                    name: \"Next.Metadata\",\n                    children: pendingMetadataTags\n                })\n            })\n        });\n    }\n    Metadata.displayName = 'Next.Metadata';\n    function MetadataOutlet() {\n        const pendingOutlet = Promise.all([\n            getResolvedMetadata(tree, pathnameForMetadata, searchParams, getDynamicParamFromSegment, metadataContext, workStore, errorType),\n            getResolvedViewport(tree, searchParams, getDynamicParamFromSegment, workStore, errorType)\n        ]).then(()=>null);\n        // TODO: We shouldn't change what we render based on whether we are streaming or not.\n        // If we aren't streaming we should just block the response until we have resolved the\n        // metadata.\n        if (!serveStreamingMetadata) {\n            return /*#__PURE__*/ _jsx(OutletBoundary, {\n                children: pendingOutlet\n            });\n        }\n        return /*#__PURE__*/ _jsx(OutletBoundary, {\n            children: /*#__PURE__*/ _jsx(Suspense, {\n                name: \"Next.MetadataOutlet\",\n                children: pendingOutlet\n            })\n        });\n    }\n    MetadataOutlet.displayName = 'Next.MetadataOutlet';\n    return {\n        Viewport,\n        Metadata,\n        MetadataOutlet\n    };\n}\nconst getResolvedMetadata = cache(getResolvedMetadataImpl);\nasync function getResolvedMetadataImpl(tree, pathname, searchParams, getDynamicParamFromSegment, metadataContext, workStore, errorType) {\n    const errorConvention = errorType === 'redirect' ? undefined : errorType;\n    return renderMetadata(tree, pathname, searchParams, getDynamicParamFromSegment, metadataContext, workStore, errorConvention);\n}\nconst getNotFoundMetadata = cache(getNotFoundMetadataImpl);\nasync function getNotFoundMetadataImpl(tree, pathname, searchParams, getDynamicParamFromSegment, metadataContext, workStore) {\n    const notFoundErrorConvention = 'not-found';\n    return renderMetadata(tree, pathname, searchParams, getDynamicParamFromSegment, metadataContext, workStore, notFoundErrorConvention);\n}\nconst getResolvedViewport = cache(getResolvedViewportImpl);\nasync function getResolvedViewportImpl(tree, searchParams, getDynamicParamFromSegment, workStore, errorType) {\n    const errorConvention = errorType === 'redirect' ? undefined : errorType;\n    return renderViewport(tree, searchParams, getDynamicParamFromSegment, workStore, errorConvention);\n}\nconst getNotFoundViewport = cache(getNotFoundViewportImpl);\nasync function getNotFoundViewportImpl(tree, searchParams, getDynamicParamFromSegment, workStore) {\n    const notFoundErrorConvention = 'not-found';\n    return renderViewport(tree, searchParams, getDynamicParamFromSegment, workStore, notFoundErrorConvention);\n}\nasync function renderMetadata(tree, pathname, searchParams, getDynamicParamFromSegment, metadataContext, workStore, errorConvention) {\n    const resolvedMetadata = await resolveMetadata(tree, pathname, searchParams, errorConvention, getDynamicParamFromSegment, workStore, metadataContext);\n    const elements = createMetadataElements(resolvedMetadata);\n    return /*#__PURE__*/ _jsx(_Fragment, {\n        children: elements.map((el, index)=>{\n            return /*#__PURE__*/ cloneElement(el, {\n                key: index\n            });\n        })\n    });\n}\nasync function renderViewport(tree, searchParams, getDynamicParamFromSegment, workStore, errorConvention) {\n    const resolvedViewport = await resolveViewport(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore);\n    const elements = createViewportElements(resolvedViewport);\n    return /*#__PURE__*/ _jsx(_Fragment, {\n        children: elements.map((el, index)=>{\n            return /*#__PURE__*/ cloneElement(el, {\n                key: index\n            });\n        })\n    });\n}\nfunction createMetadataElements(metadata) {\n    return MetaFilter([\n        BasicMeta({\n            metadata\n        }),\n        AlternatesMetadata({\n            alternates: metadata.alternates\n        }),\n        ItunesMeta({\n            itunes: metadata.itunes\n        }),\n        FacebookMeta({\n            facebook: metadata.facebook\n        }),\n        PinterestMeta({\n            pinterest: metadata.pinterest\n        }),\n        FormatDetectionMeta({\n            formatDetection: metadata.formatDetection\n        }),\n        VerificationMeta({\n            verification: metadata.verification\n        }),\n        AppleWebAppMeta({\n            appleWebApp: metadata.appleWebApp\n        }),\n        OpenGraphMetadata({\n            openGraph: metadata.openGraph\n        }),\n        TwitterMetadata({\n            twitter: metadata.twitter\n        }),\n        AppLinksMeta({\n            appLinks: metadata.appLinks\n        }),\n        IconsMetadata({\n            icons: metadata.icons\n        })\n    ]);\n}\nfunction createViewportElements(viewport) {\n    return MetaFilter([\n        ViewportMeta({\n            viewport: viewport\n        })\n    ]);\n}\n\n//# sourceMappingURL=metadata.js.map","function resolveArray(value) {\n    if (Array.isArray(value)) {\n        return value;\n    }\n    return [\n        value\n    ];\n}\nfunction resolveAsArrayOrUndefined(value) {\n    if (typeof value === 'undefined' || value === null) {\n        return undefined;\n    }\n    return resolveArray(value);\n}\nfunction getOrigin(url) {\n    let origin = undefined;\n    if (typeof url === 'string') {\n        try {\n            url = new URL(url);\n            origin = url.origin;\n        } catch  {}\n    }\n    return origin;\n}\nexport { resolveAsArrayOrUndefined, resolveArray, getOrigin };\n\n//# sourceMappingURL=utils.js.map","// eslint-disable-next-line import/no-extraneous-dependencies\nimport 'server-only';\nimport { cache } from 'react';\nimport { createDefaultMetadata, createDefaultViewport } from './default-metadata';\nimport { resolveOpenGraph, resolveTwitter } from './resolvers/resolve-opengraph';\nimport { resolveTitle } from './resolvers/resolve-title';\nimport { resolveAsArrayOrUndefined } from './generate/utils';\nimport { getComponentTypeModule, getLayoutOrPageModule } from '../../server/lib/app-dir-module';\nimport { interopDefault } from '../interop-default';\nimport { resolveAlternates, resolveAppleWebApp, resolveAppLinks, resolveRobots, resolveThemeColor, resolveVerification, resolveItunes, resolveFacebook, resolvePagination } from './resolvers/resolve-basics';\nimport { resolveIcons } from './resolvers/resolve-icons';\nimport { getTracer } from '../../server/lib/trace/tracer';\nimport { ResolveMetadataSpan } from '../../server/lib/trace/constants';\nimport { PAGE_SEGMENT_KEY } from '../../shared/lib/segment';\nimport * as Log from '../../build/output/log';\nimport { createServerParamsForMetadata } from '../../server/request/params';\nimport { getUseCacheFunctionInfo, isUseCacheFunction } from '../client-and-server-references';\nimport { createLazyResult } from '../../server/lib/lazy-result';\nfunction isFavicon(icon) {\n    if (!icon) {\n        return false;\n    }\n    // turbopack appends a hash to all images\n    return (icon.url === '/favicon.ico' || icon.url.toString().startsWith('/favicon.ico?')) && icon.type === 'image/x-icon';\n}\nfunction convertUrlsToStrings(input) {\n    if (input instanceof URL) {\n        return input.toString();\n    } else if (Array.isArray(input)) {\n        return input.map((item)=>convertUrlsToStrings(item));\n    } else if (input && typeof input === 'object') {\n        const result = {};\n        for (const [key, value] of Object.entries(input)){\n            result[key] = convertUrlsToStrings(value);\n        }\n        return result;\n    }\n    return input;\n}\nfunction normalizeMetadataBase(metadataBase) {\n    if (typeof metadataBase === 'string') {\n        try {\n            metadataBase = new URL(metadataBase);\n        } catch  {\n            throw Object.defineProperty(new Error(`metadataBase is not a valid URL: ${metadataBase}`), \"__NEXT_ERROR_CODE\", {\n                value: \"E850\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    return metadataBase;\n}\nasync function mergeStaticMetadata(metadataBase, source, target, staticFilesMetadata, metadataContext, titleTemplates, leafSegmentStaticIcons, pathname) {\n    var _source_twitter, _source_openGraph;\n    if (!staticFilesMetadata) return target;\n    const { icon, apple, openGraph, twitter, manifest } = staticFilesMetadata;\n    // Keep updating the static icons in the most leaf node\n    if (icon) {\n        leafSegmentStaticIcons.icon = icon;\n    }\n    if (apple) {\n        leafSegmentStaticIcons.apple = apple;\n    }\n    // file based metadata is specified and current level metadata twitter.images is not specified\n    if (twitter && !(source == null ? void 0 : (_source_twitter = source.twitter) == null ? void 0 : _source_twitter.hasOwnProperty('images'))) {\n        const resolvedTwitter = resolveTwitter({\n            ...target.twitter,\n            images: twitter\n        }, metadataBase, {\n            ...metadataContext,\n            isStaticMetadataRouteFile: true\n        }, titleTemplates.twitter);\n        target.twitter = convertUrlsToStrings(resolvedTwitter);\n    }\n    // file based metadata is specified and current level metadata openGraph.images is not specified\n    if (openGraph && !(source == null ? void 0 : (_source_openGraph = source.openGraph) == null ? void 0 : _source_openGraph.hasOwnProperty('images'))) {\n        const resolvedOpenGraph = await resolveOpenGraph({\n            ...target.openGraph,\n            images: openGraph\n        }, metadataBase, pathname, {\n            ...metadataContext,\n            isStaticMetadataRouteFile: true\n        }, titleTemplates.openGraph);\n        target.openGraph = convertUrlsToStrings(resolvedOpenGraph);\n    }\n    if (manifest) {\n        target.manifest = manifest;\n    }\n    return target;\n}\n/**\n * Merges the given metadata with the resolved metadata. Returns a new object.\n */ async function mergeMetadata(route, pathname, { metadata, resolvedMetadata, staticFilesMetadata, titleTemplates, metadataContext, buildState, leafSegmentStaticIcons }) {\n    const newResolvedMetadata = structuredClone(resolvedMetadata);\n    const metadataBase = normalizeMetadataBase((metadata == null ? void 0 : metadata.metadataBase) !== undefined ? metadata.metadataBase : resolvedMetadata.metadataBase);\n    for(const key_ in metadata){\n        const key = key_;\n        switch(key){\n            case 'title':\n                {\n                    newResolvedMetadata.title = resolveTitle(metadata.title, titleTemplates.title);\n                    break;\n                }\n            case 'alternates':\n                {\n                    newResolvedMetadata.alternates = convertUrlsToStrings(await resolveAlternates(metadata.alternates, metadataBase, pathname, metadataContext));\n                    break;\n                }\n            case 'openGraph':\n                {\n                    newResolvedMetadata.openGraph = convertUrlsToStrings(await resolveOpenGraph(metadata.openGraph, metadataBase, pathname, metadataContext, titleTemplates.openGraph));\n                    break;\n                }\n            case 'twitter':\n                {\n                    newResolvedMetadata.twitter = convertUrlsToStrings(resolveTwitter(metadata.twitter, metadataBase, metadataContext, titleTemplates.twitter));\n                    break;\n                }\n            case 'facebook':\n                newResolvedMetadata.facebook = resolveFacebook(metadata.facebook);\n                break;\n            case 'verification':\n                newResolvedMetadata.verification = resolveVerification(metadata.verification);\n                break;\n            case 'icons':\n                {\n                    newResolvedMetadata.icons = convertUrlsToStrings(resolveIcons(metadata.icons));\n                    break;\n                }\n            case 'appleWebApp':\n                newResolvedMetadata.appleWebApp = resolveAppleWebApp(metadata.appleWebApp);\n                break;\n            case 'appLinks':\n                newResolvedMetadata.appLinks = convertUrlsToStrings(resolveAppLinks(metadata.appLinks));\n                break;\n            case 'robots':\n                {\n                    newResolvedMetadata.robots = resolveRobots(metadata.robots);\n                    break;\n                }\n            case 'archives':\n            case 'assets':\n            case 'bookmarks':\n            case 'keywords':\n                {\n                    newResolvedMetadata[key] = resolveAsArrayOrUndefined(metadata[key]);\n                    break;\n                }\n            case 'authors':\n                {\n                    newResolvedMetadata[key] = convertUrlsToStrings(resolveAsArrayOrUndefined(metadata.authors));\n                    break;\n                }\n            case 'itunes':\n                {\n                    newResolvedMetadata[key] = await resolveItunes(metadata.itunes, metadataBase, pathname, metadataContext);\n                    break;\n                }\n            case 'pagination':\n                {\n                    newResolvedMetadata.pagination = await resolvePagination(metadata.pagination, metadataBase, pathname, metadataContext);\n                    break;\n                }\n            // directly assign fields that fallback to null\n            case 'abstract':\n                newResolvedMetadata[key] = metadata[key] ?? null;\n                break;\n            case 'applicationName':\n                newResolvedMetadata[key] = metadata[key] ?? null;\n                break;\n            case 'description':\n                newResolvedMetadata[key] = metadata[key] ?? null;\n                break;\n            case 'generator':\n                newResolvedMetadata[key] = metadata[key] ?? null;\n                break;\n            case 'creator':\n                newResolvedMetadata[key] = metadata[key] ?? null;\n                break;\n            case 'publisher':\n                newResolvedMetadata[key] = metadata[key] ?? null;\n                break;\n            case 'category':\n                newResolvedMetadata[key] = metadata[key] ?? null;\n                break;\n            case 'classification':\n                newResolvedMetadata[key] = metadata[key] ?? null;\n                break;\n            case 'referrer':\n                newResolvedMetadata[key] = metadata[key] ?? null;\n                break;\n            case 'formatDetection':\n                newResolvedMetadata[key] = metadata[key] ?? null;\n                break;\n            case 'manifest':\n                newResolvedMetadata[key] = convertUrlsToStrings(metadata[key]) ?? null;\n                break;\n            case 'pinterest':\n                newResolvedMetadata[key] = convertUrlsToStrings(metadata[key]) ?? null;\n                break;\n            case 'other':\n                newResolvedMetadata.other = Object.assign({}, newResolvedMetadata.other, metadata.other);\n                break;\n            case 'metadataBase':\n                newResolvedMetadata.metadataBase = metadataBase ? metadataBase.toString() : null;\n                break;\n            case 'apple-touch-fullscreen':\n                {\n                    buildState.warnings.add(`Use appleWebApp instead\\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-metadata`);\n                    break;\n                }\n            case 'apple-touch-icon-precomposed':\n                {\n                    buildState.warnings.add(`Use icons.apple instead\\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-metadata`);\n                    break;\n                }\n            case 'themeColor':\n            case 'colorScheme':\n            case 'viewport':\n                if (metadata[key] != null) {\n                    buildState.warnings.add(`Unsupported metadata ${key} is configured in metadata export in ${route}. Please move it to viewport export instead.\\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport`);\n                }\n                break;\n            default:\n                {\n                    key;\n                }\n        }\n    }\n    return mergeStaticMetadata(metadataBase, metadata, newResolvedMetadata, staticFilesMetadata, metadataContext, titleTemplates, leafSegmentStaticIcons, pathname);\n}\n/**\n * Merges the given viewport with the resolved viewport. Returns a new object.\n */ function mergeViewport({ resolvedViewport, viewport }) {\n    const newResolvedViewport = structuredClone(resolvedViewport);\n    if (viewport) {\n        for(const key_ in viewport){\n            const key = key_;\n            switch(key){\n                case 'themeColor':\n                    {\n                        newResolvedViewport.themeColor = resolveThemeColor(viewport.themeColor);\n                        break;\n                    }\n                case 'colorScheme':\n                    newResolvedViewport.colorScheme = viewport.colorScheme || null;\n                    break;\n                case 'width':\n                case 'height':\n                case 'initialScale':\n                case 'minimumScale':\n                case 'maximumScale':\n                case 'userScalable':\n                case 'viewportFit':\n                case 'interactiveWidget':\n                    // always override the target with the source\n                    // @ts-ignore viewport properties\n                    newResolvedViewport[key] = viewport[key];\n                    break;\n                default:\n                    key;\n            }\n        }\n    }\n    return newResolvedViewport;\n}\nfunction getDefinedViewport(mod, props, tracingProps) {\n    if (typeof mod.generateViewport === 'function') {\n        const { route } = tracingProps;\n        const segmentProps = createSegmentProps(mod.generateViewport, props);\n        return Object.assign((parent)=>getTracer().trace(ResolveMetadataSpan.generateViewport, {\n                spanName: `generateViewport ${route}`,\n                attributes: {\n                    'next.page': route\n                }\n            }, ()=>mod.generateViewport(segmentProps, parent)), {\n            $$original: mod.generateViewport\n        });\n    }\n    return mod.viewport || null;\n}\nfunction getDefinedMetadata(mod, props, tracingProps) {\n    if (typeof mod.generateMetadata === 'function') {\n        const { route } = tracingProps;\n        const segmentProps = createSegmentProps(mod.generateMetadata, props);\n        return Object.assign((parent)=>getTracer().trace(ResolveMetadataSpan.generateMetadata, {\n                spanName: `generateMetadata ${route}`,\n                attributes: {\n                    'next.page': route\n                }\n            }, ()=>mod.generateMetadata(segmentProps, parent)), {\n            $$original: mod.generateMetadata\n        });\n    }\n    return mod.metadata || null;\n}\n/**\n * If `fn` is a `'use cache'` function, we add special markers to the props,\n * that the cache wrapper reads and removes, before passing the props to the\n * user function.\n */ function createSegmentProps(fn, props) {\n    return isUseCacheFunction(fn) ? 'searchParams' in props ? {\n        ...props,\n        $$isPage: true\n    } : {\n        ...props,\n        $$isLayout: true\n    } : props;\n}\nasync function collectStaticImagesFiles(metadata, props, type) {\n    var _this;\n    if (!(metadata == null ? void 0 : metadata[type])) return undefined;\n    const iconPromises = metadata[type].map(async (imageModule)=>interopDefault(await imageModule(props)));\n    return (iconPromises == null ? void 0 : iconPromises.length) > 0 ? (_this = await Promise.all(iconPromises)) == null ? void 0 : _this.flat() : undefined;\n}\nasync function resolveStaticMetadata(modules, props) {\n    const { metadata } = modules;\n    if (!metadata) return null;\n    const [icon, apple, openGraph, twitter] = await Promise.all([\n        collectStaticImagesFiles(metadata, props, 'icon'),\n        collectStaticImagesFiles(metadata, props, 'apple'),\n        collectStaticImagesFiles(metadata, props, 'openGraph'),\n        collectStaticImagesFiles(metadata, props, 'twitter')\n    ]);\n    const staticMetadata = {\n        icon,\n        apple,\n        openGraph,\n        twitter,\n        manifest: metadata.manifest\n    };\n    return staticMetadata;\n}\n// [layout.metadata, static files metadata] -> ... -> [page.metadata, static files metadata]\nasync function collectMetadata({ tree, metadataItems, errorMetadataItem, props, route, errorConvention }) {\n    let mod;\n    let modType;\n    const hasErrorConventionComponent = Boolean(errorConvention && tree[2][errorConvention]);\n    if (errorConvention) {\n        mod = await getComponentTypeModule(tree, 'layout');\n        modType = errorConvention;\n    } else {\n        const { mod: layoutOrPageMod, modType: layoutOrPageModType } = await getLayoutOrPageModule(tree);\n        mod = layoutOrPageMod;\n        modType = layoutOrPageModType;\n    }\n    if (modType) {\n        route += `/${modType}`;\n    }\n    const staticFilesMetadata = await resolveStaticMetadata(tree[2], props);\n    const metadataExport = mod ? getDefinedMetadata(mod, props, {\n        route\n    }) : null;\n    metadataItems.push([\n        metadataExport,\n        staticFilesMetadata\n    ]);\n    if (hasErrorConventionComponent && errorConvention) {\n        const errorMod = await getComponentTypeModule(tree, errorConvention);\n        const errorMetadataExport = errorMod ? getDefinedMetadata(errorMod, props, {\n            route\n        }) : null;\n        errorMetadataItem[0] = errorMetadataExport;\n        errorMetadataItem[1] = staticFilesMetadata;\n    }\n}\n// [layout.metadata, static files metadata] -> ... -> [page.metadata, static files metadata]\nasync function collectViewport({ tree, viewportItems, errorViewportItemRef, props, route, errorConvention }) {\n    let mod;\n    let modType;\n    const hasErrorConventionComponent = Boolean(errorConvention && tree[2][errorConvention]);\n    if (errorConvention) {\n        mod = await getComponentTypeModule(tree, 'layout');\n        modType = errorConvention;\n    } else {\n        const { mod: layoutOrPageMod, modType: layoutOrPageModType } = await getLayoutOrPageModule(tree);\n        mod = layoutOrPageMod;\n        modType = layoutOrPageModType;\n    }\n    if (modType) {\n        route += `/${modType}`;\n    }\n    const viewportExport = mod ? getDefinedViewport(mod, props, {\n        route\n    }) : null;\n    viewportItems.push(viewportExport);\n    if (hasErrorConventionComponent && errorConvention) {\n        const errorMod = await getComponentTypeModule(tree, errorConvention);\n        const errorViewportExport = errorMod ? getDefinedViewport(errorMod, props, {\n            route\n        }) : null;\n        errorViewportItemRef.current = errorViewportExport;\n    }\n}\nconst resolveMetadataItems = cache(async function(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore) {\n    const parentParams = {};\n    const metadataItems = [];\n    const errorMetadataItem = [\n        null,\n        null\n    ];\n    const treePrefix = undefined;\n    return resolveMetadataItemsImpl(metadataItems, tree, treePrefix, parentParams, searchParams, errorConvention, errorMetadataItem, getDynamicParamFromSegment, workStore);\n});\nasync function resolveMetadataItemsImpl(metadataItems, tree, /** Provided tree can be nested subtree, this argument says what is the path of such subtree */ treePrefix, parentParams, searchParams, errorConvention, errorMetadataItem, getDynamicParamFromSegment, workStore) {\n    const [segment, parallelRoutes, { page }] = tree;\n    const currentTreePrefix = treePrefix && treePrefix.length ? [\n        ...treePrefix,\n        segment\n    ] : [\n        segment\n    ];\n    const isPage = typeof page !== 'undefined';\n    // Handle dynamic segment params.\n    const segmentParam = getDynamicParamFromSegment(segment);\n    /**\n   * Create object holding the parent params and current params\n   */ let currentParams = parentParams;\n    if (segmentParam && segmentParam.value !== null) {\n        currentParams = {\n            ...parentParams,\n            [segmentParam.param]: segmentParam.value\n        };\n    }\n    const params = createServerParamsForMetadata(currentParams, workStore);\n    const props = isPage ? {\n        params,\n        searchParams\n    } : {\n        params\n    };\n    await collectMetadata({\n        tree,\n        metadataItems,\n        errorMetadataItem,\n        errorConvention,\n        props,\n        route: currentTreePrefix// __PAGE__ shouldn't be shown in a route\n        .filter((s)=>s !== PAGE_SEGMENT_KEY).join('/')\n    });\n    for(const key in parallelRoutes){\n        const childTree = parallelRoutes[key];\n        await resolveMetadataItemsImpl(metadataItems, childTree, currentTreePrefix, currentParams, searchParams, errorConvention, errorMetadataItem, getDynamicParamFromSegment, workStore);\n    }\n    if (Object.keys(parallelRoutes).length === 0 && errorConvention) {\n        // If there are no parallel routes, place error metadata as the last item.\n        // e.g. layout -> layout -> not-found\n        metadataItems.push(errorMetadataItem);\n    }\n    return metadataItems;\n}\nconst resolveViewportItems = cache(async function(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore) {\n    const parentParams = {};\n    const viewportItems = [];\n    const errorViewportItemRef = {\n        current: null\n    };\n    const treePrefix = undefined;\n    return resolveViewportItemsImpl(viewportItems, tree, treePrefix, parentParams, searchParams, errorConvention, errorViewportItemRef, getDynamicParamFromSegment, workStore);\n});\nasync function resolveViewportItemsImpl(viewportItems, tree, /** Provided tree can be nested subtree, this argument says what is the path of such subtree */ treePrefix, parentParams, searchParams, errorConvention, errorViewportItemRef, getDynamicParamFromSegment, workStore) {\n    const [segment, parallelRoutes, { page }] = tree;\n    const currentTreePrefix = treePrefix && treePrefix.length ? [\n        ...treePrefix,\n        segment\n    ] : [\n        segment\n    ];\n    const isPage = typeof page !== 'undefined';\n    // Handle dynamic segment params.\n    const segmentParam = getDynamicParamFromSegment(segment);\n    /**\n   * Create object holding the parent params and current params\n   */ let currentParams = parentParams;\n    if (segmentParam && segmentParam.value !== null) {\n        currentParams = {\n            ...parentParams,\n            [segmentParam.param]: segmentParam.value\n        };\n    }\n    const params = createServerParamsForMetadata(currentParams, workStore);\n    let layerProps;\n    if (isPage) {\n        layerProps = {\n            params,\n            searchParams\n        };\n    } else {\n        layerProps = {\n            params\n        };\n    }\n    await collectViewport({\n        tree,\n        viewportItems,\n        errorViewportItemRef,\n        errorConvention,\n        props: layerProps,\n        route: currentTreePrefix// __PAGE__ shouldn't be shown in a route\n        .filter((s)=>s !== PAGE_SEGMENT_KEY).join('/')\n    });\n    for(const key in parallelRoutes){\n        const childTree = parallelRoutes[key];\n        await resolveViewportItemsImpl(viewportItems, childTree, currentTreePrefix, currentParams, searchParams, errorConvention, errorViewportItemRef, getDynamicParamFromSegment, workStore);\n    }\n    if (Object.keys(parallelRoutes).length === 0 && errorConvention) {\n        // If there are no parallel routes, place error metadata as the last item.\n        // e.g. layout -> layout -> not-found\n        viewportItems.push(errorViewportItemRef.current);\n    }\n    return viewportItems;\n}\nconst isTitleTruthy = (title)=>!!(title == null ? void 0 : title.absolute);\nconst hasTitle = (metadata)=>isTitleTruthy(metadata == null ? void 0 : metadata.title);\nfunction inheritFromMetadata(target, metadata) {\n    if (target) {\n        if (!hasTitle(target) && hasTitle(metadata)) {\n            target.title = metadata.title;\n        }\n        if (!target.description && metadata.description) {\n            target.description = metadata.description;\n        }\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst commonOgKeys = [\n    'title',\n    'description',\n    'images'\n];\nfunction postProcessMetadata(metadata, favicon, titleTemplates, metadataContext) {\n    const { openGraph, twitter } = metadata;\n    if (openGraph) {\n        // If there's openGraph information but not configured in twitter,\n        // inherit them from openGraph metadata.\n        let autoFillProps = {};\n        const hasTwTitle = hasTitle(twitter);\n        const hasTwDescription = twitter == null ? void 0 : twitter.description;\n        const hasTwImages = Boolean((twitter == null ? void 0 : twitter.hasOwnProperty('images')) && twitter.images);\n        if (!hasTwTitle) {\n            if (isTitleTruthy(openGraph.title)) {\n                autoFillProps.title = openGraph.title;\n            } else if (metadata.title && isTitleTruthy(metadata.title)) {\n                autoFillProps.title = metadata.title;\n            }\n        }\n        if (!hasTwDescription) autoFillProps.description = openGraph.description || metadata.description || undefined;\n        if (!hasTwImages) autoFillProps.images = openGraph.images;\n        if (Object.keys(autoFillProps).length > 0) {\n            const partialTwitter = resolveTwitter(autoFillProps, normalizeMetadataBase(metadata.metadataBase), metadataContext, titleTemplates.twitter);\n            if (metadata.twitter) {\n                metadata.twitter = Object.assign({}, metadata.twitter, {\n                    ...!hasTwTitle && {\n                        title: partialTwitter == null ? void 0 : partialTwitter.title\n                    },\n                    ...!hasTwDescription && {\n                        description: partialTwitter == null ? void 0 : partialTwitter.description\n                    },\n                    ...!hasTwImages && {\n                        images: partialTwitter == null ? void 0 : partialTwitter.images\n                    }\n                });\n            } else {\n                metadata.twitter = convertUrlsToStrings(partialTwitter);\n            }\n        }\n    }\n    // If there's no title and description configured in openGraph or twitter,\n    // use the title and description from metadata.\n    inheritFromMetadata(openGraph, metadata);\n    inheritFromMetadata(twitter, metadata);\n    if (favicon) {\n        if (!metadata.icons) {\n            metadata.icons = {\n                icon: [],\n                apple: []\n            };\n        }\n        metadata.icons.icon.unshift(favicon);\n    }\n    return metadata;\n}\nfunction prerenderMetadata(metadataItems) {\n    // If the index is a function then it is a resolver and the next slot\n    // is the corresponding result. If the index is not a function it is the result\n    // itself.\n    const resolversAndResults = [];\n    for(let i = 0; i < metadataItems.length; i++){\n        const metadataExport = metadataItems[i][0];\n        getResult(resolversAndResults, metadataExport);\n    }\n    return resolversAndResults;\n}\nfunction prerenderViewport(viewportItems) {\n    // If the index is a function then it is a resolver and the next slot\n    // is the corresponding result. If the index is not a function it is the result\n    // itself.\n    const resolversAndResults = [];\n    for(let i = 0; i < viewportItems.length; i++){\n        const viewportExport = viewportItems[i];\n        getResult(resolversAndResults, viewportExport);\n    }\n    return resolversAndResults;\n}\nconst noop = ()=>{};\nfunction getResult(resolversAndResults, exportForResult) {\n    if (typeof exportForResult === 'function') {\n        // If the function is a 'use cache' function that uses the parent data as\n        // the second argument, we don't want to eagerly execute it during\n        // metadata/viewport pre-rendering, as the parent data might also be\n        // computed from another 'use cache' function. To ensure that the hanging\n        // input abort signal handling works in this case (i.e. the depending\n        // function waits for the cached input to resolve while encoding its args),\n        // they must be called sequentially. This can be accomplished by wrapping\n        // the call in a lazy promise, so that the original function is only called\n        // when the result is actually awaited.\n        const useCacheFunctionInfo = getUseCacheFunctionInfo(exportForResult.$$original);\n        if (useCacheFunctionInfo && useCacheFunctionInfo.usedArgs[1]) {\n            const promise = new Promise((resolve)=>resolversAndResults.push(resolve));\n            resolversAndResults.push(createLazyResult(async ()=>exportForResult(promise)));\n        } else {\n            let result;\n            if (useCacheFunctionInfo) {\n                resolversAndResults.push(noop);\n                // @ts-expect-error We intentionally omit the parent argument, because\n                // we know from the check above that the 'use cache' function does not\n                // use it.\n                result = exportForResult();\n            } else {\n                result = exportForResult(new Promise((resolve)=>resolversAndResults.push(resolve)));\n            }\n            resolversAndResults.push(result);\n            if (result instanceof Promise) {\n                // since we eager execute generateMetadata and\n                // they can reject at anytime we need to ensure\n                // we attach the catch handler right away to\n                // prevent unhandled rejections crashing the process\n                result.catch((err)=>{\n                    return {\n                        __nextError: err\n                    };\n                });\n            }\n        }\n    } else if (typeof exportForResult === 'object') {\n        resolversAndResults.push(exportForResult);\n    } else {\n        resolversAndResults.push(null);\n    }\n}\nfunction freezeInDev(obj) {\n    if (process.env.NODE_ENV === 'development') {\n        return require('../../shared/lib/deep-freeze').deepFreeze(obj);\n    }\n    return obj;\n}\nexport async function accumulateMetadata(route, metadataItems, pathname, metadataContext) {\n    let resolvedMetadata = createDefaultMetadata();\n    let titleTemplates = {\n        title: null,\n        twitter: null,\n        openGraph: null\n    };\n    const buildState = {\n        warnings: new Set()\n    };\n    let favicon;\n    // Collect the static icons in the most leaf node,\n    // since we don't collect all the static metadata icons in the parent segments.\n    const leafSegmentStaticIcons = {\n        icon: [],\n        apple: []\n    };\n    const resolversAndResults = prerenderMetadata(metadataItems);\n    let resultIndex = 0;\n    for(let i = 0; i < metadataItems.length; i++){\n        var _staticFilesMetadata_icon;\n        const staticFilesMetadata = metadataItems[i][1];\n        // Treat favicon as special case, it should be the first icon in the list\n        // i <= 1 represents root layout, and if current page is also at root\n        if (i <= 1 && isFavicon(staticFilesMetadata == null ? void 0 : (_staticFilesMetadata_icon = staticFilesMetadata.icon) == null ? void 0 : _staticFilesMetadata_icon[0])) {\n            var _staticFilesMetadata_icon1;\n            const iconMod = staticFilesMetadata == null ? void 0 : (_staticFilesMetadata_icon1 = staticFilesMetadata.icon) == null ? void 0 : _staticFilesMetadata_icon1.shift();\n            if (i === 0) favicon = iconMod;\n        }\n        let pendingMetadata = resolversAndResults[resultIndex++];\n        if (typeof pendingMetadata === 'function') {\n            // This metadata item had a `generateMetadata` and\n            // we need to provide the currently resolved metadata\n            // to it before we continue;\n            const resolveParentMetadata = pendingMetadata;\n            // we know that the next item is a result if this item\n            // was a resolver\n            pendingMetadata = resolversAndResults[resultIndex++];\n            resolveParentMetadata(freezeInDev(resolvedMetadata));\n        }\n        // Otherwise the item was either null or a static export\n        let metadata;\n        if (isPromiseLike(pendingMetadata)) {\n            metadata = await pendingMetadata;\n        } else {\n            metadata = pendingMetadata;\n        }\n        resolvedMetadata = await mergeMetadata(route, pathname, {\n            resolvedMetadata,\n            metadata,\n            metadataContext,\n            staticFilesMetadata,\n            titleTemplates,\n            buildState,\n            leafSegmentStaticIcons\n        });\n        // If the layout is the same layer with page, skip the leaf layout and leaf page\n        // The leaf layout and page are the last two items\n        if (i < metadataItems.length - 2) {\n            var _resolvedMetadata_title, _resolvedMetadata_openGraph, _resolvedMetadata_twitter;\n            titleTemplates = {\n                title: ((_resolvedMetadata_title = resolvedMetadata.title) == null ? void 0 : _resolvedMetadata_title.template) || null,\n                openGraph: ((_resolvedMetadata_openGraph = resolvedMetadata.openGraph) == null ? void 0 : _resolvedMetadata_openGraph.title.template) || null,\n                twitter: ((_resolvedMetadata_twitter = resolvedMetadata.twitter) == null ? void 0 : _resolvedMetadata_twitter.title.template) || null\n            };\n        }\n    }\n    if (leafSegmentStaticIcons.icon.length > 0 || leafSegmentStaticIcons.apple.length > 0) {\n        if (!resolvedMetadata.icons) {\n            resolvedMetadata.icons = {\n                icon: [],\n                apple: []\n            };\n            if (leafSegmentStaticIcons.icon.length > 0) {\n                resolvedMetadata.icons.icon.unshift(...leafSegmentStaticIcons.icon);\n            }\n            if (leafSegmentStaticIcons.apple.length > 0) {\n                resolvedMetadata.icons.apple.unshift(...leafSegmentStaticIcons.apple);\n            }\n        }\n    }\n    // Only log warnings if there are any, and only once after the metadata resolving process is finished\n    if (buildState.warnings.size > 0) {\n        for (const warning of buildState.warnings){\n            Log.warn(warning);\n        }\n    }\n    return postProcessMetadata(resolvedMetadata, favicon, titleTemplates, metadataContext);\n}\nexport async function accumulateViewport(viewportItems) {\n    let resolvedViewport = createDefaultViewport();\n    const resolversAndResults = prerenderViewport(viewportItems);\n    let i = 0;\n    while(i < resolversAndResults.length){\n        let pendingViewport = resolversAndResults[i++];\n        if (typeof pendingViewport === 'function') {\n            // this viewport item had a `generateViewport` and\n            // we need to provide the currently resolved viewport\n            // to it before we continue;\n            const resolveParentViewport = pendingViewport;\n            // we know that the next item is a result if this item\n            // was a resolver\n            pendingViewport = resolversAndResults[i++];\n            resolveParentViewport(freezeInDev(resolvedViewport));\n        }\n        // Otherwise the item was either null or a static export\n        let viewport;\n        if (isPromiseLike(pendingViewport)) {\n            viewport = await pendingViewport;\n        } else {\n            viewport = pendingViewport;\n        }\n        resolvedViewport = mergeViewport({\n            resolvedViewport,\n            viewport\n        });\n    }\n    return resolvedViewport;\n}\n// Exposed API for metadata component, that directly resolve the loader tree and related context as resolved metadata.\nexport async function resolveMetadata(tree, pathname, searchParams, errorConvention, getDynamicParamFromSegment, workStore, metadataContext) {\n    const metadataItems = await resolveMetadataItems(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore);\n    return accumulateMetadata(workStore.route, metadataItems, pathname, metadataContext);\n}\n// Exposed API for viewport component, that directly resolve the loader tree and related context as resolved viewport.\nexport async function resolveViewport(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore) {\n    const viewportItems = await resolveViewportItems(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore);\n    return accumulateViewport(viewportItems);\n}\nfunction isPromiseLike(value) {\n    return typeof value === 'object' && value !== null && typeof value.then === 'function';\n}\n\n//# sourceMappingURL=resolve-metadata.js.map","import path from '../../../shared/lib/isomorphic/path';\nfunction isStringOrURL(icon) {\n    return typeof icon === 'string' || icon instanceof URL;\n}\nfunction createLocalMetadataBase() {\n    // Check if experimental HTTPS is enabled\n    const isExperimentalHttps = Boolean(process.env.__NEXT_EXPERIMENTAL_HTTPS);\n    const protocol = isExperimentalHttps ? 'https' : 'http';\n    return new URL(`${protocol}://localhost:${process.env.PORT || 3000}`);\n}\nfunction getPreviewDeploymentUrl() {\n    const origin = process.env.VERCEL_BRANCH_URL || process.env.VERCEL_URL;\n    return origin ? new URL(`https://${origin}`) : undefined;\n}\nfunction getProductionDeploymentUrl() {\n    const origin = process.env.VERCEL_PROJECT_PRODUCTION_URL;\n    return origin ? new URL(`https://${origin}`) : undefined;\n}\n/**\n * Given an optional user-provided metadataBase, this determines what the metadataBase should\n * fallback to. Specifically:\n * - In dev, it should always be localhost\n * - In Vercel preview builds, it should be the preview build ID\n * - In start, it should be the user-provided metadataBase value. Otherwise,\n * it'll fall back to the Vercel production deployment, and localhost as a last resort.\n */ export function getSocialImageMetadataBaseFallback(metadataBase) {\n    const defaultMetadataBase = createLocalMetadataBase();\n    const previewDeploymentUrl = getPreviewDeploymentUrl();\n    const productionDeploymentUrl = getProductionDeploymentUrl();\n    let fallbackMetadataBase;\n    if (process.env.NODE_ENV === 'development') {\n        fallbackMetadataBase = defaultMetadataBase;\n    } else {\n        fallbackMetadataBase = process.env.NODE_ENV === 'production' && previewDeploymentUrl && process.env.VERCEL_ENV === 'preview' ? previewDeploymentUrl : metadataBase || productionDeploymentUrl || defaultMetadataBase;\n    }\n    return fallbackMetadataBase;\n}\nfunction resolveUrl(url, metadataBase) {\n    if (url instanceof URL) return url;\n    if (!url) return null;\n    try {\n        // If we can construct a URL instance from url, ignore metadataBase\n        const parsedUrl = new URL(url);\n        return parsedUrl;\n    } catch  {}\n    if (!metadataBase) {\n        metadataBase = createLocalMetadataBase();\n    }\n    // Handle relative or absolute paths\n    const pathname = metadataBase.pathname || '';\n    const joinedPath = path.posix.join(pathname, url);\n    return new URL(joinedPath, metadataBase);\n}\n// Resolve with `pathname` if `url` is a relative path.\nfunction resolveRelativeUrl(url, pathname) {\n    if (typeof url === 'string' && url.startsWith('./')) {\n        return path.posix.resolve(pathname, url);\n    }\n    return url;\n}\n// The regex is matching logic from packages/next/src/lib/load-custom-routes.ts\nconst FILE_REGEX = /^(?:\\/((?!\\.well-known(?:\\/.*)?)(?:[^/]+\\/)*[^/]+\\.\\w+))(\\/?|$)/i;\nfunction isFilePattern(pathname) {\n    return FILE_REGEX.test(pathname);\n}\n// Resolve `pathname` if `url` is a relative path the compose with `metadataBase`.\nfunction resolveAbsoluteUrlWithPathname(url, metadataBase, pathname, { trailingSlash }) {\n    // Resolve url with pathname that always starts with `/`\n    url = resolveRelativeUrl(url, pathname);\n    // Convert string url or URL instance to absolute url string,\n    // if there's case needs to be resolved with metadataBase\n    let resolvedUrl = '';\n    const result = metadataBase ? resolveUrl(url, metadataBase) : url;\n    if (typeof result === 'string') {\n        resolvedUrl = result;\n    } else {\n        resolvedUrl = result.pathname === '/' && result.searchParams.size === 0 ? result.origin : result.href;\n    }\n    // Add trailing slash if it's enabled for urls matches the condition\n    // - Not external, same origin with metadataBase\n    // - Doesn't have query\n    if (trailingSlash && !resolvedUrl.endsWith('/')) {\n        let isRelative = resolvedUrl.startsWith('/');\n        let hasQuery = resolvedUrl.includes('?');\n        let isExternal = false;\n        let isFileUrl = false;\n        if (!isRelative) {\n            try {\n                const parsedUrl = new URL(resolvedUrl);\n                isExternal = metadataBase != null && parsedUrl.origin !== metadataBase.origin;\n                isFileUrl = isFilePattern(parsedUrl.pathname);\n            } catch  {\n                // If it's not a valid URL, treat it as external\n                isExternal = true;\n            }\n            if (// Do not apply trailing slash for file like urls, aligning with the behavior with `trailingSlash`\n            !isFileUrl && !isExternal && !hasQuery) return `${resolvedUrl}/`;\n        }\n    }\n    return resolvedUrl;\n}\nexport { isStringOrURL, resolveUrl, resolveRelativeUrl, resolveAbsoluteUrlWithPathname,  };\n\n//# sourceMappingURL=resolve-url.js.map","function resolveTitleTemplate(template, title) {\n    return template ? template.replace(/%s/g, title) : title;\n}\nexport function resolveTitle(title, stashedTemplate) {\n    let resolved;\n    const template = typeof title !== 'string' && title && 'template' in title ? title.template : null;\n    if (typeof title === 'string') {\n        resolved = resolveTitleTemplate(stashedTemplate, title);\n    } else if (title) {\n        if ('default' in title) {\n            resolved = resolveTitleTemplate(stashedTemplate, title.default);\n        }\n        if ('absolute' in title && title.absolute) {\n            resolved = title.absolute;\n        }\n    }\n    if (title && typeof title !== 'string') {\n        return {\n            template,\n            absolute: resolved || ''\n        };\n    } else {\n        return {\n            absolute: resolved || title || '',\n            template\n        };\n    }\n}\n\n//# sourceMappingURL=resolve-title.js.map","import { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers';\nconst DUMMY_ORIGIN = 'http://n';\nexport function isFullStringUrl(url) {\n    return /https?:\\/\\//.test(url);\n}\nexport function parseUrl(url) {\n    let parsed = undefined;\n    try {\n        parsed = new URL(url, DUMMY_ORIGIN);\n    } catch  {}\n    return parsed;\n}\nexport function parseReqUrl(url) {\n    const parsedUrl = parseUrl(url);\n    if (!parsedUrl) {\n        return;\n    }\n    const query = {};\n    for (const key of parsedUrl.searchParams.keys()){\n        const values = parsedUrl.searchParams.getAll(key);\n        query[key] = values.length > 1 ? values : values[0];\n    }\n    const legacyUrl = {\n        query,\n        hash: parsedUrl.hash,\n        search: parsedUrl.search,\n        path: parsedUrl.pathname,\n        pathname: parsedUrl.pathname,\n        href: `${parsedUrl.pathname}${parsedUrl.search}${parsedUrl.hash}`,\n        host: '',\n        hostname: '',\n        auth: '',\n        protocol: '',\n        slashes: null,\n        port: ''\n    };\n    return legacyUrl;\n}\nexport function stripNextRscUnionQuery(relativeUrl) {\n    const urlInstance = new URL(relativeUrl, DUMMY_ORIGIN);\n    urlInstance.searchParams.delete(NEXT_RSC_UNION_QUERY);\n    return urlInstance.pathname + urlInstance.search;\n}\n\n//# sourceMappingURL=url.js.map","// eslint-disable-next-line import/no-extraneous-dependencies\nexport { createTemporaryReferenceSet, renderToReadableStream, decodeReply, decodeAction, decodeFormState } from 'react-server-dom-webpack/server';\n// eslint-disable-next-line import/no-extraneous-dependencies\nexport { prerender } from 'react-server-dom-webpack/static';\n// TODO: Just re-export `* as ReactServer`\nexport { captureOwnerStack, createElement, Fragment } from 'react';\nexport { default as LayoutRouter } from '../../client/components/layout-router';\nexport { default as RenderFromTemplateContext } from '../../client/components/render-from-template-context';\nexport { workAsyncStorage } from '../app-render/work-async-storage.external';\nexport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nexport { actionAsyncStorage } from '../app-render/action-async-storage.external';\nexport { ClientPageRoot } from '../../client/components/client-page';\nexport { ClientSegmentRoot } from '../../client/components/client-segment';\nexport { createServerSearchParamsForServerPage, createPrerenderSearchParamsForClientPage } from '../request/search-params';\nexport { createServerParamsForServerSegment, createPrerenderParamsForClientSegment } from '../request/params';\nexport * as serverHooks from '../../client/components/hooks-server-context';\nexport { HTTPAccessFallbackBoundary } from '../../client/components/http-access-fallback/error-boundary';\nexport { createMetadataComponents } from '../../lib/metadata/metadata';\nexport { RootLayoutBoundary } from '../../lib/framework/boundary-components';\nexport { preloadStyle, preloadFont, preconnect } from './rsc/preloads';\nexport { Postpone } from './rsc/postpone';\nexport { taintObjectReference } from './rsc/taint';\nexport { collectSegmentData } from './collect-segment-data';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { patchFetch as _patchFetch } from '../lib/patch-fetch';\nlet SegmentViewNode = ()=>null;\nlet SegmentViewStateNode = ()=>null;\nif (process.env.NODE_ENV === 'development') {\n    const mod = require('../../next-devtools/userspace/app/segment-explorer-node');\n    SegmentViewNode = mod.SegmentViewNode;\n    SegmentViewStateNode = mod.SegmentViewStateNode;\n}\n// hot-reloader modules are not bundled so we need to inject `__next__clear_chunk_cache__`\n// into globalThis from this file which is bundled.\nif (process.env.TURBOPACK) {\n    globalThis.__next__clear_chunk_cache__ = __turbopack_clear_chunk_cache__;\n} else {\n    // Webpack does not have chunks on the server\n    globalThis.__next__clear_chunk_cache__ = null;\n}\n// patchFetch makes use of APIs such as `React.unstable_postpone` which are only available\n// in the experimental channel of React, so export it from here so that it comes from the bundled runtime\nexport function patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n// Development only\nexport { SegmentViewNode, SegmentViewStateNode };\n\n//# sourceMappingURL=entry-base.js.map","const REACT_POSTPONE_TYPE = Symbol.for('react.postpone');\nexport function isPostpone(error) {\n    return typeof error === 'object' && error !== null && error.$$typeof === REACT_POSTPONE_TYPE;\n}\n\n//# sourceMappingURL=is-postpone.js.map","/*\n\nFiles in the rsc directory are meant to be packaged as part of the RSC graph using next-app-loader.\n\n*/ import ReactDOM from 'react-dom';\nexport function preloadStyle(href, crossOrigin, nonce) {\n    const opts = {\n        as: 'style'\n    };\n    if (typeof crossOrigin === 'string') {\n        opts.crossOrigin = crossOrigin;\n    }\n    if (typeof nonce === 'string') {\n        opts.nonce = nonce;\n    }\n    ReactDOM.preload(href, opts);\n}\nexport function preloadFont(href, type, crossOrigin, nonce) {\n    const opts = {\n        as: 'font',\n        type\n    };\n    if (typeof crossOrigin === 'string') {\n        opts.crossOrigin = crossOrigin;\n    }\n    if (typeof nonce === 'string') {\n        opts.nonce = nonce;\n    }\n    ReactDOM.preload(href, opts);\n}\nexport function preconnect(href, crossOrigin, nonce) {\n    const opts = {};\n    if (typeof crossOrigin === 'string') {\n        opts.crossOrigin = crossOrigin;\n    }\n    if (typeof nonce === 'string') {\n        opts.nonce = nonce;\n    }\n    ;\n    ReactDOM.preconnect(href, opts);\n}\n\n//# sourceMappingURL=preloads.js.map","import stringHash from 'next/dist/compiled/string-hash';\nimport { formatServerError } from '../../lib/format-server-error';\nimport { SpanStatusCode, getTracer } from '../lib/trace/tracer';\nimport { isAbortError } from '../pipe-readable';\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr';\nimport { isDynamicServerError } from '../../client/components/hooks-server-context';\nimport { isNextRouterError } from '../../client/components/is-next-router-error';\nimport { isPrerenderInterruptedError } from './dynamic-rendering';\nimport { getProperError } from '../../lib/is-error';\nimport { createDigestWithErrorCode } from '../../lib/error-telemetry-utils';\nimport { isReactLargeShellError } from './react-large-shell-error';\n/**\n * Returns a digest for well-known Next.js errors, otherwise `undefined`. If a\n * digest is returned this also means that the error does not need to be\n * reported.\n */ export function getDigestForWellKnownError(error) {\n    // If we're bailing out to CSR, we don't need to log the error.\n    if (isBailoutToCSRError(error)) return error.digest;\n    // If this is a navigation error, we don't need to log the error.\n    if (isNextRouterError(error)) return error.digest;\n    // If this error occurs, we know that we should be stopping the static\n    // render. This is only thrown in static generation when PPR is not enabled,\n    // which causes the whole page to be marked as dynamic. We don't need to\n    // tell the user about this error, as it's not actionable.\n    if (isDynamicServerError(error)) return error.digest;\n    // If this is a prerender interrupted error, we don't need to log the error.\n    if (isPrerenderInterruptedError(error)) return error.digest;\n    return undefined;\n}\nexport function createFlightReactServerErrorHandler(shouldFormatError, onReactServerRenderError) {\n    return (thrownValue)=>{\n        if (typeof thrownValue === 'string') {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            return stringHash(thrownValue).toString();\n        }\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        if (isReactLargeShellError(thrownValue)) {\n            // TODO: Aggregate\n            console.error(thrownValue);\n            return undefined;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (!err.digest) {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            err.digest = stringHash(err.message + err.stack || '').toString();\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Record exception in an active span, if available.\n        const span = getTracer().getActiveScopeSpan();\n        if (span) {\n            span.recordException(err);\n            span.setAttribute('error.type', err.name);\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: err.message\n            });\n        }\n        onReactServerRenderError(err);\n        return createDigestWithErrorCode(thrownValue, err.digest);\n    };\n}\nexport function createHTMLReactServerErrorHandler(shouldFormatError, isNextExport, reactServerErrors, silenceLogger, onReactServerRenderError) {\n    return (thrownValue)=>{\n        var _err_message;\n        if (typeof thrownValue === 'string') {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            return stringHash(thrownValue).toString();\n        }\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        if (isReactLargeShellError(thrownValue)) {\n            // TODO: Aggregate\n            console.error(thrownValue);\n            return undefined;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (!err.digest) {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            err.digest = stringHash(err.message + (err.stack || '')).toString();\n        }\n        // @TODO by putting this here and not at the top it is possible that\n        // we don't error the build in places we actually expect to\n        if (!reactServerErrors.has(err.digest)) {\n            reactServerErrors.set(err.digest, err);\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Don't log the suppressed error during export\n        if (!(isNextExport && (err == null ? void 0 : (_err_message = err.message) == null ? void 0 : _err_message.includes('The specific message is omitted in production builds to avoid leaking sensitive details.')))) {\n            // Record exception in an active span, if available.\n            const span = getTracer().getActiveScopeSpan();\n            if (span) {\n                span.recordException(err);\n                span.setAttribute('error.type', err.name);\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: err.message\n                });\n            }\n            if (!silenceLogger) {\n                onReactServerRenderError == null ? void 0 : onReactServerRenderError(err);\n            }\n        }\n        return createDigestWithErrorCode(thrownValue, err.digest);\n    };\n}\nexport function createHTMLErrorHandler(shouldFormatError, isNextExport, reactServerErrors, allCapturedErrors, silenceLogger, onHTMLRenderSSRError) {\n    return (thrownValue, errorInfo)=>{\n        var _err_message;\n        if (isReactLargeShellError(thrownValue)) {\n            // TODO: Aggregate\n            console.error(thrownValue);\n            return undefined;\n        }\n        let isSSRError = true;\n        allCapturedErrors.push(thrownValue);\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (err.digest) {\n            if (reactServerErrors.has(err.digest)) {\n                // This error is likely an obfuscated error from react-server.\n                // We recover the original error here.\n                thrownValue = reactServerErrors.get(err.digest);\n                isSSRError = false;\n            } else {\n            // The error is not from react-server but has a digest\n            // from other means so we don't need to produce a new one\n            }\n        } else {\n            err.digest = stringHash(err.message + ((errorInfo == null ? void 0 : errorInfo.componentStack) || err.stack || '')).toString();\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Don't log the suppressed error during export\n        if (!(isNextExport && (err == null ? void 0 : (_err_message = err.message) == null ? void 0 : _err_message.includes('The specific message is omitted in production builds to avoid leaking sensitive details.')))) {\n            // Record exception in an active span, if available.\n            const span = getTracer().getActiveScopeSpan();\n            if (span) {\n                span.recordException(err);\n                span.setAttribute('error.type', err.name);\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: err.message\n                });\n            }\n            if (!silenceLogger && // HTML errors contain RSC errors as well, filter them out before reporting\n            isSSRError) {\n                onHTMLRenderSSRError(err, errorInfo);\n            }\n        }\n        return createDigestWithErrorCode(thrownValue, err.digest);\n    };\n}\nexport function isUserLandError(err) {\n    return !isAbortError(err) && !isBailoutToCSRError(err) && !isNextRouterError(err);\n}\n\n//# sourceMappingURL=create-error-handler.js.map","const invalidServerComponentReactHooks = [\n    'useDeferredValue',\n    'useEffect',\n    'useImperativeHandle',\n    'useInsertionEffect',\n    'useLayoutEffect',\n    'useReducer',\n    'useRef',\n    'useState',\n    'useSyncExternalStore',\n    'useTransition',\n    'experimental_useOptimistic',\n    'useOptimistic'\n];\nfunction setMessage(error, message) {\n    error.message = message;\n    if (error.stack) {\n        const lines = error.stack.split('\\n');\n        lines[0] = message;\n        error.stack = lines.join('\\n');\n    }\n}\n/**\n * Input:\n * Error: Something went wrong\n    at funcName (/path/to/file.js:10:5)\n    at anotherFunc (/path/to/file.js:15:10)\n \n * Output:\n    at funcName (/path/to/file.js:10:5)\n    at anotherFunc (/path/to/file.js:15:10) \n */ export function getStackWithoutErrorMessage(error) {\n    const stack = error.stack;\n    if (!stack) return '';\n    return stack.replace(/^[^\\n]*\\n/, '');\n}\nexport function formatServerError(error) {\n    if (typeof (error == null ? void 0 : error.message) !== 'string') return;\n    if (error.message.includes('Class extends value undefined is not a constructor or null')) {\n        const addedMessage = 'This might be caused by a React Class Component being rendered in a Server Component, React Class Components only works in Client Components. Read more: https://nextjs.org/docs/messages/class-component-in-server-component';\n        // If this error instance already has the message, don't add it again\n        if (error.message.includes(addedMessage)) return;\n        setMessage(error, `${error.message}\n\n${addedMessage}`);\n        return;\n    }\n    if (error.message.includes('createContext is not a function')) {\n        setMessage(error, 'createContext only works in Client Components. Add the \"use client\" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/context-in-server-component');\n        return;\n    }\n    for (const clientHook of invalidServerComponentReactHooks){\n        const regex = new RegExp(`\\\\b${clientHook}\\\\b.*is not a function`);\n        if (regex.test(error.message)) {\n            setMessage(error, `${clientHook} only works in Client Components. Add the \"use client\" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/react-client-hook-in-server-component`);\n            return;\n        }\n    }\n}\n\n//# sourceMappingURL=format-server-error.js.map","import { RedirectStatusCode } from './redirect-status-code';\nexport const REDIRECT_ERROR_CODE = 'NEXT_REDIRECT';\nexport var RedirectType = /*#__PURE__*/ function(RedirectType) {\n    RedirectType[\"push\"] = \"push\";\n    RedirectType[\"replace\"] = \"replace\";\n    return RedirectType;\n}({});\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */ export function isRedirectError(error) {\n    if (typeof error !== 'object' || error === null || !('digest' in error) || typeof error.digest !== 'string') {\n        return false;\n    }\n    const digest = error.digest.split(';');\n    const [errorCode, type] = digest;\n    const destination = digest.slice(2, -2).join(';');\n    const status = digest.at(-2);\n    const statusCode = Number(status);\n    return errorCode === REDIRECT_ERROR_CODE && (type === 'replace' || type === 'push') && typeof destination === 'string' && !isNaN(statusCode) && statusCode in RedirectStatusCode;\n}\n\n//# sourceMappingURL=redirect-error.js.map","const ERROR_CODE_DELIMITER = '@';\n/**\n * Augments the digest field of errors thrown in React Server Components (RSC) with an error code.\n * Since RSC errors can only be serialized through the digest field, this provides a way to include\n * an additional error code that can be extracted client-side via `extractNextErrorCode`.\n *\n * The error code is appended to the digest string with a semicolon separator, allowing it to be\n * parsed out later while preserving the original digest value.\n */ export const createDigestWithErrorCode = (thrownValue, originalDigest)=>{\n    if (typeof thrownValue === 'object' && thrownValue !== null && '__NEXT_ERROR_CODE' in thrownValue) {\n        return `${originalDigest}${ERROR_CODE_DELIMITER}${thrownValue.__NEXT_ERROR_CODE}`;\n    }\n    return originalDigest;\n};\nexport const extractNextErrorCode = (error)=>{\n    if (typeof error === 'object' && error !== null && '__NEXT_ERROR_CODE' in error && typeof error.__NEXT_ERROR_CODE === 'string') {\n        return error.__NEXT_ERROR_CODE;\n    }\n    if (typeof error === 'object' && error !== null && 'digest' in error && typeof error.digest === 'string') {\n        const segments = error.digest.split(ERROR_CODE_DELIMITER);\n        const errorCode = segments.find((segment)=>segment.startsWith('E'));\n        return errorCode;\n    }\n    return undefined;\n};\n\n//# sourceMappingURL=error-telemetry-utils.js.map","import { ReflectAdapter } from '../web/spec-extension/adapters/reflect';\nimport { throwToInterruptStaticGeneration, postponeWithTracking, annotateDynamicAccess, delayUntilRuntimeStage } from '../app-render/dynamic-rendering';\nimport { workUnitAsyncStorage, throwInvariantForMissingStore } from '../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { makeDevtoolsIOAwarePromise, makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger';\nimport { describeStringPropertyAccess, describeHasCheckingStringProperty, wellKnownProperties } from '../../shared/lib/utils/reflect-utils';\nimport { throwWithStaticGenerationBailoutErrorWithDynamicError, throwForSearchParamsAccessInUseCache } from './utils';\nimport { RenderStage } from '../app-render/staged-rendering';\nexport function createSearchParamsFromClient(underlyingSearchParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createStaticPrerenderSearchParams(workStore, workUnitStore);\n            case 'prerender-runtime':\n                throw Object.defineProperty(new InvariantError('createSearchParamsFromClient should not be called in a runtime prerender.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E769\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createSearchParamsFromClient should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E739\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'request':\n                return createRenderSearchParams(underlyingSearchParams, workStore, workUnitStore);\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\n// generateMetadata always runs in RSC context so it is equivalent to a Server Page Component\nexport const createServerSearchParamsForMetadata = createServerSearchParamsForServerPage;\nexport function createServerSearchParamsForServerPage(underlyingSearchParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createStaticPrerenderSearchParams(workStore, workUnitStore);\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createServerSearchParamsForServerPage should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E747\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-runtime':\n                return createRuntimePrerenderSearchParams(underlyingSearchParams, workUnitStore);\n            case 'request':\n                return createRenderSearchParams(underlyingSearchParams, workStore, workUnitStore);\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\nexport function createPrerenderSearchParamsForClientPage(workStore) {\n    if (workStore.forceStatic) {\n        // When using forceStatic we override all other logic and always just return an empty\n        // dictionary object.\n        return Promise.resolve({});\n    }\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n                // We're prerendering in a mode that aborts (cacheComponents) and should stall\n                // the promise to ensure the RSC side is considered dynamic\n                return makeHangingPromise(workUnitStore.renderSignal, workStore.route, '`searchParams`');\n            case 'prerender-runtime':\n                throw Object.defineProperty(new InvariantError('createPrerenderSearchParamsForClientPage should not be called in a runtime prerender.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E768\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createPrerenderSearchParamsForClientPage should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E746\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'request':\n                return Promise.resolve({});\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\nfunction createStaticPrerenderSearchParams(workStore, prerenderStore) {\n    if (workStore.forceStatic) {\n        // When using forceStatic we override all other logic and always just return an empty\n        // dictionary object.\n        return Promise.resolve({});\n    }\n    switch(prerenderStore.type){\n        case 'prerender':\n        case 'prerender-client':\n            // We are in a cacheComponents (PPR or otherwise) prerender\n            return makeHangingSearchParams(workStore, prerenderStore);\n        case 'prerender-ppr':\n        case 'prerender-legacy':\n            // We are in a legacy static generation and need to interrupt the\n            // prerender when search params are accessed.\n            return makeErroringSearchParams(workStore, prerenderStore);\n        default:\n            return prerenderStore;\n    }\n}\nfunction createRuntimePrerenderSearchParams(underlyingSearchParams, workUnitStore) {\n    return delayUntilRuntimeStage(workUnitStore, makeUntrackedSearchParams(underlyingSearchParams));\n}\nfunction createRenderSearchParams(underlyingSearchParams, workStore, requestStore) {\n    if (workStore.forceStatic) {\n        // When using forceStatic we override all other logic and always just return an empty\n        // dictionary object.\n        return Promise.resolve({});\n    } else {\n        if (process.env.NODE_ENV === 'development') {\n            // Semantically we only need the dev tracking when running in `next dev`\n            // but since you would never use next dev with production NODE_ENV we use this\n            // as a proxy so we can statically exclude this code from production builds.\n            return makeUntrackedSearchParamsWithDevWarnings(underlyingSearchParams, workStore, requestStore);\n        } else {\n            return makeUntrackedSearchParams(underlyingSearchParams);\n        }\n    }\n}\nconst CachedSearchParams = new WeakMap();\nconst CachedSearchParamsForUseCache = new WeakMap();\nfunction makeHangingSearchParams(workStore, prerenderStore) {\n    const cachedSearchParams = CachedSearchParams.get(prerenderStore);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const promise = makeHangingPromise(prerenderStore.renderSignal, workStore.route, '`searchParams`');\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (Object.hasOwn(promise, prop)) {\n                // The promise has this property directly. we must return it.\n                // We know it isn't a dynamic access because it can only be something\n                // that was previously written to the promise and thus not an underlying searchParam value\n                return ReflectAdapter.get(target, prop, receiver);\n            }\n            switch(prop){\n                case 'then':\n                    {\n                        const expression = '`await searchParams`, `searchParams.then`, or similar';\n                        annotateDynamicAccess(expression, prerenderStore);\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n                case 'status':\n                    {\n                        const expression = '`use(searchParams)`, `searchParams.status`, or similar';\n                        annotateDynamicAccess(expression, prerenderStore);\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n                default:\n                    {\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n            }\n        }\n    });\n    CachedSearchParams.set(prerenderStore, proxiedPromise);\n    return proxiedPromise;\n}\nfunction makeErroringSearchParams(workStore, prerenderStore) {\n    const cachedSearchParams = CachedSearchParams.get(workStore);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const underlyingSearchParams = {};\n    // For search params we don't construct a ReactPromise because we want to interrupt\n    // rendering on any property access that was not set from outside and so we only want\n    // to have properties like value and status if React sets them.\n    const promise = Promise.resolve(underlyingSearchParams);\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (Object.hasOwn(promise, prop)) {\n                // The promise has this property directly. we must return it.\n                // We know it isn't a dynamic access because it can only be something\n                // that was previously written to the promise and thus not an underlying searchParam value\n                return ReflectAdapter.get(target, prop, receiver);\n            }\n            if (typeof prop === 'string' && prop === 'then') {\n                const expression = '`await searchParams`, `searchParams.then`, or similar';\n                if (workStore.dynamicShouldError) {\n                    throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                } else if (prerenderStore.type === 'prerender-ppr') {\n                    // PPR Prerender (no cacheComponents)\n                    postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                } else {\n                    // Legacy Prerender\n                    throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        }\n    });\n    CachedSearchParams.set(workStore, proxiedPromise);\n    return proxiedPromise;\n}\n/**\n * This is a variation of `makeErroringSearchParams` that always throws an\n * error on access, because accessing searchParams inside of `\"use cache\"` is\n * not allowed.\n */ export function makeErroringSearchParamsForUseCache(workStore) {\n    const cachedSearchParams = CachedSearchParamsForUseCache.get(workStore);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const promise = Promise.resolve({});\n    const proxiedPromise = new Proxy(promise, {\n        get: function get(target, prop, receiver) {\n            if (Object.hasOwn(promise, prop)) {\n                // The promise has this property directly. we must return it. We know it\n                // isn't a dynamic access because it can only be something that was\n                // previously written to the promise and thus not an underlying\n                // searchParam value\n                return ReflectAdapter.get(target, prop, receiver);\n            }\n            if (typeof prop === 'string' && (prop === 'then' || !wellKnownProperties.has(prop))) {\n                throwForSearchParamsAccessInUseCache(workStore, get);\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        }\n    });\n    CachedSearchParamsForUseCache.set(workStore, proxiedPromise);\n    return proxiedPromise;\n}\nfunction makeUntrackedSearchParams(underlyingSearchParams) {\n    const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const promise = Promise.resolve(underlyingSearchParams);\n    CachedSearchParams.set(underlyingSearchParams, promise);\n    return promise;\n}\nfunction makeUntrackedSearchParamsWithDevWarnings(underlyingSearchParams, workStore, requestStore) {\n    if (requestStore.asyncApiPromises) {\n        // Do not cache the resulting promise. If we do, we'll only show the first \"awaited at\"\n        // across all segments that receive searchParams.\n        return makeUntrackedSearchParamsWithDevWarningsImpl(underlyingSearchParams, workStore, requestStore);\n    } else {\n        const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);\n        if (cachedSearchParams) {\n            return cachedSearchParams;\n        }\n        const promise = makeUntrackedSearchParamsWithDevWarningsImpl(underlyingSearchParams, workStore, requestStore);\n        CachedSearchParams.set(requestStore, promise);\n        return promise;\n    }\n}\nfunction makeUntrackedSearchParamsWithDevWarningsImpl(underlyingSearchParams, workStore, requestStore) {\n    const promiseInitialized = {\n        current: false\n    };\n    const proxiedUnderlying = instrumentSearchParamsObjectWithDevWarnings(underlyingSearchParams, workStore, promiseInitialized);\n    let promise;\n    if (requestStore.asyncApiPromises) {\n        // We wrap each instance of searchParams in a `new Promise()`.\n        // This is important when all awaits are in third party which would otherwise\n        // track all the way to the internal params.\n        const sharedSearchParamsParent = requestStore.asyncApiPromises.sharedSearchParamsParent;\n        promise = new Promise((resolve, reject)=>{\n            sharedSearchParamsParent.then(()=>resolve(proxiedUnderlying), reject);\n        });\n        // @ts-expect-error\n        promise.displayName = 'searchParams';\n    } else {\n        promise = makeDevtoolsIOAwarePromise(proxiedUnderlying, requestStore, RenderStage.Runtime);\n    }\n    promise.then(()=>{\n        promiseInitialized.current = true;\n    }, // If we're in staged rendering, this promise will reject if the render\n    // is aborted before it can reach the runtime stage.\n    // In that case, we have to prevent an unhandled rejection from the promise\n    // created by this `.then()` call.\n    // This does not affect the `promiseInitialized` logic above,\n    // because `proxiedUnderlying` will not be used to resolve the promise,\n    // so there's no risk of any of its properties being accessed and triggering\n    // an undesireable warning.\n    ignoreReject);\n    return instrumentSearchParamsPromiseWithDevWarnings(underlyingSearchParams, promise, workStore);\n}\nfunction ignoreReject() {}\nfunction instrumentSearchParamsObjectWithDevWarnings(underlyingSearchParams, workStore, promiseInitialized) {\n    // We have an unfortunate sequence of events that requires this initialization logic. We want to instrument the underlying\n    // searchParams object to detect if you are accessing values in dev. This is used for warnings and for things like the static prerender\n    // indicator. However when we pass this proxy to our Promise.resolve() below the VM checks if the resolved value is a promise by looking\n    // at the `.then` property. To our dynamic tracking logic this is indistinguishable from a `then` searchParam and so we would normally trigger\n    // dynamic tracking. However we know that this .then is not real dynamic access, it's just how thenables resolve in sequence. So we introduce\n    // this initialization concept so we omit the dynamic check until after we've constructed our resolved promise.\n    return new Proxy(underlyingSearchParams, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string' && promiseInitialized.current) {\n                if (workStore.dynamicShouldError) {\n                    const expression = describeStringPropertyAccess('searchParams', prop);\n                    throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        has (target, prop) {\n            if (typeof prop === 'string') {\n                if (workStore.dynamicShouldError) {\n                    const expression = describeHasCheckingStringProperty('searchParams', prop);\n                    throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                }\n            }\n            return Reflect.has(target, prop);\n        },\n        ownKeys (target) {\n            if (workStore.dynamicShouldError) {\n                const expression = '`{...searchParams}`, `Object.keys(searchParams)`, or similar';\n                throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n            }\n            return Reflect.ownKeys(target);\n        }\n    });\n}\nfunction instrumentSearchParamsPromiseWithDevWarnings(underlyingSearchParams, promise, workStore) {\n    // Track which properties we should warn for.\n    const proxiedProperties = new Set();\n    Object.keys(underlyingSearchParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            proxiedProperties.add(prop);\n        }\n    });\n    return new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (prop === 'then' && workStore.dynamicShouldError) {\n                const expression = '`searchParams.then`';\n                throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n            }\n            if (typeof prop === 'string') {\n                if (!wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor\n                // the underlying searchParams.\n                Reflect.has(target, prop) === false)) {\n                    const expression = describeStringPropertyAccess('searchParams', prop);\n                    warnForSyncAccess(workStore.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return Reflect.set(target, prop, value, receiver);\n        },\n        has (target, prop) {\n            if (typeof prop === 'string') {\n                if (!wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor\n                // the underlying searchParams.\n                Reflect.has(target, prop) === false)) {\n                    const expression = describeHasCheckingStringProperty('searchParams', prop);\n                    warnForSyncAccess(workStore.route, expression);\n                }\n            }\n            return Reflect.has(target, prop);\n        },\n        ownKeys (target) {\n            const expression = '`Object.keys(searchParams)` or similar';\n            warnForSyncAccess(workStore.route, expression);\n            return Reflect.ownKeys(target);\n        }\n    });\n}\nconst warnForSyncAccess = createDedupedByCallsiteServerErrorLoggerDev(createSearchAccessError);\nfunction createSearchAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`searchParams\\` is a Promise and must be unwrapped with \\`await\\` or \\`React.use()\\` before accessing its properties. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E848\",\n        enumerable: false,\n        configurable: true\n    });\n}\n\n//# sourceMappingURL=search-params.js.map","const noop = ()=>{};\nlet registry;\nif (globalThis.FinalizationRegistry) {\n    registry = new FinalizationRegistry((weakRef)=>{\n        const stream = weakRef.deref();\n        if (stream && !stream.locked) {\n            stream.cancel('Response object has been garbage collected').then(noop);\n        }\n    });\n}\n/**\n * Clones a response by teeing the body so we can return two independent\n * ReadableStreams from it. This avoids the bug in the undici library around\n * response cloning.\n *\n * After cloning, the original response's body will be consumed and closed.\n *\n * @see https://github.com/vercel/next.js/pull/73274\n *\n * @param original - The original response to clone.\n * @returns A tuple containing two independent clones of the original response.\n */ export function cloneResponse(original) {\n    // If the response has no body, then we can just return the original response\n    // twice because it's immutable.\n    if (!original.body) {\n        return [\n            original,\n            original\n        ];\n    }\n    const [body1, body2] = original.body.tee();\n    const cloned1 = new Response(body1, {\n        status: original.status,\n        statusText: original.statusText,\n        headers: original.headers\n    });\n    Object.defineProperty(cloned1, 'url', {\n        value: original.url,\n        // How the original response.url behaves\n        configurable: true,\n        enumerable: true,\n        writable: false\n    });\n    // The Fetch Standard allows users to skip consuming the response body by\n    // relying on garbage collection to release connection resources.\n    // https://github.com/nodejs/undici?tab=readme-ov-file#garbage-collection\n    //\n    // To cancel the stream you then need to cancel both resulting branches.\n    // Teeing a stream will generally lock it for the duration, preventing other\n    // readers from locking it.\n    // https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/tee\n    // cloned2 is stored in a react cache and cloned for subsequent requests.\n    // It is the original request, and is is garbage collected by a\n    // FinalizationRegistry in Undici, but since we're tee-ing the stream\n    // ourselves, we need to cancel clone1's stream (the response returned from\n    // our dedupe fetch) when clone1 is reclaimed, otherwise we leak memory.\n    if (registry && cloned1.body) {\n        registry.register(cloned1, new WeakRef(cloned1.body));\n    }\n    const cloned2 = new Response(body2, {\n        status: original.status,\n        statusText: original.statusText,\n        headers: original.headers\n    });\n    Object.defineProperty(cloned2, 'url', {\n        value: original.url,\n        // How the original response.url behaves\n        configurable: true,\n        enumerable: true,\n        writable: false\n    });\n    return [\n        cloned1,\n        cloned2\n    ];\n}\n\n//# sourceMappingURL=clone-response.js.map","export function getObjectClassLabel(value) {\n    return Object.prototype.toString.call(value);\n}\nexport function isPlainObject(value) {\n    if (getObjectClassLabel(value) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    /**\n   * this used to be previously:\n   *\n   * `return prototype === null || prototype === Object.prototype`\n   *\n   * but Edge Runtime expose Object from vm, being that kind of type-checking wrongly fail.\n   *\n   * It was changed to the current implementation since it's resilient to serialization.\n   */ return prototype === null || prototype.hasOwnProperty('isPrototypeOf');\n}\n\n//# sourceMappingURL=is-plain-object.js.map","export function interopDefault(mod) {\n    return mod.default || mod;\n}\n\n//# sourceMappingURL=interop-default.js.map","export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__';\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__';\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__';\nexport const ROOT_LAYOUT_BOUNDARY_NAME = '__next_root_layout_boundary__';\n\n//# sourceMappingURL=boundary-constants.js.map","export const HTTPAccessErrorStatus = {\n    NOT_FOUND: 404,\n    FORBIDDEN: 403,\n    UNAUTHORIZED: 401\n};\nconst ALLOWED_CODES = new Set(Object.values(HTTPAccessErrorStatus));\nexport const HTTP_ERROR_FALLBACK_ERROR_CODE = 'NEXT_HTTP_ERROR_FALLBACK';\n/**\n * Checks an error to determine if it's an error generated by\n * the HTTP navigation APIs `notFound()`, `forbidden()` or `unauthorized()`.\n *\n * @param error the error that may reference a HTTP access error\n * @returns true if the error is a HTTP access error\n */ export function isHTTPAccessFallbackError(error) {\n    if (typeof error !== 'object' || error === null || !('digest' in error) || typeof error.digest !== 'string') {\n        return false;\n    }\n    const [prefix, httpStatus] = error.digest.split(';');\n    return prefix === HTTP_ERROR_FALLBACK_ERROR_CODE && ALLOWED_CODES.has(Number(httpStatus));\n}\nexport function getAccessFallbackHTTPStatus(error) {\n    const httpStatus = error.digest.split(';')[1];\n    return Number(httpStatus);\n}\nexport function getAccessFallbackErrorTypeByStatus(status) {\n    switch(status){\n        case 401:\n            return 'unauthorized';\n        case 403:\n            return 'forbidden';\n        case 404:\n            return 'not-found';\n        default:\n            return;\n    }\n}\n\n//# sourceMappingURL=http-access-fallback.js.map","export function nonNullable(value) {\n    return value !== null && value !== undefined;\n}\n\n//# sourceMappingURL=non-nullable.js.map","export const ViewportMetaKeys = {\n    width: 'width',\n    height: 'height',\n    initialScale: 'initial-scale',\n    minimumScale: 'minimum-scale',\n    maximumScale: 'maximum-scale',\n    viewportFit: 'viewport-fit',\n    userScalable: 'user-scalable',\n    interactiveWidget: 'interactive-widget'\n};\nexport const IconKeys = [\n    'icon',\n    'shortcut',\n    'apple',\n    'other'\n];\n\n//# sourceMappingURL=constants.js.map","export function isHangingPromiseRejectionError(err) {\n    if (typeof err !== 'object' || err === null || !('digest' in err)) {\n        return false;\n    }\n    return err.digest === HANGING_PROMISE_REJECTION;\n}\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION';\nclass HangingPromiseRejectionError extends Error {\n    constructor(route, expression){\n        super(`During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context. This occurred at route \"${route}\".`), this.route = route, this.expression = expression, this.digest = HANGING_PROMISE_REJECTION;\n    }\n}\nconst abortListenersBySignal = new WeakMap();\n/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for cacheComponents where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */ export function makeHangingPromise(signal, route, expression) {\n    if (signal.aborted) {\n        return Promise.reject(new HangingPromiseRejectionError(route, expression));\n    } else {\n        const hangingPromise = new Promise((_, reject)=>{\n            const boundRejection = reject.bind(null, new HangingPromiseRejectionError(route, expression));\n            let currentListeners = abortListenersBySignal.get(signal);\n            if (currentListeners) {\n                currentListeners.push(boundRejection);\n            } else {\n                const listeners = [\n                    boundRejection\n                ];\n                abortListenersBySignal.set(signal, listeners);\n                signal.addEventListener('abort', ()=>{\n                    for(let i = 0; i < listeners.length; i++){\n                        listeners[i]();\n                    }\n                }, {\n                    once: true\n                });\n            }\n        });\n        // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n        // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n        // your own promise out of it you'll need to ensure you handle the error when it rejects.\n        hangingPromise.catch(ignoreReject);\n        return hangingPromise;\n    }\n}\nfunction ignoreReject() {}\nexport function makeDevtoolsIOAwarePromise(underlying, requestStore, stage) {\n    if (requestStore.stagedRendering) {\n        // We resolve each stage in a timeout, so React DevTools will pick this up as IO.\n        return requestStore.stagedRendering.delayUntilStage(stage, undefined, underlying);\n    }\n    // in React DevTools if we resolve in a setTimeout we will observe\n    // the promise resolution as something that can suspend a boundary or root.\n    return new Promise((resolve)=>{\n        // Must use setTimeout to be considered IO React DevTools. setImmediate will not work.\n        setTimeout(()=>{\n            resolve(underlying);\n        }, 0);\n    });\n}\n\n//# sourceMappingURL=dynamic-rendering-utils.js.map","export function createDefaultViewport() {\n    return {\n        // name=viewport\n        width: 'device-width',\n        initialScale: 1,\n        // visual metadata\n        themeColor: null,\n        colorScheme: null\n    };\n}\nexport function createDefaultMetadata() {\n    return {\n        // Deprecated ones\n        viewport: null,\n        themeColor: null,\n        colorScheme: null,\n        metadataBase: null,\n        // Other values are all null\n        title: null,\n        description: null,\n        applicationName: null,\n        authors: null,\n        generator: null,\n        keywords: null,\n        referrer: null,\n        creator: null,\n        publisher: null,\n        robots: null,\n        manifest: null,\n        alternates: {\n            canonical: null,\n            languages: null,\n            media: null,\n            types: null\n        },\n        icons: null,\n        openGraph: null,\n        twitter: null,\n        verification: {},\n        appleWebApp: null,\n        formatDetection: null,\n        itunes: null,\n        facebook: null,\n        pinterest: null,\n        abstract: null,\n        appLinks: null,\n        archives: null,\n        assets: null,\n        bookmarks: null,\n        category: null,\n        classification: null,\n        pagination: {\n            previous: null,\n            next: null\n        },\n        other: {}\n    };\n}\n\n//# sourceMappingURL=default-metadata.js.map","export function createPromiseWithResolvers() {\n    // Shim of Stage 4 Promise.withResolvers proposal\n    let resolve;\n    let reject;\n    const promise = new Promise((res, rej)=>{\n        resolve = res;\n        reject = rej;\n    });\n    return {\n        resolve: resolve,\n        reject: reject,\n        promise\n    };\n}\n\n//# sourceMappingURL=promise-with-resolvers.js.map","import * as React from 'react';\nconst errorRef = {\n    current: null\n};\n// React.cache is currently only available in canary/experimental React channels.\nconst cache = typeof React.cache === 'function' ? React.cache : (fn)=>fn;\n// When Cache Components is enabled, we record these as errors so that they\n// are captured by the dev overlay as it's more critical to fix these\n// when enabled.\nconst logErrorOrWarn = process.env.__NEXT_CACHE_COMPONENTS ? console.error : console.warn;\n// We don't want to dedupe across requests.\n// The developer might've just attempted to fix the warning so we should warn again if it still happens.\nconst flushCurrentErrorIfNew = cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- cache key\n(key)=>{\n    try {\n        logErrorOrWarn(errorRef.current);\n    } finally{\n        errorRef.current = null;\n    }\n});\n/**\n * Creates a function that logs an error message that is deduped by the userland\n * callsite.\n * This requires no indirection between the call of this function and the userland\n * callsite i.e. there's only a single library frame above this.\n * Do not use on the Client where sourcemaps and ignore listing might be enabled.\n * Only use that for warnings need a fix independent of the callstack.\n *\n * @param getMessage\n * @returns\n */ export function createDedupedByCallsiteServerErrorLoggerDev(getMessage) {\n    return function logDedupedError(...args) {\n        const message = getMessage(...args);\n        if (process.env.NODE_ENV !== 'production') {\n            var _stack;\n            const callStackFrames = (_stack = new Error().stack) == null ? void 0 : _stack.split('\\n');\n            if (callStackFrames === undefined || callStackFrames.length < 4) {\n                logErrorOrWarn(message);\n            } else {\n                // Error:\n                //   logDedupedError\n                //   asyncApiBeingAccessedSynchronously\n                //   <userland callsite>\n                // TODO: This breaks if sourcemaps with ignore lists are enabled.\n                const key = callStackFrames[4];\n                errorRef.current = message;\n                flushCurrentErrorIfNew(key);\n            }\n        } else {\n            logErrorOrWarn(message);\n        }\n    };\n}\n\n//# sourceMappingURL=create-deduped-by-callsite-server-error-logger.js.map","import { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { afterTaskAsyncStorage } from '../app-render/after-task-async-storage.external';\nexport function throwWithStaticGenerationBailoutErrorWithDynamicError(route, expression) {\n    throw Object.defineProperty(new StaticGenBailoutError(`Route ${route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n        value: \"E543\",\n        enumerable: false,\n        configurable: true\n    });\n}\nexport function throwForSearchParamsAccessInUseCache(workStore, constructorOpt) {\n    const error = Object.defineProperty(new Error(`Route ${workStore.route} used \\`searchParams\\` inside \"use cache\". Accessing dynamic request data inside a cache scope is not supported. If you need some search params inside a cached function await \\`searchParams\\` outside of the cached function and pass only the required search params as arguments to the cached function. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`), \"__NEXT_ERROR_CODE\", {\n        value: \"E842\",\n        enumerable: false,\n        configurable: true\n    });\n    Error.captureStackTrace(error, constructorOpt);\n    workStore.invalidDynamicUsageError ??= error;\n    throw error;\n}\nexport function isRequestAPICallableInsideAfter() {\n    const afterTaskStore = afterTaskAsyncStorage.getStore();\n    return (afterTaskStore == null ? void 0 : afterTaskStore.rootTaskSpawnPhase) === 'action';\n}\n\n//# sourceMappingURL=utils.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { IconMark } from './icon-mark';\nimport { MetaFilter } from './meta';\nfunction IconDescriptorLink({ icon }) {\n    const { url, rel = 'icon', ...props } = icon;\n    return /*#__PURE__*/ _jsx(\"link\", {\n        rel: rel,\n        href: url.toString(),\n        ...props\n    });\n}\nfunction IconLink({ rel, icon }) {\n    if (typeof icon === 'object' && !(icon instanceof URL)) {\n        if (!icon.rel && rel) icon.rel = rel;\n        return IconDescriptorLink({\n            icon\n        });\n    } else {\n        const href = icon.toString();\n        return /*#__PURE__*/ _jsx(\"link\", {\n            rel: rel,\n            href: href\n        });\n    }\n}\nexport function IconsMetadata({ icons }) {\n    if (!icons) return null;\n    const shortcutList = icons.shortcut;\n    const iconList = icons.icon;\n    const appleList = icons.apple;\n    const otherList = icons.other;\n    const hasIcon = Boolean((shortcutList == null ? void 0 : shortcutList.length) || (iconList == null ? void 0 : iconList.length) || (appleList == null ? void 0 : appleList.length) || (otherList == null ? void 0 : otherList.length));\n    if (!hasIcon) return null;\n    return MetaFilter([\n        shortcutList ? shortcutList.map((icon)=>IconLink({\n                rel: 'shortcut icon',\n                icon\n            })) : null,\n        iconList ? iconList.map((icon)=>IconLink({\n                rel: 'icon',\n                icon\n            })) : null,\n        appleList ? appleList.map((icon)=>IconLink({\n                rel: 'apple-touch-icon',\n                icon\n            })) : null,\n        otherList ? otherList.map((icon)=>IconDescriptorLink({\n                icon\n            })) : null,\n        hasIcon ? /*#__PURE__*/ _jsx(IconMark, {}) : null\n    ]);\n}\n\n//# sourceMappingURL=icons.js.map","/* eslint-disable @next/internal/no-ambiguous-jsx -- Bundled in entry-base so it gets the right JSX runtime. */ import { jsx as _jsx } from \"react/jsx-runtime\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { createFromReadableStream } from 'react-server-dom-webpack/client';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { prerender } from 'react-server-dom-webpack/static';\nimport { streamFromBuffer, streamToBuffer } from '../stream-utils/node-web-streams-helper';\nimport { waitAtLeastOneReactRenderTask } from '../../lib/scheduler';\nimport { createSegmentRequestKeyPart, appendSegmentRequestKeyPart, ROOT_SEGMENT_REQUEST_KEY } from '../../shared/lib/segment-cache/segment-value-encoding';\nimport { getDigestForWellKnownError } from './create-error-handler';\nconst filterStackFrame = process.env.NODE_ENV !== 'production' ? require('../lib/source-maps').filterStackFrameDEV : undefined;\nconst findSourceMapURL = process.env.NODE_ENV !== 'production' ? require('../lib/source-maps').findSourceMapURLDEV : undefined;\nfunction onSegmentPrerenderError(error) {\n    const digest = getDigestForWellKnownError(error);\n    if (digest) {\n        return digest;\n    }\n// We don't need to log the errors because we would have already done that\n// when generating the original Flight stream for the whole page.\n}\nexport async function collectSegmentData(isCacheComponentsEnabled, fullPageDataBuffer, staleTime, clientModules, serverConsumerManifest) {\n    // Traverse the router tree and generate a prefetch response for each segment.\n    // A mutable map to collect the results as we traverse the route tree.\n    const resultMap = new Map();\n    // Before we start, warm up the module cache by decoding the page data once.\n    // Then we can assume that any remaining async tasks that occur the next time\n    // are due to hanging promises caused by dynamic data access. Note we only\n    // have to do this once per page, not per individual segment.\n    //\n    try {\n        await createFromReadableStream(streamFromBuffer(fullPageDataBuffer), {\n            findSourceMapURL,\n            serverConsumerManifest\n        });\n        await waitAtLeastOneReactRenderTask();\n    } catch  {}\n    // Create an abort controller that we'll use to stop the stream.\n    const abortController = new AbortController();\n    const onCompletedProcessingRouteTree = async ()=>{\n        // Since all we're doing is decoding and re-encoding a cached prerender, if\n        // serializing the stream takes longer than a microtask, it must because of\n        // hanging promises caused by dynamic data.\n        await waitAtLeastOneReactRenderTask();\n        abortController.abort();\n    };\n    // Generate a stream for the route tree prefetch. While we're walking the\n    // tree, we'll also spawn additional tasks to generate the segment prefetches.\n    // The promises for these tasks are pushed to a mutable array that we will\n    // await once the route tree is fully rendered.\n    const segmentTasks = [];\n    const { prelude: treeStream } = await prerender(// RootTreePrefetch is not a valid return type for a React component, but\n    // we need to use a component so that when we decode the original stream\n    // inside of it, the side effects are transferred to the new stream.\n    // @ts-expect-error\n    /*#__PURE__*/ _jsx(PrefetchTreeData, {\n        isClientParamParsingEnabled: isCacheComponentsEnabled,\n        fullPageDataBuffer: fullPageDataBuffer,\n        serverConsumerManifest: serverConsumerManifest,\n        clientModules: clientModules,\n        staleTime: staleTime,\n        segmentTasks: segmentTasks,\n        onCompletedProcessingRouteTree: onCompletedProcessingRouteTree\n    }), clientModules, {\n        filterStackFrame,\n        signal: abortController.signal,\n        onError: onSegmentPrerenderError\n    });\n    // Write the route tree to a special `/_tree` segment.\n    const treeBuffer = await streamToBuffer(treeStream);\n    resultMap.set('/_tree', treeBuffer);\n    // Also output the entire full page data response\n    resultMap.set('/_full', fullPageDataBuffer);\n    // Now that we've finished rendering the route tree, all the segment tasks\n    // should have been spawned. Await them in parallel and write the segment\n    // prefetches to the result map.\n    for (const [segmentPath, buffer] of (await Promise.all(segmentTasks))){\n        resultMap.set(segmentPath, buffer);\n    }\n    return resultMap;\n}\nasync function PrefetchTreeData({ isClientParamParsingEnabled, fullPageDataBuffer, serverConsumerManifest, clientModules, staleTime, segmentTasks, onCompletedProcessingRouteTree }) {\n    // We're currently rendering a Flight response for the route tree prefetch.\n    // Inside this component, decode the Flight stream for the whole page. This is\n    // a hack to transfer the side effects from the original Flight stream (e.g.\n    // Float preloads) onto the Flight stream for the tree prefetch.\n    // TODO: React needs a better way to do this. Needed for Server Actions, too.\n    const initialRSCPayload = await createFromReadableStream(createUnclosingPrefetchStream(streamFromBuffer(fullPageDataBuffer)), {\n        findSourceMapURL,\n        serverConsumerManifest\n    });\n    const buildId = initialRSCPayload.b;\n    // FlightDataPath is an unsound type, hence the additional checks.\n    const flightDataPaths = initialRSCPayload.f;\n    if (flightDataPaths.length !== 1 && flightDataPaths[0].length !== 3) {\n        console.error('Internal Next.js error: InitialRSCPayload does not match the expected ' + 'shape for a prerendered page during segment prefetch generation.');\n        return null;\n    }\n    const flightRouterState = flightDataPaths[0][0];\n    const seedData = flightDataPaths[0][1];\n    const head = flightDataPaths[0][2];\n    // Compute the route metadata tree by traversing the FlightRouterState. As we\n    // walk the tree, we will also spawn a task to produce a prefetch response for\n    // each segment.\n    const tree = collectSegmentDataImpl(isClientParamParsingEnabled, flightRouterState, buildId, seedData, clientModules, ROOT_SEGMENT_REQUEST_KEY, segmentTasks);\n    const isHeadPartial = await isPartialRSCData(head, clientModules);\n    // Notify the abort controller that we're done processing the route tree.\n    // Anything async that happens after this point must be due to hanging\n    // promises in the original stream.\n    onCompletedProcessingRouteTree();\n    // Render the route tree to a special `/_tree` segment.\n    const treePrefetch = {\n        buildId,\n        tree,\n        head,\n        isHeadPartial,\n        staleTime\n    };\n    return treePrefetch;\n}\nfunction collectSegmentDataImpl(isClientParamParsingEnabled, route, buildId, seedData, clientModules, requestKey, segmentTasks) {\n    // Metadata about the segment. Sent as part of the tree prefetch. Null if\n    // there are no children.\n    let slotMetadata = null;\n    const children = route[1];\n    const seedDataChildren = seedData !== null ? seedData[1] : null;\n    for(const parallelRouteKey in children){\n        const childRoute = children[parallelRouteKey];\n        const childSegment = childRoute[0];\n        const childSeedData = seedDataChildren !== null ? seedDataChildren[parallelRouteKey] : null;\n        const childRequestKey = appendSegmentRequestKeyPart(requestKey, parallelRouteKey, createSegmentRequestKeyPart(childSegment));\n        const childTree = collectSegmentDataImpl(isClientParamParsingEnabled, childRoute, buildId, childSeedData, clientModules, childRequestKey, segmentTasks);\n        if (slotMetadata === null) {\n            slotMetadata = {};\n        }\n        slotMetadata[parallelRouteKey] = childTree;\n    }\n    const hasRuntimePrefetch = seedData !== null ? seedData[4] : false;\n    if (seedData !== null) {\n        // Spawn a task to write the segment data to a new Flight stream.\n        segmentTasks.push(// Since we're already in the middle of a render, wait until after the\n        // current task to escape the current rendering context.\n        waitAtLeastOneReactRenderTask().then(()=>renderSegmentPrefetch(buildId, seedData, requestKey, clientModules)));\n    } else {\n    // This segment does not have any seed data. Skip generating a prefetch\n    // response for it. We'll still include it in the route tree, though.\n    // TODO: We should encode in the route tree whether a segment is missing\n    // so we don't attempt to fetch it for no reason. As of now this shouldn't\n    // ever happen in practice, though.\n    }\n    const segment = route[0];\n    let name;\n    let paramType = null;\n    let paramKey = null;\n    if (typeof segment === 'string') {\n        name = segment;\n        paramKey = segment;\n        paramType = null;\n    } else {\n        name = segment[0];\n        paramKey = segment[1];\n        paramType = segment[2];\n    }\n    // Metadata about the segment. Sent to the client as part of the\n    // tree prefetch.\n    return {\n        name,\n        paramType,\n        // This value is ommitted from the prefetch response when cacheComponents\n        // is enabled.\n        paramKey: isClientParamParsingEnabled ? null : paramKey,\n        hasRuntimePrefetch,\n        slots: slotMetadata,\n        isRootLayout: route[4] === true\n    };\n}\nasync function renderSegmentPrefetch(buildId, seedData, requestKey, clientModules) {\n    // Render the segment data to a stream.\n    // In the future, this is where we can include additional metadata, like the\n    // stale time and cache tags.\n    const rsc = seedData[0];\n    const loading = seedData[2];\n    const segmentPrefetch = {\n        buildId,\n        rsc,\n        loading,\n        isPartial: await isPartialRSCData(rsc, clientModules)\n    };\n    // Since all we're doing is decoding and re-encoding a cached prerender, if\n    // it takes longer than a microtask, it must because of hanging promises\n    // caused by dynamic data. Abort the stream at the end of the current task.\n    const abortController = new AbortController();\n    waitAtLeastOneReactRenderTask().then(()=>abortController.abort());\n    const { prelude: segmentStream } = await prerender(segmentPrefetch, clientModules, {\n        filterStackFrame,\n        signal: abortController.signal,\n        onError: onSegmentPrerenderError\n    });\n    const segmentBuffer = await streamToBuffer(segmentStream);\n    if (requestKey === ROOT_SEGMENT_REQUEST_KEY) {\n        return [\n            '/_index',\n            segmentBuffer\n        ];\n    } else {\n        return [\n            requestKey,\n            segmentBuffer\n        ];\n    }\n}\nasync function isPartialRSCData(rsc, clientModules) {\n    // We can determine if a segment contains only partial data if it takes longer\n    // than a task to encode, because dynamic data is encoded as an infinite\n    // promise. We must do this in a separate Flight prerender from the one that\n    // actually generates the prefetch stream because we need to include\n    // `isPartial` in the stream itself.\n    let isPartial = false;\n    const abortController = new AbortController();\n    waitAtLeastOneReactRenderTask().then(()=>{\n        // If we haven't yet finished the outer task, then it must be because we\n        // accessed dynamic data.\n        isPartial = true;\n        abortController.abort();\n    });\n    await prerender(rsc, clientModules, {\n        filterStackFrame,\n        signal: abortController.signal,\n        onError () {},\n        onPostpone () {\n            // If something postponed, i.e. when Cache Components is not enabled, we can\n            // infer that the RSC data is partial.\n            isPartial = true;\n        }\n    });\n    return isPartial;\n}\nfunction createUnclosingPrefetchStream(originalFlightStream) {\n    // When PPR is enabled, prefetch streams may contain references that never\n    // resolve, because that's how we encode dynamic data access. In the decoded\n    // object returned by the Flight client, these are reified into hanging\n    // promises that suspend during render, which is effectively what we want.\n    // The UI resolves when it switches to the dynamic data stream\n    // (via useDeferredValue(dynamic, static)).\n    //\n    // However, the Flight implementation currently errors if the server closes\n    // the response before all the references are resolved. As a cheat to work\n    // around this, we wrap the original stream in a new stream that never closes,\n    // and therefore doesn't error.\n    const reader = originalFlightStream.getReader();\n    return new ReadableStream({\n        async pull (controller) {\n            while(true){\n                const { done, value } = await reader.read();\n                if (!done) {\n                    // Pass to the target stream and keep consuming the Flight response\n                    // from the server.\n                    controller.enqueue(value);\n                    continue;\n                }\n                // The server stream has closed. Exit, but intentionally do not close\n                // the target stream.\n                return;\n            }\n        }\n    });\n}\n\n//# sourceMappingURL=collect-segment-data.js.map","import { isPlainObject } from '../shared/lib/is-plain-object';\nimport safeStringify from 'next/dist/compiled/safe-stable-stringify';\n/**\n * Checks whether the given value is a NextError.\n * This can be used to print a more detailed error message with properties like `code` & `digest`.\n */ export default function isError(err) {\n    return typeof err === 'object' && err !== null && 'name' in err && 'message' in err;\n}\nexport function getProperError(err) {\n    if (isError(err)) {\n        return err;\n    }\n    if (process.env.NODE_ENV === 'development') {\n        // provide better error for case where `throw undefined`\n        // is called in development\n        if (typeof err === 'undefined') {\n            return Object.defineProperty(new Error('An undefined error was thrown, ' + 'see here for more info: https://nextjs.org/docs/messages/threw-undefined'), \"__NEXT_ERROR_CODE\", {\n                value: \"E98\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (err === null) {\n            return Object.defineProperty(new Error('A null error was thrown, ' + 'see here for more info: https://nextjs.org/docs/messages/threw-undefined'), \"__NEXT_ERROR_CODE\", {\n                value: \"E336\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    return Object.defineProperty(new Error(isPlainObject(err) ? safeStringify(err) : err + ''), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n}\n\n//# sourceMappingURL=is-error.js.map","import { PAGE_SEGMENT_KEY } from '../segment';\nexport const ROOT_SEGMENT_REQUEST_KEY = '';\nexport const ROOT_SEGMENT_CACHE_KEY = '';\nexport function createSegmentRequestKeyPart(segment) {\n    if (typeof segment === 'string') {\n        if (segment.startsWith(PAGE_SEGMENT_KEY)) {\n            // The Flight Router State type sometimes includes the search params in\n            // the page segment. However, the Segment Cache tracks this as a separate\n            // key. So, we strip the search params here, and then add them back when\n            // the cache entry is turned back into a FlightRouterState. This is an\n            // unfortunate consequence of the FlightRouteState being used both as a\n            // transport type and as a cache key; we'll address this once more of the\n            // Segment Cache implementation has settled.\n            // TODO: We should hoist the search params out of the FlightRouterState\n            // type entirely, This is our plan for dynamic route params, too.\n            return PAGE_SEGMENT_KEY;\n        }\n        const safeName = // TODO: FlightRouterState encodes Not Found routes as \"/_not-found\".\n        // But params typically don't include the leading slash. We should use\n        // a different encoding to avoid this special case.\n        segment === '/_not-found' ? '_not-found' : encodeToFilesystemAndURLSafeString(segment);\n        // Since this is not a dynamic segment, it's fully encoded. It does not\n        // need to be \"hydrated\" with a param value.\n        return safeName;\n    }\n    const name = segment[0];\n    const paramType = segment[2];\n    const safeName = encodeToFilesystemAndURLSafeString(name);\n    const encodedName = '$' + paramType + '$' + safeName;\n    return encodedName;\n}\nexport function appendSegmentRequestKeyPart(parentRequestKey, parallelRouteKey, childRequestKeyPart) {\n    // Aside from being filesystem safe, segment keys are also designed so that\n    // each segment and parallel route creates its own subdirectory. Roughly in\n    // the same shape as the source app directory. This is mostly just for easier\n    // debugging (you can open up the build folder and navigate the output); if\n    // we wanted to do we could just use a flat structure.\n    // Omit the parallel route key for children, since this is the most\n    // common case. Saves some bytes (and it's what the app directory does).\n    const slotKey = parallelRouteKey === 'children' ? childRequestKeyPart : `@${encodeToFilesystemAndURLSafeString(parallelRouteKey)}/${childRequestKeyPart}`;\n    return parentRequestKey + '/' + slotKey;\n}\nexport function createSegmentCacheKeyPart(requestKeyPart, segment) {\n    if (typeof segment === 'string') {\n        return requestKeyPart;\n    }\n    const paramValue = segment[1];\n    const safeValue = encodeToFilesystemAndURLSafeString(paramValue);\n    return requestKeyPart + '$' + safeValue;\n}\nexport function appendSegmentCacheKeyPart(parentSegmentKey, parallelRouteKey, childCacheKeyPart) {\n    const slotKey = parallelRouteKey === 'children' ? childCacheKeyPart : `@${encodeToFilesystemAndURLSafeString(parallelRouteKey)}/${childCacheKeyPart}`;\n    return parentSegmentKey + '/' + slotKey;\n}\n// Define a regex pattern to match the most common characters found in a route\n// param. It excludes anything that might not be cross-platform filesystem\n// compatible, like |. It does not need to be precise because the fallback is to\n// just base64url-encode the whole parameter, which is fine; we just don't do it\n// by default for compactness, and for easier debugging.\nconst simpleParamValueRegex = /^[a-zA-Z0-9\\-_@]+$/;\nfunction encodeToFilesystemAndURLSafeString(value) {\n    if (simpleParamValueRegex.test(value)) {\n        return value;\n    }\n    // If there are any unsafe characters, base64url-encode the entire value.\n    // We also add a ! prefix so it doesn't collide with the simple case.\n    const base64url = btoa(value).replace(/\\+/g, '-') // Replace '+' with '-'\n    .replace(/\\//g, '_') // Replace '/' with '_'\n    .replace(/=+$/, '') // Remove trailing '='\n    ;\n    return '!' + base64url;\n}\nexport function convertSegmentPathToStaticExportFilename(segmentPath) {\n    return `__next${segmentPath.replace(/\\//g, '.')}.txt`;\n}\n\n//# sourceMappingURL=segment-value-encoding.js.map","import { Meta, MetaFilter, MultiMeta } from './meta';\nexport function OpenGraphMetadata({ openGraph }) {\n    var _openGraph_title, _openGraph_url, _openGraph_ttl;\n    if (!openGraph) {\n        return null;\n    }\n    let typedOpenGraph;\n    if ('type' in openGraph) {\n        const openGraphType = openGraph.type;\n        switch(openGraphType){\n            case 'website':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'website'\n                    })\n                ];\n                break;\n            case 'article':\n                var _openGraph_publishedTime, _openGraph_modifiedTime, _openGraph_expirationTime;\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'article'\n                    }),\n                    Meta({\n                        property: 'article:published_time',\n                        content: (_openGraph_publishedTime = openGraph.publishedTime) == null ? void 0 : _openGraph_publishedTime.toString()\n                    }),\n                    Meta({\n                        property: 'article:modified_time',\n                        content: (_openGraph_modifiedTime = openGraph.modifiedTime) == null ? void 0 : _openGraph_modifiedTime.toString()\n                    }),\n                    Meta({\n                        property: 'article:expiration_time',\n                        content: (_openGraph_expirationTime = openGraph.expirationTime) == null ? void 0 : _openGraph_expirationTime.toString()\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'article:author',\n                        contents: openGraph.authors\n                    }),\n                    Meta({\n                        property: 'article:section',\n                        content: openGraph.section\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'article:tag',\n                        contents: openGraph.tags\n                    })\n                ];\n                break;\n            case 'book':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'book'\n                    }),\n                    Meta({\n                        property: 'book:isbn',\n                        content: openGraph.isbn\n                    }),\n                    Meta({\n                        property: 'book:release_date',\n                        content: openGraph.releaseDate\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'book:author',\n                        contents: openGraph.authors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'book:tag',\n                        contents: openGraph.tags\n                    })\n                ];\n                break;\n            case 'profile':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'profile'\n                    }),\n                    Meta({\n                        property: 'profile:first_name',\n                        content: openGraph.firstName\n                    }),\n                    Meta({\n                        property: 'profile:last_name',\n                        content: openGraph.lastName\n                    }),\n                    Meta({\n                        property: 'profile:username',\n                        content: openGraph.username\n                    }),\n                    Meta({\n                        property: 'profile:gender',\n                        content: openGraph.gender\n                    })\n                ];\n                break;\n            case 'music.song':\n                var _openGraph_duration;\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'music.song'\n                    }),\n                    Meta({\n                        property: 'music:duration',\n                        content: (_openGraph_duration = openGraph.duration) == null ? void 0 : _openGraph_duration.toString()\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:album',\n                        contents: openGraph.albums\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:musician',\n                        contents: openGraph.musicians\n                    })\n                ];\n                break;\n            case 'music.album':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'music.album'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:song',\n                        contents: openGraph.songs\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:musician',\n                        contents: openGraph.musicians\n                    }),\n                    Meta({\n                        property: 'music:release_date',\n                        content: openGraph.releaseDate\n                    })\n                ];\n                break;\n            case 'music.playlist':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'music.playlist'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:song',\n                        contents: openGraph.songs\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:creator',\n                        contents: openGraph.creators\n                    })\n                ];\n                break;\n            case 'music.radio_station':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'music.radio_station'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:creator',\n                        contents: openGraph.creators\n                    })\n                ];\n                break;\n            case 'video.movie':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'video.movie'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:actor',\n                        contents: openGraph.actors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:director',\n                        contents: openGraph.directors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:writer',\n                        contents: openGraph.writers\n                    }),\n                    Meta({\n                        property: 'video:duration',\n                        content: openGraph.duration\n                    }),\n                    Meta({\n                        property: 'video:release_date',\n                        content: openGraph.releaseDate\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:tag',\n                        contents: openGraph.tags\n                    })\n                ];\n                break;\n            case 'video.episode':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'video.episode'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:actor',\n                        contents: openGraph.actors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:director',\n                        contents: openGraph.directors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:writer',\n                        contents: openGraph.writers\n                    }),\n                    Meta({\n                        property: 'video:duration',\n                        content: openGraph.duration\n                    }),\n                    Meta({\n                        property: 'video:release_date',\n                        content: openGraph.releaseDate\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:tag',\n                        contents: openGraph.tags\n                    }),\n                    Meta({\n                        property: 'video:series',\n                        content: openGraph.series\n                    })\n                ];\n                break;\n            case 'video.tv_show':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'video.tv_show'\n                    })\n                ];\n                break;\n            case 'video.other':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'video.other'\n                    })\n                ];\n                break;\n            default:\n                const _exhaustiveCheck = openGraphType;\n                throw Object.defineProperty(new Error(`Invalid OpenGraph type: ${_exhaustiveCheck}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E237\",\n                    enumerable: false,\n                    configurable: true\n                });\n        }\n    }\n    return MetaFilter([\n        Meta({\n            property: 'og:determiner',\n            content: openGraph.determiner\n        }),\n        Meta({\n            property: 'og:title',\n            content: (_openGraph_title = openGraph.title) == null ? void 0 : _openGraph_title.absolute\n        }),\n        Meta({\n            property: 'og:description',\n            content: openGraph.description\n        }),\n        Meta({\n            property: 'og:url',\n            content: (_openGraph_url = openGraph.url) == null ? void 0 : _openGraph_url.toString()\n        }),\n        Meta({\n            property: 'og:site_name',\n            content: openGraph.siteName\n        }),\n        Meta({\n            property: 'og:locale',\n            content: openGraph.locale\n        }),\n        Meta({\n            property: 'og:country_name',\n            content: openGraph.countryName\n        }),\n        Meta({\n            property: 'og:ttl',\n            content: (_openGraph_ttl = openGraph.ttl) == null ? void 0 : _openGraph_ttl.toString()\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:image',\n            contents: openGraph.images\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:video',\n            contents: openGraph.videos\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:audio',\n            contents: openGraph.audio\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:email',\n            contents: openGraph.emails\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:phone_number',\n            contents: openGraph.phoneNumbers\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:fax_number',\n            contents: openGraph.faxNumbers\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:locale:alternate',\n            contents: openGraph.alternateLocale\n        }),\n        ...typedOpenGraph ? typedOpenGraph : []\n    ]);\n}\nfunction TwitterAppItem({ app, type }) {\n    var _app_url_type, _app_url;\n    return [\n        Meta({\n            name: `twitter:app:name:${type}`,\n            content: app.name\n        }),\n        Meta({\n            name: `twitter:app:id:${type}`,\n            content: app.id[type]\n        }),\n        Meta({\n            name: `twitter:app:url:${type}`,\n            content: (_app_url = app.url) == null ? void 0 : (_app_url_type = _app_url[type]) == null ? void 0 : _app_url_type.toString()\n        })\n    ];\n}\nexport function TwitterMetadata({ twitter }) {\n    var _twitter_title;\n    if (!twitter) return null;\n    const { card } = twitter;\n    return MetaFilter([\n        Meta({\n            name: 'twitter:card',\n            content: card\n        }),\n        Meta({\n            name: 'twitter:site',\n            content: twitter.site\n        }),\n        Meta({\n            name: 'twitter:site:id',\n            content: twitter.siteId\n        }),\n        Meta({\n            name: 'twitter:creator',\n            content: twitter.creator\n        }),\n        Meta({\n            name: 'twitter:creator:id',\n            content: twitter.creatorId\n        }),\n        Meta({\n            name: 'twitter:title',\n            content: (_twitter_title = twitter.title) == null ? void 0 : _twitter_title.absolute\n        }),\n        Meta({\n            name: 'twitter:description',\n            content: twitter.description\n        }),\n        MultiMeta({\n            namePrefix: 'twitter:image',\n            contents: twitter.images\n        }),\n        ...card === 'player' ? twitter.players.flatMap((player)=>[\n                Meta({\n                    name: 'twitter:player',\n                    content: player.playerUrl.toString()\n                }),\n                Meta({\n                    name: 'twitter:player:stream',\n                    content: player.streamUrl.toString()\n                }),\n                Meta({\n                    name: 'twitter:player:width',\n                    content: player.width\n                }),\n                Meta({\n                    name: 'twitter:player:height',\n                    content: player.height\n                })\n            ]) : [],\n        ...card === 'app' ? [\n            TwitterAppItem({\n                app: twitter.app,\n                type: 'iphone'\n            }),\n            TwitterAppItem({\n                app: twitter.app,\n                type: 'ipad'\n            }),\n            TwitterAppItem({\n                app: twitter.app,\n                type: 'googleplay'\n            })\n        ] : []\n    ]);\n}\nexport function AppLinksMeta({ appLinks }) {\n    if (!appLinks) return null;\n    return MetaFilter([\n        MultiMeta({\n            propertyPrefix: 'al:ios',\n            contents: appLinks.ios\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:iphone',\n            contents: appLinks.iphone\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:ipad',\n            contents: appLinks.ipad\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:android',\n            contents: appLinks.android\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:windows_phone',\n            contents: appLinks.windows_phone\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:windows',\n            contents: appLinks.windows\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:windows_universal',\n            contents: appLinks.windows_universal\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:web',\n            contents: appLinks.web\n        })\n    ]);\n}\n\n//# sourceMappingURL=opengraph.js.map","import { resolveAsArrayOrUndefined } from '../generate/utils';\nimport { resolveAbsoluteUrlWithPathname } from './resolve-url';\nfunction resolveAlternateUrl(url, metadataBase, pathname, metadataContext) {\n    // If alter native url is an URL instance,\n    // we treat it as a URL base and resolve with current pathname\n    if (url instanceof URL) {\n        const newUrl = new URL(pathname, url);\n        url.searchParams.forEach((value, key)=>newUrl.searchParams.set(key, value));\n        url = newUrl;\n    }\n    return resolveAbsoluteUrlWithPathname(url, metadataBase, pathname, metadataContext);\n}\nexport const resolveThemeColor = (themeColor)=>{\n    var _resolveAsArrayOrUndefined;\n    if (!themeColor) return null;\n    const themeColorDescriptors = [];\n    (_resolveAsArrayOrUndefined = resolveAsArrayOrUndefined(themeColor)) == null ? void 0 : _resolveAsArrayOrUndefined.forEach((descriptor)=>{\n        if (typeof descriptor === 'string') themeColorDescriptors.push({\n            color: descriptor\n        });\n        else if (typeof descriptor === 'object') themeColorDescriptors.push({\n            color: descriptor.color,\n            media: descriptor.media\n        });\n    });\n    return themeColorDescriptors;\n};\nasync function resolveUrlValuesOfObject(obj, metadataBase, pathname, metadataContext) {\n    if (!obj) return null;\n    const result = {};\n    for (const [key, value] of Object.entries(obj)){\n        if (typeof value === 'string' || value instanceof URL) {\n            const pathnameForUrl = await pathname;\n            result[key] = [\n                {\n                    url: resolveAlternateUrl(value, metadataBase, pathnameForUrl, metadataContext)\n                }\n            ];\n        } else if (value && value.length) {\n            result[key] = [];\n            const pathnameForUrl = await pathname;\n            value.forEach((item, index)=>{\n                const url = resolveAlternateUrl(item.url, metadataBase, pathnameForUrl, metadataContext);\n                result[key][index] = {\n                    url,\n                    title: item.title\n                };\n            });\n        }\n    }\n    return result;\n}\nasync function resolveCanonicalUrl(urlOrDescriptor, metadataBase, pathname, metadataContext) {\n    if (!urlOrDescriptor) return null;\n    const url = typeof urlOrDescriptor === 'string' || urlOrDescriptor instanceof URL ? urlOrDescriptor : urlOrDescriptor.url;\n    const pathnameForUrl = await pathname;\n    // Return string url because structureClone can't handle URL instance\n    return {\n        url: resolveAlternateUrl(url, metadataBase, pathnameForUrl, metadataContext)\n    };\n}\nexport const resolveAlternates = async (alternates, metadataBase, pathname, context)=>{\n    if (!alternates) return null;\n    const canonical = await resolveCanonicalUrl(alternates.canonical, metadataBase, pathname, context);\n    const languages = await resolveUrlValuesOfObject(alternates.languages, metadataBase, pathname, context);\n    const media = await resolveUrlValuesOfObject(alternates.media, metadataBase, pathname, context);\n    const types = await resolveUrlValuesOfObject(alternates.types, metadataBase, pathname, context);\n    return {\n        canonical,\n        languages,\n        media,\n        types\n    };\n};\nconst robotsKeys = [\n    'noarchive',\n    'nosnippet',\n    'noimageindex',\n    'nocache',\n    'notranslate',\n    'indexifembedded',\n    'nositelinkssearchbox',\n    'unavailable_after',\n    'max-video-preview',\n    'max-image-preview',\n    'max-snippet'\n];\nconst resolveRobotsValue = (robots)=>{\n    if (!robots) return null;\n    if (typeof robots === 'string') return robots;\n    const values = [];\n    if (robots.index) values.push('index');\n    else if (typeof robots.index === 'boolean') values.push('noindex');\n    if (robots.follow) values.push('follow');\n    else if (typeof robots.follow === 'boolean') values.push('nofollow');\n    for (const key of robotsKeys){\n        const value = robots[key];\n        if (typeof value !== 'undefined' && value !== false) {\n            values.push(typeof value === 'boolean' ? key : `${key}:${value}`);\n        }\n    }\n    return values.join(', ');\n};\nexport const resolveRobots = (robots)=>{\n    if (!robots) return null;\n    return {\n        basic: resolveRobotsValue(robots),\n        googleBot: typeof robots !== 'string' ? resolveRobotsValue(robots.googleBot) : null\n    };\n};\nconst VerificationKeys = [\n    'google',\n    'yahoo',\n    'yandex',\n    'me',\n    'other'\n];\nexport const resolveVerification = (verification)=>{\n    if (!verification) return null;\n    const res = {};\n    for (const key of VerificationKeys){\n        const value = verification[key];\n        if (value) {\n            if (key === 'other') {\n                res.other = {};\n                for(const otherKey in verification.other){\n                    const otherValue = resolveAsArrayOrUndefined(verification.other[otherKey]);\n                    if (otherValue) res.other[otherKey] = otherValue;\n                }\n            } else res[key] = resolveAsArrayOrUndefined(value);\n        }\n    }\n    return res;\n};\nexport const resolveAppleWebApp = (appWebApp)=>{\n    var _resolveAsArrayOrUndefined;\n    if (!appWebApp) return null;\n    if (appWebApp === true) {\n        return {\n            capable: true\n        };\n    }\n    const startupImages = appWebApp.startupImage ? (_resolveAsArrayOrUndefined = resolveAsArrayOrUndefined(appWebApp.startupImage)) == null ? void 0 : _resolveAsArrayOrUndefined.map((item)=>typeof item === 'string' ? {\n            url: item\n        } : item) : null;\n    return {\n        capable: 'capable' in appWebApp ? !!appWebApp.capable : true,\n        title: appWebApp.title || null,\n        startupImage: startupImages,\n        statusBarStyle: appWebApp.statusBarStyle || 'default'\n    };\n};\nexport const resolveAppLinks = (appLinks)=>{\n    if (!appLinks) return null;\n    for(const key in appLinks){\n        // @ts-ignore // TODO: type infer\n        appLinks[key] = resolveAsArrayOrUndefined(appLinks[key]);\n    }\n    return appLinks;\n};\nexport const resolveItunes = async (itunes, metadataBase, pathname, context)=>{\n    if (!itunes) return null;\n    return {\n        appId: itunes.appId,\n        appArgument: itunes.appArgument ? resolveAlternateUrl(itunes.appArgument, metadataBase, await pathname, context) : undefined\n    };\n};\nexport const resolveFacebook = (facebook)=>{\n    if (!facebook) return null;\n    return {\n        appId: facebook.appId,\n        admins: resolveAsArrayOrUndefined(facebook.admins)\n    };\n};\nexport const resolvePagination = async (pagination, metadataBase, pathname, context)=>{\n    return {\n        previous: (pagination == null ? void 0 : pagination.previous) ? resolveAlternateUrl(pagination.previous, metadataBase, await pathname, context) : null,\n        next: (pagination == null ? void 0 : pagination.next) ? resolveAlternateUrl(pagination.next, metadataBase, await pathname, context) : null\n    };\n};\n\n//# sourceMappingURL=resolve-basics.js.map","import { AppRenderSpan, NextNodeServerSpan } from './trace/constants';\nimport { getTracer, SpanKind } from './trace/tracer';\nimport { CACHE_ONE_YEAR, INFINITE_CACHE, NEXT_CACHE_TAG_MAX_ITEMS, NEXT_CACHE_TAG_MAX_LENGTH } from '../../lib/constants';\nimport { markCurrentScopeAsDynamic } from '../app-render/dynamic-rendering';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupeFetch } from './dedupe-fetch';\nimport { getCacheSignal } from '../app-render/work-unit-async-storage.external';\nimport { CachedRouteKind, IncrementalCacheKind } from '../response-cache';\nimport { cloneResponse } from './clone-response';\nimport { RenderStage } from '../app-render/staged-rendering';\nconst isEdgeRuntime = process.env.NEXT_RUNTIME === 'edge';\nexport const NEXT_PATCH_SYMBOL = Symbol.for('next-patch');\nfunction isFetchPatched() {\n    return globalThis[NEXT_PATCH_SYMBOL] === true;\n}\nexport function validateRevalidate(revalidateVal, route) {\n    try {\n        let normalizedRevalidate = undefined;\n        if (revalidateVal === false) {\n            normalizedRevalidate = INFINITE_CACHE;\n        } else if (typeof revalidateVal === 'number' && !isNaN(revalidateVal) && revalidateVal > -1) {\n            normalizedRevalidate = revalidateVal;\n        } else if (typeof revalidateVal !== 'undefined') {\n            throw Object.defineProperty(new Error(`Invalid revalidate value \"${revalidateVal}\" on \"${route}\", must be a non-negative number or false`), \"__NEXT_ERROR_CODE\", {\n                value: \"E179\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        return normalizedRevalidate;\n    } catch (err) {\n        // handle client component error from attempting to check revalidate value\n        if (err instanceof Error && err.message.includes('Invalid revalidate')) {\n            throw err;\n        }\n        return undefined;\n    }\n}\nexport function validateTags(tags, description) {\n    const validTags = [];\n    const invalidTags = [];\n    for(let i = 0; i < tags.length; i++){\n        const tag = tags[i];\n        if (typeof tag !== 'string') {\n            invalidTags.push({\n                tag,\n                reason: 'invalid type, must be a string'\n            });\n        } else if (tag.length > NEXT_CACHE_TAG_MAX_LENGTH) {\n            invalidTags.push({\n                tag,\n                reason: `exceeded max length of ${NEXT_CACHE_TAG_MAX_LENGTH}`\n            });\n        } else {\n            validTags.push(tag);\n        }\n        if (validTags.length > NEXT_CACHE_TAG_MAX_ITEMS) {\n            console.warn(`Warning: exceeded max tag count for ${description}, dropped tags:`, tags.slice(i).join(', '));\n            break;\n        }\n    }\n    if (invalidTags.length > 0) {\n        console.warn(`Warning: invalid tags passed to ${description}: `);\n        for (const { tag, reason } of invalidTags){\n            console.log(`tag: \"${tag}\" ${reason}`);\n        }\n    }\n    return validTags;\n}\nfunction trackFetchMetric(workStore, ctx) {\n    if (!workStore.shouldTrackFetchMetrics) {\n        return;\n    }\n    workStore.fetchMetrics ??= [];\n    workStore.fetchMetrics.push({\n        ...ctx,\n        end: performance.timeOrigin + performance.now(),\n        idx: workStore.nextFetchId || 0\n    });\n}\nasync function createCachedPrerenderResponse(res, cacheKey, incrementalCacheContext, incrementalCache, revalidate, handleUnlock) {\n    // We are prerendering at build time or revalidate time with cacheComponents so we\n    // need to buffer the response so we can guarantee it can be read in a\n    // microtask.\n    const bodyBuffer = await res.arrayBuffer();\n    const fetchedData = {\n        headers: Object.fromEntries(res.headers.entries()),\n        body: Buffer.from(bodyBuffer).toString('base64'),\n        status: res.status,\n        url: res.url\n    };\n    // We can skip setting the serverComponentsHmrCache because we aren't in dev\n    // mode.\n    if (incrementalCacheContext) {\n        await incrementalCache.set(cacheKey, {\n            kind: CachedRouteKind.FETCH,\n            data: fetchedData,\n            revalidate\n        }, incrementalCacheContext);\n    }\n    await handleUnlock();\n    // We return a new Response to the caller.\n    return new Response(bodyBuffer, {\n        headers: res.headers,\n        status: res.status,\n        statusText: res.statusText\n    });\n}\nasync function createCachedDynamicResponse(workStore, res, cacheKey, incrementalCacheContext, incrementalCache, serverComponentsHmrCache, revalidate, input, handleUnlock) {\n    // We're cloning the response using this utility because there exists a bug in\n    // the undici library around response cloning. See the following pull request\n    // for more details: https://github.com/vercel/next.js/pull/73274\n    const [cloned1, cloned2] = cloneResponse(res);\n    // We are dynamically rendering including dev mode. We want to return the\n    // response to the caller as soon as possible because it might stream over a\n    // very long time.\n    const cacheSetPromise = cloned1.arrayBuffer().then(async (arrayBuffer)=>{\n        const bodyBuffer = Buffer.from(arrayBuffer);\n        const fetchedData = {\n            headers: Object.fromEntries(cloned1.headers.entries()),\n            body: bodyBuffer.toString('base64'),\n            status: cloned1.status,\n            url: cloned1.url\n        };\n        serverComponentsHmrCache == null ? void 0 : serverComponentsHmrCache.set(cacheKey, fetchedData);\n        if (incrementalCacheContext) {\n            await incrementalCache.set(cacheKey, {\n                kind: CachedRouteKind.FETCH,\n                data: fetchedData,\n                revalidate\n            }, incrementalCacheContext);\n        }\n    }).catch((error)=>console.warn(`Failed to set fetch cache`, input, error)).finally(handleUnlock);\n    const pendingRevalidateKey = `cache-set-${cacheKey}`;\n    workStore.pendingRevalidates ??= {};\n    if (pendingRevalidateKey in workStore.pendingRevalidates) {\n        // there is already a pending revalidate entry that we need to await to\n        // avoid race conditions\n        await workStore.pendingRevalidates[pendingRevalidateKey];\n    }\n    workStore.pendingRevalidates[pendingRevalidateKey] = cacheSetPromise.finally(()=>{\n        var _workStore_pendingRevalidates;\n        // If the pending revalidate is not present in the store, then we have\n        // nothing to delete.\n        if (!((_workStore_pendingRevalidates = workStore.pendingRevalidates) == null ? void 0 : _workStore_pendingRevalidates[pendingRevalidateKey])) {\n            return;\n        }\n        delete workStore.pendingRevalidates[pendingRevalidateKey];\n    });\n    return cloned2;\n}\nexport function createPatchedFetcher(originFetch, { workAsyncStorage, workUnitAsyncStorage }) {\n    // Create the patched fetch function.\n    const patched = async function fetch(input, init) {\n        var _init_method, _init_next;\n        let url;\n        try {\n            url = new URL(input instanceof Request ? input.url : input);\n            url.username = '';\n            url.password = '';\n        } catch  {\n            // Error caused by malformed URL should be handled by native fetch\n            url = undefined;\n        }\n        const fetchUrl = (url == null ? void 0 : url.href) ?? '';\n        const method = (init == null ? void 0 : (_init_method = init.method) == null ? void 0 : _init_method.toUpperCase()) || 'GET';\n        // Do create a new span trace for internal fetches in the\n        // non-verbose mode.\n        const isInternal = (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next.internal) === true;\n        const hideSpan = process.env.NEXT_OTEL_FETCH_DISABLED === '1';\n        // We don't track fetch metrics for internal fetches\n        // so it's not critical that we have a start time, as it won't be recorded.\n        // This is to workaround a flaky issue where performance APIs might\n        // not be available and will require follow-up investigation.\n        const fetchStart = isInternal ? undefined : performance.timeOrigin + performance.now();\n        const workStore = workAsyncStorage.getStore();\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        let cacheSignal = workUnitStore ? getCacheSignal(workUnitStore) : null;\n        if (cacheSignal) {\n            cacheSignal.beginRead();\n        }\n        const result = getTracer().trace(isInternal ? NextNodeServerSpan.internalFetch : AppRenderSpan.fetch, {\n            hideSpan,\n            kind: SpanKind.CLIENT,\n            spanName: [\n                'fetch',\n                method,\n                fetchUrl\n            ].filter(Boolean).join(' '),\n            attributes: {\n                'http.url': fetchUrl,\n                'http.method': method,\n                'net.peer.name': url == null ? void 0 : url.hostname,\n                'net.peer.port': (url == null ? void 0 : url.port) || undefined\n            }\n        }, async ()=>{\n            var _getRequestMeta;\n            // If this is an internal fetch, we should not do any special treatment.\n            if (isInternal) {\n                return originFetch(input, init);\n            }\n            // If the workStore is not available, we can't do any\n            // special treatment of fetch, therefore fallback to the original\n            // fetch implementation.\n            if (!workStore) {\n                return originFetch(input, init);\n            }\n            // We should also fallback to the original fetch implementation if we\n            // are in draft mode, it does not constitute a static generation.\n            if (workStore.isDraftMode) {\n                return originFetch(input, init);\n            }\n            const isRequestInput = input && typeof input === 'object' && typeof input.method === 'string';\n            const getRequestMeta = (field)=>{\n                // If request input is present but init is not, retrieve from input first.\n                const value = init == null ? void 0 : init[field];\n                return value || (isRequestInput ? input[field] : null);\n            };\n            let finalRevalidate = undefined;\n            const getNextField = (field)=>{\n                var _init_next, _init_next1, _input_next;\n                return typeof (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next[field]) !== 'undefined' ? init == null ? void 0 : (_init_next1 = init.next) == null ? void 0 : _init_next1[field] : isRequestInput ? (_input_next = input.next) == null ? void 0 : _input_next[field] : undefined;\n            };\n            // RequestInit doesn't keep extra fields e.g. next so it's\n            // only available if init is used separate\n            const originalFetchRevalidate = getNextField('revalidate');\n            let currentFetchRevalidate = originalFetchRevalidate;\n            const tags = validateTags(getNextField('tags') || [], `fetch ${input.toString()}`);\n            let revalidateStore;\n            if (workUnitStore) {\n                switch(workUnitStore.type){\n                    case 'prerender':\n                    case 'prerender-runtime':\n                    // TODO: Stop accumulating tags in client prerender. (fallthrough)\n                    case 'prerender-client':\n                    case 'prerender-ppr':\n                    case 'prerender-legacy':\n                    case 'cache':\n                    case 'private-cache':\n                        revalidateStore = workUnitStore;\n                        break;\n                    case 'request':\n                    case 'unstable-cache':\n                        break;\n                    default:\n                        workUnitStore;\n                }\n            }\n            if (revalidateStore) {\n                if (Array.isArray(tags)) {\n                    // Collect tags onto parent caches or parent prerenders.\n                    const collectedTags = revalidateStore.tags ?? (revalidateStore.tags = []);\n                    for (const tag of tags){\n                        if (!collectedTags.includes(tag)) {\n                            collectedTags.push(tag);\n                        }\n                    }\n                }\n            }\n            const implicitTags = workUnitStore == null ? void 0 : workUnitStore.implicitTags;\n            let pageFetchCacheMode = workStore.fetchCache;\n            if (workUnitStore) {\n                switch(workUnitStore.type){\n                    case 'unstable-cache':\n                        // Inside unstable-cache we treat it the same as force-no-store on\n                        // the page.\n                        pageFetchCacheMode = 'force-no-store';\n                        break;\n                    case 'prerender':\n                    case 'prerender-client':\n                    case 'prerender-runtime':\n                    case 'prerender-ppr':\n                    case 'prerender-legacy':\n                    case 'request':\n                    case 'cache':\n                    case 'private-cache':\n                        break;\n                    default:\n                        workUnitStore;\n                }\n            }\n            const isUsingNoStore = !!workStore.isUnstableNoStore;\n            let currentFetchCacheConfig = getRequestMeta('cache');\n            let cacheReason = '';\n            let cacheWarning;\n            if (typeof currentFetchCacheConfig === 'string' && typeof currentFetchRevalidate !== 'undefined') {\n                // If the revalidate value conflicts with the cache value, we should warn the user and unset the conflicting values.\n                const isConflictingRevalidate = // revalidate: 0 and cache: force-cache\n                currentFetchCacheConfig === 'force-cache' && currentFetchRevalidate === 0 || // revalidate: >0 or revalidate: false and cache: no-store\n                currentFetchCacheConfig === 'no-store' && (currentFetchRevalidate > 0 || currentFetchRevalidate === false);\n                if (isConflictingRevalidate) {\n                    cacheWarning = `Specified \"cache: ${currentFetchCacheConfig}\" and \"revalidate: ${currentFetchRevalidate}\", only one should be specified.`;\n                    currentFetchCacheConfig = undefined;\n                    currentFetchRevalidate = undefined;\n                }\n            }\n            const hasExplicitFetchCacheOptOut = // fetch config itself signals not to cache\n            currentFetchCacheConfig === 'no-cache' || currentFetchCacheConfig === 'no-store' || // the fetch isn't explicitly caching and the segment level cache config signals not to cache\n            // note: `pageFetchCacheMode` is also set by being in an unstable_cache context.\n            pageFetchCacheMode === 'force-no-store' || pageFetchCacheMode === 'only-no-store';\n            // If no explicit fetch cache mode is set, but dynamic = `force-dynamic` is set,\n            // we shouldn't consider caching the fetch. This is because the `dynamic` cache\n            // is considered a \"top-level\" cache mode, whereas something like `fetchCache` is more\n            // fine-grained. Top-level modes are responsible for setting reasonable defaults for the\n            // other configurations.\n            const noFetchConfigAndForceDynamic = !pageFetchCacheMode && !currentFetchCacheConfig && !currentFetchRevalidate && workStore.forceDynamic;\n            if (// force-cache was specified without a revalidate value. We set the revalidate value to false\n            // which will signal the cache to not revalidate\n            currentFetchCacheConfig === 'force-cache' && typeof currentFetchRevalidate === 'undefined') {\n                currentFetchRevalidate = false;\n            } else if (hasExplicitFetchCacheOptOut || noFetchConfigAndForceDynamic) {\n                currentFetchRevalidate = 0;\n            }\n            if (currentFetchCacheConfig === 'no-cache' || currentFetchCacheConfig === 'no-store') {\n                cacheReason = `cache: ${currentFetchCacheConfig}`;\n            }\n            finalRevalidate = validateRevalidate(currentFetchRevalidate, workStore.route);\n            const _headers = getRequestMeta('headers');\n            const initHeaders = typeof (_headers == null ? void 0 : _headers.get) === 'function' ? _headers : new Headers(_headers || {});\n            const hasUnCacheableHeader = initHeaders.get('authorization') || initHeaders.get('cookie');\n            const isUnCacheableMethod = ![\n                'get',\n                'head'\n            ].includes(((_getRequestMeta = getRequestMeta('method')) == null ? void 0 : _getRequestMeta.toLowerCase()) || 'get');\n            /**\n         * We automatically disable fetch caching under the following conditions:\n         * - Fetch cache configs are not set. Specifically:\n         *    - A page fetch cache mode is not set (export const fetchCache=...)\n         *    - A fetch cache mode is not set in the fetch call (fetch(url, { cache: ... }))\n         *      or the fetch cache mode is set to 'default'\n         *    - A fetch revalidate value is not set in the fetch call (fetch(url, { revalidate: ... }))\n         * - OR the fetch comes after a configuration that triggered dynamic rendering (e.g., reading cookies())\n         *   and the fetch was considered uncacheable (e.g., POST method or has authorization headers)\n         */ const hasNoExplicitCacheConfig = // eslint-disable-next-line eqeqeq\n            pageFetchCacheMode == undefined && // eslint-disable-next-line eqeqeq\n            (currentFetchCacheConfig == undefined || // when considering whether to opt into the default \"no-cache\" fetch semantics,\n            // a \"default\" cache config should be treated the same as no cache config\n            currentFetchCacheConfig === 'default') && // eslint-disable-next-line eqeqeq\n            currentFetchRevalidate == undefined;\n            let autoNoCache = Boolean((hasUnCacheableHeader || isUnCacheableMethod) && (revalidateStore == null ? void 0 : revalidateStore.revalidate) === 0);\n            let isImplicitBuildTimeCache = false;\n            if (!autoNoCache && hasNoExplicitCacheConfig) {\n                // We don't enable automatic no-cache behavior during build-time\n                // prerendering so that we can still leverage the fetch cache between\n                // export workers.\n                if (workStore.isBuildTimePrerendering) {\n                    isImplicitBuildTimeCache = true;\n                } else {\n                    autoNoCache = true;\n                }\n            }\n            // If we have no cache config, and we're in Dynamic I/O prerendering,\n            // it'll be a dynamic call. We don't have to issue that dynamic call.\n            if (hasNoExplicitCacheConfig && workUnitStore !== undefined) {\n                switch(workUnitStore.type){\n                    case 'prerender':\n                    case 'prerender-runtime':\n                    // While we don't want to do caching in the client scope we know the\n                    // fetch will be dynamic for cacheComponents so we may as well avoid the\n                    // call here. (fallthrough)\n                    case 'prerender-client':\n                        if (cacheSignal) {\n                            cacheSignal.endRead();\n                            cacheSignal = null;\n                        }\n                        return makeHangingPromise(workUnitStore.renderSignal, workStore.route, 'fetch()');\n                    case 'request':\n                        if (process.env.NODE_ENV === 'development' && workUnitStore.stagedRendering) {\n                            if (cacheSignal) {\n                                cacheSignal.endRead();\n                                cacheSignal = null;\n                            }\n                            await workUnitStore.stagedRendering.waitForStage(RenderStage.Dynamic);\n                        }\n                        break;\n                    case 'prerender-ppr':\n                    case 'prerender-legacy':\n                    case 'cache':\n                    case 'private-cache':\n                    case 'unstable-cache':\n                        break;\n                    default:\n                        workUnitStore;\n                }\n            }\n            switch(pageFetchCacheMode){\n                case 'force-no-store':\n                    {\n                        cacheReason = 'fetchCache = force-no-store';\n                        break;\n                    }\n                case 'only-no-store':\n                    {\n                        if (currentFetchCacheConfig === 'force-cache' || typeof finalRevalidate !== 'undefined' && finalRevalidate > 0) {\n                            throw Object.defineProperty(new Error(`cache: 'force-cache' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-no-store'`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E448\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        cacheReason = 'fetchCache = only-no-store';\n                        break;\n                    }\n                case 'only-cache':\n                    {\n                        if (currentFetchCacheConfig === 'no-store') {\n                            throw Object.defineProperty(new Error(`cache: 'no-store' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-cache'`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E521\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        break;\n                    }\n                case 'force-cache':\n                    {\n                        if (typeof currentFetchRevalidate === 'undefined' || currentFetchRevalidate === 0) {\n                            cacheReason = 'fetchCache = force-cache';\n                            finalRevalidate = INFINITE_CACHE;\n                        }\n                        break;\n                    }\n                case 'default-cache':\n                case 'default-no-store':\n                case 'auto':\n                case undefined:\n                    break;\n                default:\n                    pageFetchCacheMode;\n            }\n            if (typeof finalRevalidate === 'undefined') {\n                if (pageFetchCacheMode === 'default-cache' && !isUsingNoStore) {\n                    finalRevalidate = INFINITE_CACHE;\n                    cacheReason = 'fetchCache = default-cache';\n                } else if (pageFetchCacheMode === 'default-no-store') {\n                    finalRevalidate = 0;\n                    cacheReason = 'fetchCache = default-no-store';\n                } else if (isUsingNoStore) {\n                    finalRevalidate = 0;\n                    cacheReason = 'noStore call';\n                } else if (autoNoCache) {\n                    finalRevalidate = 0;\n                    cacheReason = 'auto no cache';\n                } else {\n                    // TODO: should we consider this case an invariant?\n                    cacheReason = 'auto cache';\n                    finalRevalidate = revalidateStore ? revalidateStore.revalidate : INFINITE_CACHE;\n                }\n            } else if (!cacheReason) {\n                cacheReason = `revalidate: ${finalRevalidate}`;\n            }\n            if (// when force static is configured we don't bail from\n            // `revalidate: 0` values\n            !(workStore.forceStatic && finalRevalidate === 0) && // we don't consider autoNoCache to switch to dynamic for ISR\n            !autoNoCache && // If the revalidate value isn't currently set or the value is less\n            // than the current revalidate value, we should update the revalidate\n            // value.\n            revalidateStore && finalRevalidate < revalidateStore.revalidate) {\n                // If we were setting the revalidate value to 0, we should try to\n                // postpone instead first.\n                if (finalRevalidate === 0) {\n                    if (workUnitStore) {\n                        switch(workUnitStore.type){\n                            case 'prerender':\n                            case 'prerender-client':\n                            case 'prerender-runtime':\n                                if (cacheSignal) {\n                                    cacheSignal.endRead();\n                                    cacheSignal = null;\n                                }\n                                return makeHangingPromise(workUnitStore.renderSignal, workStore.route, 'fetch()');\n                            case 'request':\n                                if (process.env.NODE_ENV === 'development' && workUnitStore.stagedRendering) {\n                                    if (cacheSignal) {\n                                        cacheSignal.endRead();\n                                        cacheSignal = null;\n                                    }\n                                    await workUnitStore.stagedRendering.waitForStage(RenderStage.Dynamic);\n                                }\n                                break;\n                            case 'prerender-ppr':\n                            case 'prerender-legacy':\n                            case 'cache':\n                            case 'private-cache':\n                            case 'unstable-cache':\n                                break;\n                            default:\n                                workUnitStore;\n                        }\n                    }\n                    markCurrentScopeAsDynamic(workStore, workUnitStore, `revalidate: 0 fetch ${input} ${workStore.route}`);\n                }\n                // We only want to set the revalidate store's revalidate time if it\n                // was explicitly set for the fetch call, i.e.\n                // originalFetchRevalidate.\n                if (revalidateStore && originalFetchRevalidate === finalRevalidate) {\n                    revalidateStore.revalidate = finalRevalidate;\n                }\n            }\n            const isCacheableRevalidate = typeof finalRevalidate === 'number' && finalRevalidate > 0;\n            let cacheKey;\n            const { incrementalCache } = workStore;\n            let isHmrRefresh = false;\n            let serverComponentsHmrCache;\n            if (workUnitStore) {\n                switch(workUnitStore.type){\n                    case 'request':\n                    case 'cache':\n                    case 'private-cache':\n                        isHmrRefresh = workUnitStore.isHmrRefresh ?? false;\n                        serverComponentsHmrCache = workUnitStore.serverComponentsHmrCache;\n                        break;\n                    case 'prerender':\n                    case 'prerender-client':\n                    case 'prerender-runtime':\n                    case 'prerender-ppr':\n                    case 'prerender-legacy':\n                    case 'unstable-cache':\n                        break;\n                    default:\n                        workUnitStore;\n                }\n            }\n            if (incrementalCache && (isCacheableRevalidate || serverComponentsHmrCache)) {\n                try {\n                    cacheKey = await incrementalCache.generateCacheKey(fetchUrl, isRequestInput ? input : init);\n                } catch (err) {\n                    console.error(`Failed to generate cache key for`, input);\n                }\n            }\n            const fetchIdx = workStore.nextFetchId ?? 1;\n            workStore.nextFetchId = fetchIdx + 1;\n            let handleUnlock = ()=>{};\n            const doOriginalFetch = async (isStale, cacheReasonOverride)=>{\n                const requestInputFields = [\n                    'cache',\n                    'credentials',\n                    'headers',\n                    'integrity',\n                    'keepalive',\n                    'method',\n                    'mode',\n                    'redirect',\n                    'referrer',\n                    'referrerPolicy',\n                    'window',\n                    'duplex',\n                    // don't pass through signal when revalidating\n                    ...isStale ? [] : [\n                        'signal'\n                    ]\n                ];\n                if (isRequestInput) {\n                    const reqInput = input;\n                    const reqOptions = {\n                        body: reqInput._ogBody || reqInput.body\n                    };\n                    for (const field of requestInputFields){\n                        // @ts-expect-error custom fields\n                        reqOptions[field] = reqInput[field];\n                    }\n                    input = new Request(reqInput.url, reqOptions);\n                } else if (init) {\n                    const { _ogBody, body, signal, ...otherInput } = init;\n                    init = {\n                        ...otherInput,\n                        body: _ogBody || body,\n                        signal: isStale ? undefined : signal\n                    };\n                }\n                // add metadata to init without editing the original\n                const clonedInit = {\n                    ...init,\n                    next: {\n                        ...init == null ? void 0 : init.next,\n                        fetchType: 'origin',\n                        fetchIdx\n                    }\n                };\n                return originFetch(input, clonedInit).then(async (res)=>{\n                    if (!isStale && fetchStart) {\n                        trackFetchMetric(workStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason: cacheReasonOverride || cacheReason,\n                            cacheStatus: finalRevalidate === 0 || cacheReasonOverride ? 'skip' : 'miss',\n                            cacheWarning,\n                            status: res.status,\n                            method: clonedInit.method || 'GET'\n                        });\n                    }\n                    if (res.status === 200 && incrementalCache && cacheKey && (isCacheableRevalidate || serverComponentsHmrCache)) {\n                        const normalizedRevalidate = finalRevalidate >= INFINITE_CACHE ? CACHE_ONE_YEAR : finalRevalidate;\n                        const incrementalCacheConfig = isCacheableRevalidate ? {\n                            fetchCache: true,\n                            fetchUrl,\n                            fetchIdx,\n                            tags,\n                            isImplicitBuildTimeCache\n                        } : undefined;\n                        switch(workUnitStore == null ? void 0 : workUnitStore.type){\n                            case 'prerender':\n                            case 'prerender-client':\n                            case 'prerender-runtime':\n                                return createCachedPrerenderResponse(res, cacheKey, incrementalCacheConfig, incrementalCache, normalizedRevalidate, handleUnlock);\n                            case 'request':\n                                if (process.env.NODE_ENV === 'development' && workUnitStore.stagedRendering && workUnitStore.cacheSignal) {\n                                    // We're filling caches for a staged render,\n                                    // so we need to wait for the response to finish instead of streaming.\n                                    return createCachedPrerenderResponse(res, cacheKey, incrementalCacheConfig, incrementalCache, normalizedRevalidate, handleUnlock);\n                                }\n                            // fallthrough\n                            case 'prerender-ppr':\n                            case 'prerender-legacy':\n                            case 'cache':\n                            case 'private-cache':\n                            case 'unstable-cache':\n                            case undefined:\n                                return createCachedDynamicResponse(workStore, res, cacheKey, incrementalCacheConfig, incrementalCache, serverComponentsHmrCache, normalizedRevalidate, input, handleUnlock);\n                            default:\n                                workUnitStore;\n                        }\n                    }\n                    // we had response that we determined shouldn't be cached so we return it\n                    // and don't cache it. This also needs to unlock the cache lock we acquired.\n                    await handleUnlock();\n                    return res;\n                }).catch((error)=>{\n                    handleUnlock();\n                    throw error;\n                });\n            };\n            let cacheReasonOverride;\n            let isForegroundRevalidate = false;\n            let isHmrRefreshCache = false;\n            if (cacheKey && incrementalCache) {\n                let cachedFetchData;\n                if (isHmrRefresh && serverComponentsHmrCache) {\n                    cachedFetchData = serverComponentsHmrCache.get(cacheKey);\n                    isHmrRefreshCache = true;\n                }\n                if (isCacheableRevalidate && !cachedFetchData) {\n                    handleUnlock = await incrementalCache.lock(cacheKey);\n                    const entry = workStore.isOnDemandRevalidate ? null : await incrementalCache.get(cacheKey, {\n                        kind: IncrementalCacheKind.FETCH,\n                        revalidate: finalRevalidate,\n                        fetchUrl,\n                        fetchIdx,\n                        tags,\n                        softTags: implicitTags == null ? void 0 : implicitTags.tags\n                    });\n                    if (hasNoExplicitCacheConfig && workUnitStore) {\n                        switch(workUnitStore.type){\n                            case 'prerender':\n                            case 'prerender-client':\n                            case 'prerender-runtime':\n                                // We sometimes use the cache to dedupe fetches that do not\n                                // specify a cache configuration. In these cases we want to\n                                // make sure we still exclude them from prerenders if\n                                // cacheComponents is on so we introduce an artificial task boundary\n                                // here.\n                                await getTimeoutBoundary();\n                                break;\n                            case 'request':\n                                if (process.env.NODE_ENV === 'development' && workUnitStore.stagedRendering) {\n                                    await workUnitStore.stagedRendering.waitForStage(RenderStage.Dynamic);\n                                }\n                                break;\n                            case 'prerender-ppr':\n                            case 'prerender-legacy':\n                            case 'cache':\n                            case 'private-cache':\n                            case 'unstable-cache':\n                                break;\n                            default:\n                                workUnitStore;\n                        }\n                    }\n                    if (entry) {\n                        await handleUnlock();\n                    } else {\n                        // in dev, incremental cache response will be null in case the browser adds `cache-control: no-cache` in the request headers\n                        // TODO: it seems like we also hit this after revalidates in dev?\n                        cacheReasonOverride = 'cache-control: no-cache (hard refresh)';\n                    }\n                    if ((entry == null ? void 0 : entry.value) && entry.value.kind === CachedRouteKind.FETCH) {\n                        // when stale and is revalidating we wait for fresh data\n                        // so the revalidated entry has the updated data\n                        if (workStore.isStaticGeneration && entry.isStale) {\n                            isForegroundRevalidate = true;\n                        } else {\n                            if (entry.isStale) {\n                                workStore.pendingRevalidates ??= {};\n                                if (!workStore.pendingRevalidates[cacheKey]) {\n                                    const pendingRevalidate = doOriginalFetch(true).then(async (response)=>({\n                                            body: await response.arrayBuffer(),\n                                            headers: response.headers,\n                                            status: response.status,\n                                            statusText: response.statusText\n                                        })).finally(()=>{\n                                        workStore.pendingRevalidates ??= {};\n                                        delete workStore.pendingRevalidates[cacheKey || ''];\n                                    });\n                                    // Attach the empty catch here so we don't get a \"unhandled\n                                    // promise rejection\" warning.\n                                    pendingRevalidate.catch(console.error);\n                                    workStore.pendingRevalidates[cacheKey] = pendingRevalidate;\n                                }\n                            }\n                            cachedFetchData = entry.value.data;\n                        }\n                    }\n                }\n                if (cachedFetchData) {\n                    if (fetchStart) {\n                        trackFetchMetric(workStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason,\n                            cacheStatus: isHmrRefreshCache ? 'hmr' : 'hit',\n                            cacheWarning,\n                            status: cachedFetchData.status || 200,\n                            method: (init == null ? void 0 : init.method) || 'GET'\n                        });\n                    }\n                    const response = new Response(Buffer.from(cachedFetchData.body, 'base64'), {\n                        headers: cachedFetchData.headers,\n                        status: cachedFetchData.status\n                    });\n                    Object.defineProperty(response, 'url', {\n                        value: cachedFetchData.url\n                    });\n                    return response;\n                }\n            }\n            if ((workStore.isStaticGeneration || process.env.NODE_ENV === 'development' && process.env.__NEXT_CACHE_COMPONENTS && workUnitStore && // eslint-disable-next-line no-restricted-syntax\n            workUnitStore.type === 'request' && workUnitStore.stagedRendering) && init && typeof init === 'object') {\n                const { cache } = init;\n                // Delete `cache` property as Cloudflare Workers will throw an error\n                if (isEdgeRuntime) delete init.cache;\n                if (cache === 'no-store') {\n                    // If enabled, we should bail out of static generation.\n                    if (workUnitStore) {\n                        switch(workUnitStore.type){\n                            case 'prerender':\n                            case 'prerender-client':\n                            case 'prerender-runtime':\n                                if (cacheSignal) {\n                                    cacheSignal.endRead();\n                                    cacheSignal = null;\n                                }\n                                return makeHangingPromise(workUnitStore.renderSignal, workStore.route, 'fetch()');\n                            case 'request':\n                                if (process.env.NODE_ENV === 'development' && workUnitStore.stagedRendering) {\n                                    if (cacheSignal) {\n                                        cacheSignal.endRead();\n                                        cacheSignal = null;\n                                    }\n                                    await workUnitStore.stagedRendering.waitForStage(RenderStage.Dynamic);\n                                }\n                                break;\n                            case 'prerender-ppr':\n                            case 'prerender-legacy':\n                            case 'cache':\n                            case 'private-cache':\n                            case 'unstable-cache':\n                                break;\n                            default:\n                                workUnitStore;\n                        }\n                    }\n                    markCurrentScopeAsDynamic(workStore, workUnitStore, `no-store fetch ${input} ${workStore.route}`);\n                }\n                const hasNextConfig = 'next' in init;\n                const { next = {} } = init;\n                if (typeof next.revalidate === 'number' && revalidateStore && next.revalidate < revalidateStore.revalidate) {\n                    if (next.revalidate === 0) {\n                        // If enabled, we should bail out of static generation.\n                        if (workUnitStore) {\n                            switch(workUnitStore.type){\n                                case 'prerender':\n                                case 'prerender-client':\n                                case 'prerender-runtime':\n                                    return makeHangingPromise(workUnitStore.renderSignal, workStore.route, 'fetch()');\n                                case 'request':\n                                    if (process.env.NODE_ENV === 'development' && workUnitStore.stagedRendering) {\n                                        await workUnitStore.stagedRendering.waitForStage(RenderStage.Dynamic);\n                                    }\n                                    break;\n                                case 'cache':\n                                case 'private-cache':\n                                case 'unstable-cache':\n                                case 'prerender-legacy':\n                                case 'prerender-ppr':\n                                    break;\n                                default:\n                                    workUnitStore;\n                            }\n                        }\n                        markCurrentScopeAsDynamic(workStore, workUnitStore, `revalidate: 0 fetch ${input} ${workStore.route}`);\n                    }\n                    if (!workStore.forceStatic || next.revalidate !== 0) {\n                        revalidateStore.revalidate = next.revalidate;\n                    }\n                }\n                if (hasNextConfig) delete init.next;\n            }\n            // if we are revalidating the whole page via time or on-demand and\n            // the fetch cache entry is stale we should still de-dupe the\n            // origin hit if it's a cache-able entry\n            if (cacheKey && isForegroundRevalidate) {\n                const pendingRevalidateKey = cacheKey;\n                workStore.pendingRevalidates ??= {};\n                let pendingRevalidate = workStore.pendingRevalidates[pendingRevalidateKey];\n                if (pendingRevalidate) {\n                    const revalidatedResult = await pendingRevalidate;\n                    return new Response(revalidatedResult.body, {\n                        headers: revalidatedResult.headers,\n                        status: revalidatedResult.status,\n                        statusText: revalidatedResult.statusText\n                    });\n                }\n                // We used to just resolve the Response and clone it however for\n                // static generation with cacheComponents we need the response to be able to\n                // be resolved in a microtask and cloning the response will never have\n                // a body that can resolve in a microtask in node (as observed through\n                // experimentation) So instead we await the body and then when it is\n                // available we construct manually cloned Response objects with the\n                // body as an ArrayBuffer. This will be resolvable in a microtask\n                // making it compatible with cacheComponents.\n                const pendingResponse = doOriginalFetch(true, cacheReasonOverride)// We're cloning the response using this utility because there\n                // exists a bug in the undici library around response cloning.\n                // See the following pull request for more details:\n                // https://github.com/vercel/next.js/pull/73274\n                .then(cloneResponse);\n                pendingRevalidate = pendingResponse.then(async (responses)=>{\n                    const response = responses[0];\n                    return {\n                        body: await response.arrayBuffer(),\n                        headers: response.headers,\n                        status: response.status,\n                        statusText: response.statusText\n                    };\n                }).finally(()=>{\n                    var _workStore_pendingRevalidates;\n                    // If the pending revalidate is not present in the store, then\n                    // we have nothing to delete.\n                    if (!((_workStore_pendingRevalidates = workStore.pendingRevalidates) == null ? void 0 : _workStore_pendingRevalidates[pendingRevalidateKey])) {\n                        return;\n                    }\n                    delete workStore.pendingRevalidates[pendingRevalidateKey];\n                });\n                // Attach the empty catch here so we don't get a \"unhandled promise\n                // rejection\" warning\n                pendingRevalidate.catch(()=>{});\n                workStore.pendingRevalidates[pendingRevalidateKey] = pendingRevalidate;\n                return pendingResponse.then((responses)=>responses[1]);\n            } else {\n                return doOriginalFetch(false, cacheReasonOverride);\n            }\n        });\n        if (cacheSignal) {\n            try {\n                return await result;\n            } finally{\n                if (cacheSignal) {\n                    cacheSignal.endRead();\n                }\n            }\n        }\n        return result;\n    };\n    // Attach the necessary properties to the patched fetch function.\n    // We don't use this to determine if the fetch function has been patched,\n    // but for external consumers to determine if the fetch function has been\n    // patched.\n    patched.__nextPatched = true;\n    patched.__nextGetStaticStore = ()=>workAsyncStorage;\n    patched._nextOriginalFetch = originFetch;\n    globalThis[NEXT_PATCH_SYMBOL] = true;\n    // Assign the function name also as a name property, so that it's preserved\n    // even when mangling is enabled.\n    Object.defineProperty(patched, 'name', {\n        value: 'fetch',\n        writable: false\n    });\n    return patched;\n}\n// we patch fetch to collect cache information used for\n// determining if a page is static or not\nexport function patchFetch(options) {\n    // If we've already patched fetch, we should not patch it again.\n    if (isFetchPatched()) return;\n    // Grab the original fetch function. We'll attach this so we can use it in\n    // the patched fetch function.\n    const original = createDedupeFetch(globalThis.fetch);\n    // Set the global fetch to the patched fetch.\n    globalThis.fetch = createPatchedFetcher(original, options);\n}\nlet currentTimeoutBoundary = null;\nfunction getTimeoutBoundary() {\n    if (!currentTimeoutBoundary) {\n        currentTimeoutBoundary = new Promise((r)=>{\n            setTimeout(()=>{\n                currentTimeoutBoundary = null;\n                r();\n            }, 0);\n        });\n    }\n    return currentTimeoutBoundary;\n}\n\n//# sourceMappingURL=patch-fetch.js.map","import { InvariantError } from '../../shared/lib/invariant-error';\nimport { createPromiseWithResolvers } from '../../shared/lib/promise-with-resolvers';\nexport var RenderStage = /*#__PURE__*/ function(RenderStage) {\n    RenderStage[RenderStage[\"Static\"] = 1] = \"Static\";\n    RenderStage[RenderStage[\"Runtime\"] = 2] = \"Runtime\";\n    RenderStage[RenderStage[\"Dynamic\"] = 3] = \"Dynamic\";\n    return RenderStage;\n}({});\nexport class StagedRenderingController {\n    constructor(abortSignal = null){\n        this.abortSignal = abortSignal;\n        this.currentStage = 1;\n        this.runtimeStagePromise = createPromiseWithResolvers();\n        this.dynamicStagePromise = createPromiseWithResolvers();\n        if (abortSignal) {\n            abortSignal.addEventListener('abort', ()=>{\n                const { reason } = abortSignal;\n                if (this.currentStage < 2) {\n                    this.runtimeStagePromise.promise.catch(ignoreReject) // avoid unhandled rejections\n                    ;\n                    this.runtimeStagePromise.reject(reason);\n                }\n                if (this.currentStage < 3) {\n                    this.dynamicStagePromise.promise.catch(ignoreReject) // avoid unhandled rejections\n                    ;\n                    this.dynamicStagePromise.reject(reason);\n                }\n            }, {\n                once: true\n            });\n        }\n    }\n    advanceStage(stage) {\n        // If we're already at the target stage or beyond, do nothing.\n        // (this can happen e.g. if sync IO advanced us to the dynamic stage)\n        if (this.currentStage >= stage) {\n            return;\n        }\n        this.currentStage = stage;\n        // Note that we might be going directly from Static to Dynamic,\n        // so we need to resolve the runtime stage as well.\n        if (stage >= 2) {\n            this.runtimeStagePromise.resolve();\n        }\n        if (stage >= 3) {\n            this.dynamicStagePromise.resolve();\n        }\n    }\n    getStagePromise(stage) {\n        switch(stage){\n            case 2:\n                {\n                    return this.runtimeStagePromise.promise;\n                }\n            case 3:\n                {\n                    return this.dynamicStagePromise.promise;\n                }\n            default:\n                {\n                    stage;\n                    throw Object.defineProperty(new InvariantError(`Invalid render stage: ${stage}`), \"__NEXT_ERROR_CODE\", {\n                        value: \"E881\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n        }\n    }\n    waitForStage(stage) {\n        return this.getStagePromise(stage);\n    }\n    delayUntilStage(stage, displayName, resolvedValue) {\n        const ioTriggerPromise = this.getStagePromise(stage);\n        const promise = makeDevtoolsIOPromiseFromIOTrigger(ioTriggerPromise, displayName, resolvedValue);\n        // Analogously to `makeHangingPromise`, we might reject this promise if the signal is invoked.\n        // (e.g. in the case where we don't want want the render to proceed to the dynamic stage and abort it).\n        // We shouldn't consider this an unhandled rejection, so we attach a noop catch handler here to suppress this warning.\n        if (this.abortSignal) {\n            promise.catch(ignoreReject);\n        }\n        return promise;\n    }\n}\nfunction ignoreReject() {}\n// TODO(restart-on-cache-miss): the layering of `delayUntilStage`,\n// `makeDevtoolsIOPromiseFromIOTrigger` and and `makeDevtoolsIOAwarePromise`\n// is confusing, we should clean it up.\nfunction makeDevtoolsIOPromiseFromIOTrigger(ioTrigger, displayName, resolvedValue) {\n    // If we create a `new Promise` and give it a displayName\n    // (with no userspace code above us in the stack)\n    // React Devtools will use it as the IO cause when determining \"suspended by\".\n    // In particular, it should shadow any inner IO that resolved/rejected the promise\n    // (in case of staged rendering, this will be the `setTimeout` that triggers the relevant stage)\n    const promise = new Promise((resolve, reject)=>{\n        ioTrigger.then(resolve.bind(null, resolvedValue), reject);\n    });\n    if (displayName !== undefined) {\n        // @ts-expect-error\n        promise.displayName = displayName;\n    }\n    return promise;\n}\n\n//# sourceMappingURL=staged-rendering.js.map","// TODO: isWellKnownError -> isNextInternalError\n// isReactLargeShellError -> isWarning\nexport function isReactLargeShellError(error) {\n    return typeof error === 'object' && error !== null && 'message' in error && typeof error.message === 'string' && error.message.startsWith('This rendered a large document (>');\n}\n\n//# sourceMappingURL=react-large-shell-error.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { MetaFilter } from './meta';\nfunction AlternateLink({ descriptor, ...props }) {\n    if (!descriptor.url) return null;\n    return /*#__PURE__*/ _jsx(\"link\", {\n        ...props,\n        ...descriptor.title && {\n            title: descriptor.title\n        },\n        href: descriptor.url.toString()\n    });\n}\nexport function AlternatesMetadata({ alternates }) {\n    if (!alternates) return null;\n    const { canonical, languages, media, types } = alternates;\n    return MetaFilter([\n        canonical ? AlternateLink({\n            rel: 'canonical',\n            descriptor: canonical\n        }) : null,\n        languages ? Object.entries(languages).flatMap(([locale, descriptors])=>descriptors == null ? void 0 : descriptors.map((descriptor)=>AlternateLink({\n                    rel: 'alternate',\n                    hrefLang: locale,\n                    descriptor\n                }))) : null,\n        media ? Object.entries(media).flatMap(([mediaName, descriptors])=>descriptors == null ? void 0 : descriptors.map((descriptor)=>AlternateLink({\n                    rel: 'alternate',\n                    media: mediaName,\n                    descriptor\n                }))) : null,\n        types ? Object.entries(types).flatMap(([type, descriptors])=>descriptors == null ? void 0 : descriptors.map((descriptor)=>AlternateLink({\n                    rel: 'alternate',\n                    type,\n                    descriptor\n                }))) : null\n    ]);\n}\n\n//# sourceMappingURL=alternate.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { nonNullable } from '../../non-nullable';\nexport function Meta({ name, property, content, media }) {\n    if (typeof content !== 'undefined' && content !== null && content !== '') {\n        return /*#__PURE__*/ _jsx(\"meta\", {\n            ...name ? {\n                name\n            } : {\n                property\n            },\n            ...media ? {\n                media\n            } : undefined,\n            content: typeof content === 'string' ? content : content.toString()\n        });\n    }\n    return null;\n}\nexport function MetaFilter(items) {\n    const acc = [];\n    for (const item of items){\n        if (Array.isArray(item)) {\n            acc.push(...item.filter(nonNullable));\n        } else if (nonNullable(item)) {\n            acc.push(item);\n        }\n    }\n    return acc;\n}\nfunction camelToSnake(camelCaseStr) {\n    return camelCaseStr.replace(/([A-Z])/g, function(match) {\n        return '_' + match.toLowerCase();\n    });\n}\nconst aliasPropPrefixes = new Set([\n    'og:image',\n    'twitter:image',\n    'og:video',\n    'og:audio'\n]);\nfunction getMetaKey(prefix, key) {\n    // Use `twitter:image` and `og:image` instead of `twitter:image:url` and `og:image:url`\n    // to be more compatible as it's a more common format.\n    // `og:video` & `og:audio` do not have a `:url` suffix alias\n    if (aliasPropPrefixes.has(prefix) && key === 'url') {\n        return prefix;\n    }\n    if (prefix.startsWith('og:') || prefix.startsWith('twitter:')) {\n        key = camelToSnake(key);\n    }\n    return prefix + ':' + key;\n}\nfunction ExtendMeta({ content, namePrefix, propertyPrefix }) {\n    if (!content) return null;\n    return MetaFilter(Object.entries(content).map(([k, v])=>{\n        return typeof v === 'undefined' ? null : Meta({\n            ...propertyPrefix && {\n                property: getMetaKey(propertyPrefix, k)\n            },\n            ...namePrefix && {\n                name: getMetaKey(namePrefix, k)\n            },\n            content: typeof v === 'string' ? v : v == null ? void 0 : v.toString()\n        });\n    }));\n}\nexport function MultiMeta({ propertyPrefix, namePrefix, contents }) {\n    if (typeof contents === 'undefined' || contents === null) {\n        return null;\n    }\n    return MetaFilter(contents.map((content)=>{\n        if (typeof content === 'string' || typeof content === 'number' || content instanceof URL) {\n            return Meta({\n                ...propertyPrefix ? {\n                    property: propertyPrefix\n                } : {\n                    name: namePrefix\n                },\n                content\n            });\n        } else {\n            return ExtendMeta({\n                namePrefix,\n                propertyPrefix,\n                content\n            });\n        }\n    }));\n}\n\n//# sourceMappingURL=meta.js.map","import { resolveAsArrayOrUndefined } from '../generate/utils';\nimport { isStringOrURL } from './resolve-url';\nimport { IconKeys } from '../constants';\nexport function resolveIcon(icon) {\n    if (isStringOrURL(icon)) return {\n        url: icon\n    };\n    else if (Array.isArray(icon)) return icon;\n    return icon;\n}\nexport const resolveIcons = (icons)=>{\n    if (!icons) {\n        return null;\n    }\n    const resolved = {\n        icon: [],\n        apple: []\n    };\n    if (Array.isArray(icons)) {\n        resolved.icon = icons.map(resolveIcon).filter(Boolean);\n    } else if (isStringOrURL(icons)) {\n        resolved.icon = [\n            resolveIcon(icons)\n        ];\n    } else {\n        for (const key of IconKeys){\n            const values = resolveAsArrayOrUndefined(icons[key]);\n            if (values) resolved[key] = values.map(resolveIcon);\n        }\n    }\n    return resolved;\n};\n\n//# sourceMappingURL=resolve-icons.js.map","import { resolveArray, resolveAsArrayOrUndefined } from '../generate/utils';\nimport { getSocialImageMetadataBaseFallback, isStringOrURL, resolveUrl, resolveAbsoluteUrlWithPathname } from './resolve-url';\nimport { resolveTitle } from './resolve-title';\nimport { isFullStringUrl } from '../../url';\nimport { warnOnce } from '../../../build/output/log';\nconst OgTypeFields = {\n    article: [\n        'authors',\n        'tags'\n    ],\n    song: [\n        'albums',\n        'musicians'\n    ],\n    playlist: [\n        'albums',\n        'musicians'\n    ],\n    radio: [\n        'creators'\n    ],\n    video: [\n        'actors',\n        'directors',\n        'writers',\n        'tags'\n    ],\n    basic: [\n        'emails',\n        'phoneNumbers',\n        'faxNumbers',\n        'alternateLocale',\n        'audio',\n        'videos'\n    ]\n};\nfunction resolveAndValidateImage(item, metadataBase, isStaticMetadataRouteFile) {\n    if (!item) return undefined;\n    const isItemUrl = isStringOrURL(item);\n    const inputUrl = isItemUrl ? item : item.url;\n    if (!inputUrl) return undefined;\n    // process.env.VERCEL is set to \"1\" when System Environment Variables are\n    // exposed. When exposed, validation is not necessary since we are falling back to\n    // process.env.VERCEL_PROJECT_PRODUCTION_URL, process.env.VERCEL_BRANCH_URL, or\n    // process.env.VERCEL_URL for the `metadataBase`. process.env.VERCEL is undefined\n    // when System Environment Variables are not exposed. When not exposed, we cannot\n    // detect in the build environment if the deployment is a Vercel deployment or not.\n    //\n    // x-ref: https://vercel.com/docs/projects/environment-variables/system-environment-variables#system-environment-variables\n    const isUsingVercelSystemEnvironmentVariables = Boolean(process.env.VERCEL);\n    const isRelativeUrl = typeof inputUrl === 'string' && !isFullStringUrl(inputUrl);\n    // When no explicit metadataBase is specified by the user, we'll override it with the fallback metadata\n    // under the following conditions:\n    // - The provided URL is relative (ie ./og-image).\n    // - The image is statically generated by Next.js (such as the special `opengraph-image` route)\n    // In both cases, we want to ensure that across all environments, the ogImage is a fully qualified URL.\n    // In the `opengraph-image` case, since the user isn't explicitly passing a relative path, this ensures\n    // the ogImage will be properly discovered across different environments without the user needing to\n    // have a bunch of `process.env` checks when defining their `metadataBase`.\n    if (isRelativeUrl && (!metadataBase || isStaticMetadataRouteFile)) {\n        const fallbackMetadataBase = getSocialImageMetadataBaseFallback(metadataBase);\n        // When not using Vercel environment variables for URL injection, we aren't able to determine\n        // a fallback value for `metadataBase`. For self-hosted setups, we want to warn\n        // about this since the only fallback we'll be able to generate is `localhost`.\n        // In development, we'll only warn for relative metadata that isn't part of the static\n        // metadata conventions (eg `opengraph-image`), as otherwise it's currently very noisy\n        // for common cases. Eventually we should remove this warning all together in favor of\n        // devtools.\n        const shouldWarn = !isUsingVercelSystemEnvironmentVariables && !metadataBase && (process.env.NODE_ENV === 'production' || !isStaticMetadataRouteFile);\n        if (shouldWarn) {\n            warnOnce(`metadataBase property in metadata export is not set for resolving social open graph or twitter images, using \"${fallbackMetadataBase.origin}\". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase`);\n        }\n        metadataBase = fallbackMetadataBase;\n    }\n    return isItemUrl ? {\n        url: resolveUrl(inputUrl, metadataBase)\n    } : {\n        ...item,\n        // Update image descriptor url\n        url: resolveUrl(inputUrl, metadataBase)\n    };\n}\nexport function resolveImages(images, metadataBase, isStaticMetadataRouteFile) {\n    const resolvedImages = resolveAsArrayOrUndefined(images);\n    if (!resolvedImages) return resolvedImages;\n    const nonNullableImages = [];\n    for (const item of resolvedImages){\n        const resolvedItem = resolveAndValidateImage(item, metadataBase, isStaticMetadataRouteFile);\n        if (!resolvedItem) continue;\n        nonNullableImages.push(resolvedItem);\n    }\n    return nonNullableImages;\n}\nconst ogTypeToFields = {\n    article: OgTypeFields.article,\n    book: OgTypeFields.article,\n    'music.song': OgTypeFields.song,\n    'music.album': OgTypeFields.song,\n    'music.playlist': OgTypeFields.playlist,\n    'music.radio_station': OgTypeFields.radio,\n    'video.movie': OgTypeFields.video,\n    'video.episode': OgTypeFields.video\n};\nfunction getFieldsByOgType(ogType) {\n    if (!ogType || !(ogType in ogTypeToFields)) return OgTypeFields.basic;\n    return ogTypeToFields[ogType].concat(OgTypeFields.basic);\n}\nexport const resolveOpenGraph = async (openGraph, metadataBase, pathname, metadataContext, titleTemplate)=>{\n    if (!openGraph) return null;\n    function resolveProps(target, og) {\n        const ogType = og && 'type' in og ? og.type : undefined;\n        const keys = getFieldsByOgType(ogType);\n        for (const k of keys){\n            const key = k;\n            if (key in og && key !== 'url') {\n                const value = og[key];\n                target[key] = value ? resolveArray(value) : null;\n            }\n        }\n        target.images = resolveImages(og.images, metadataBase, metadataContext.isStaticMetadataRouteFile);\n    }\n    const resolved = {\n        ...openGraph,\n        title: resolveTitle(openGraph.title, titleTemplate)\n    };\n    resolveProps(resolved, openGraph);\n    resolved.url = openGraph.url ? resolveAbsoluteUrlWithPathname(openGraph.url, metadataBase, await pathname, metadataContext) : null;\n    return resolved;\n};\nconst TwitterBasicInfoKeys = [\n    'site',\n    'siteId',\n    'creator',\n    'creatorId',\n    'description'\n];\nexport const resolveTwitter = (twitter, metadataBase, metadataContext, titleTemplate)=>{\n    var _resolved_images;\n    if (!twitter) return null;\n    let card = 'card' in twitter ? twitter.card : undefined;\n    const resolved = {\n        ...twitter,\n        title: resolveTitle(twitter.title, titleTemplate)\n    };\n    for (const infoKey of TwitterBasicInfoKeys){\n        resolved[infoKey] = twitter[infoKey] || null;\n    }\n    resolved.images = resolveImages(twitter.images, metadataBase, metadataContext.isStaticMetadataRouteFile);\n    card = card || (((_resolved_images = resolved.images) == null ? void 0 : _resolved_images.length) ? 'summary_large_image' : 'summary');\n    resolved.card = card;\n    if ('card' in resolved) {\n        switch(resolved.card){\n            case 'player':\n                {\n                    resolved.players = resolveAsArrayOrUndefined(resolved.players) || [];\n                    break;\n                }\n            case 'app':\n                {\n                    resolved.app = resolved.app || {};\n                    break;\n                }\n            case 'summary':\n            case 'summary_large_image':\n                break;\n            default:\n                resolved;\n        }\n    }\n    return resolved;\n};\n\n//# sourceMappingURL=resolve-opengraph.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Meta, MetaFilter, MultiMeta } from './meta';\nimport { ViewportMetaKeys } from '../constants';\nimport { getOrigin } from './utils';\n// convert viewport object to string for viewport meta tag\nfunction resolveViewportLayout(viewport) {\n    let resolved = null;\n    if (viewport && typeof viewport === 'object') {\n        resolved = '';\n        for(const viewportKey_ in ViewportMetaKeys){\n            const viewportKey = viewportKey_;\n            if (viewportKey in viewport) {\n                let value = viewport[viewportKey];\n                if (typeof value === 'boolean') {\n                    value = value ? 'yes' : 'no';\n                } else if (!value && viewportKey === 'initialScale') {\n                    value = undefined;\n                }\n                if (value) {\n                    if (resolved) resolved += ', ';\n                    resolved += `${ViewportMetaKeys[viewportKey]}=${value}`;\n                }\n            }\n        }\n    }\n    return resolved;\n}\nexport function ViewportMeta({ viewport }) {\n    return MetaFilter([\n        /*#__PURE__*/ _jsx(\"meta\", {\n            charSet: \"utf-8\"\n        }),\n        Meta({\n            name: 'viewport',\n            content: resolveViewportLayout(viewport)\n        }),\n        ...viewport.themeColor ? viewport.themeColor.map((themeColor)=>Meta({\n                name: 'theme-color',\n                content: themeColor.color,\n                media: themeColor.media\n            })) : [],\n        Meta({\n            name: 'color-scheme',\n            content: viewport.colorScheme\n        })\n    ]);\n}\nexport function BasicMeta({ metadata }) {\n    var _metadata_keywords, _metadata_robots, _metadata_robots1;\n    const manifestOrigin = metadata.manifest ? getOrigin(metadata.manifest) : undefined;\n    return MetaFilter([\n        metadata.title !== null && metadata.title.absolute ? /*#__PURE__*/ _jsx(\"title\", {\n            children: metadata.title.absolute\n        }) : null,\n        Meta({\n            name: 'description',\n            content: metadata.description\n        }),\n        Meta({\n            name: 'application-name',\n            content: metadata.applicationName\n        }),\n        ...metadata.authors ? metadata.authors.map((author)=>[\n                author.url ? /*#__PURE__*/ _jsx(\"link\", {\n                    rel: \"author\",\n                    href: author.url.toString()\n                }) : null,\n                Meta({\n                    name: 'author',\n                    content: author.name\n                })\n            ]) : [],\n        metadata.manifest ? /*#__PURE__*/ _jsx(\"link\", {\n            rel: \"manifest\",\n            href: metadata.manifest.toString(),\n            // If it's same origin, and it's a preview deployment,\n            // including credentials for manifest request.\n            crossOrigin: !manifestOrigin && process.env.VERCEL_ENV === 'preview' ? 'use-credentials' : undefined\n        }) : null,\n        Meta({\n            name: 'generator',\n            content: metadata.generator\n        }),\n        Meta({\n            name: 'keywords',\n            content: (_metadata_keywords = metadata.keywords) == null ? void 0 : _metadata_keywords.join(',')\n        }),\n        Meta({\n            name: 'referrer',\n            content: metadata.referrer\n        }),\n        Meta({\n            name: 'creator',\n            content: metadata.creator\n        }),\n        Meta({\n            name: 'publisher',\n            content: metadata.publisher\n        }),\n        Meta({\n            name: 'robots',\n            content: (_metadata_robots = metadata.robots) == null ? void 0 : _metadata_robots.basic\n        }),\n        Meta({\n            name: 'googlebot',\n            content: (_metadata_robots1 = metadata.robots) == null ? void 0 : _metadata_robots1.googleBot\n        }),\n        Meta({\n            name: 'abstract',\n            content: metadata.abstract\n        }),\n        ...metadata.archives ? metadata.archives.map((archive)=>/*#__PURE__*/ _jsx(\"link\", {\n                rel: \"archives\",\n                href: archive\n            })) : [],\n        ...metadata.assets ? metadata.assets.map((asset)=>/*#__PURE__*/ _jsx(\"link\", {\n                rel: \"assets\",\n                href: asset\n            })) : [],\n        ...metadata.bookmarks ? metadata.bookmarks.map((bookmark)=>/*#__PURE__*/ _jsx(\"link\", {\n                rel: \"bookmarks\",\n                href: bookmark\n            })) : [],\n        ...metadata.pagination ? [\n            metadata.pagination.previous ? /*#__PURE__*/ _jsx(\"link\", {\n                rel: \"prev\",\n                href: metadata.pagination.previous\n            }) : null,\n            metadata.pagination.next ? /*#__PURE__*/ _jsx(\"link\", {\n                rel: \"next\",\n                href: metadata.pagination.next\n            }) : null\n        ] : [],\n        Meta({\n            name: 'category',\n            content: metadata.category\n        }),\n        Meta({\n            name: 'classification',\n            content: metadata.classification\n        }),\n        ...metadata.other ? Object.entries(metadata.other).map(([name, content])=>{\n            if (Array.isArray(content)) {\n                return content.map((contentItem)=>Meta({\n                        name,\n                        content: contentItem\n                    }));\n            } else {\n                return Meta({\n                    name,\n                    content\n                });\n            }\n        }) : []\n    ]);\n}\nexport function ItunesMeta({ itunes }) {\n    if (!itunes) return null;\n    const { appId, appArgument } = itunes;\n    let content = `app-id=${appId}`;\n    if (appArgument) {\n        content += `, app-argument=${appArgument}`;\n    }\n    return /*#__PURE__*/ _jsx(\"meta\", {\n        name: \"apple-itunes-app\",\n        content: content\n    });\n}\nexport function FacebookMeta({ facebook }) {\n    if (!facebook) return null;\n    const { appId, admins } = facebook;\n    return MetaFilter([\n        appId ? /*#__PURE__*/ _jsx(\"meta\", {\n            property: \"fb:app_id\",\n            content: appId\n        }) : null,\n        ...admins ? admins.map((admin)=>/*#__PURE__*/ _jsx(\"meta\", {\n                property: \"fb:admins\",\n                content: admin\n            })) : []\n    ]);\n}\nexport function PinterestMeta({ pinterest }) {\n    if (!pinterest || pinterest.richPin === undefined) return null;\n    const { richPin } = pinterest;\n    return /*#__PURE__*/ _jsx(\"meta\", {\n        property: \"pinterest-rich-pin\",\n        content: richPin.toString()\n    });\n}\nconst formatDetectionKeys = [\n    'telephone',\n    'date',\n    'address',\n    'email',\n    'url'\n];\nexport function FormatDetectionMeta({ formatDetection }) {\n    if (!formatDetection) return null;\n    let content = '';\n    for (const key of formatDetectionKeys){\n        if (formatDetection[key] === false) {\n            if (content) content += ', ';\n            content += `${key}=no`;\n        }\n    }\n    return content ? /*#__PURE__*/ _jsx(\"meta\", {\n        name: \"format-detection\",\n        content: content\n    }) : null;\n}\nexport function AppleWebAppMeta({ appleWebApp }) {\n    if (!appleWebApp) return null;\n    const { capable, title, startupImage, statusBarStyle } = appleWebApp;\n    return MetaFilter([\n        capable ? Meta({\n            name: 'mobile-web-app-capable',\n            content: 'yes'\n        }) : null,\n        Meta({\n            name: 'apple-mobile-web-app-title',\n            content: title\n        }),\n        startupImage ? startupImage.map((image)=>/*#__PURE__*/ _jsx(\"link\", {\n                href: image.url,\n                media: image.media,\n                rel: \"apple-touch-startup-image\"\n            })) : null,\n        statusBarStyle ? Meta({\n            name: 'apple-mobile-web-app-status-bar-style',\n            content: statusBarStyle\n        }) : null\n    ]);\n}\nexport function VerificationMeta({ verification }) {\n    if (!verification) return null;\n    return MetaFilter([\n        MultiMeta({\n            namePrefix: 'google-site-verification',\n            contents: verification.google\n        }),\n        MultiMeta({\n            namePrefix: 'y_key',\n            contents: verification.yahoo\n        }),\n        MultiMeta({\n            namePrefix: 'yandex-verification',\n            contents: verification.yandex\n        }),\n        MultiMeta({\n            namePrefix: 'me',\n            contents: verification.me\n        }),\n        ...verification.other ? Object.entries(verification.other).map(([key, value])=>MultiMeta({\n                namePrefix: key,\n                contents: value\n            })) : []\n    ]);\n}\n\n//# sourceMappingURL=basic.js.map","import { delayUntilRuntimeStage, postponeWithTracking } from '../app-render/dynamic-rendering';\nimport { throwInvariantForMissingStore, workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nexport function createServerPathnameForMetadata(underlyingPathname, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                {\n                    return createPrerenderPathname(underlyingPathname, workStore, workUnitStore);\n                }\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createServerPathnameForMetadata should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E740\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-runtime':\n                return delayUntilRuntimeStage(workUnitStore, createRenderPathname(underlyingPathname));\n            case 'request':\n                return createRenderPathname(underlyingPathname);\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\nfunction createPrerenderPathname(underlyingPathname, workStore, prerenderStore) {\n    switch(prerenderStore.type){\n        case 'prerender-client':\n            throw Object.defineProperty(new InvariantError('createPrerenderPathname was called inside a client component scope.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E694\",\n                enumerable: false,\n                configurable: true\n            });\n        case 'prerender':\n            {\n                const fallbackParams = prerenderStore.fallbackRouteParams;\n                if (fallbackParams && fallbackParams.size > 0) {\n                    return makeHangingPromise(prerenderStore.renderSignal, workStore.route, '`pathname`');\n                }\n                break;\n            }\n        case 'prerender-ppr':\n            {\n                const fallbackParams = prerenderStore.fallbackRouteParams;\n                if (fallbackParams && fallbackParams.size > 0) {\n                    return makeErroringPathname(workStore, prerenderStore.dynamicTracking);\n                }\n                break;\n            }\n        case 'prerender-legacy':\n            break;\n        default:\n            prerenderStore;\n    }\n    // We don't have any fallback params so we have an entirely static safe params object\n    return Promise.resolve(underlyingPathname);\n}\nfunction makeErroringPathname(workStore, dynamicTracking) {\n    let reject = null;\n    const promise = new Promise((_, re)=>{\n        reject = re;\n    });\n    const originalThen = promise.then.bind(promise);\n    // We instrument .then so that we can generate a tracking event only if you actually\n    // await this promise, not just that it is created.\n    promise.then = (onfulfilled, onrejected)=>{\n        if (reject) {\n            try {\n                postponeWithTracking(workStore.route, 'metadata relative url resolving', dynamicTracking);\n            } catch (error) {\n                reject(error);\n                reject = null;\n            }\n        }\n        return originalThen(onfulfilled, onrejected);\n    };\n    // We wrap in a noop proxy to trick the runtime into thinking it\n    // isn't a native promise (it's not really). This is so that awaiting\n    // the promise will call the `then` property triggering the lazy postpone\n    return new Proxy(promise, {});\n}\nfunction createRenderPathname(underlyingPathname) {\n    return Promise.resolve(underlyingPathname);\n}\n\n//# sourceMappingURL=pathname.js.map","/**\n * Calls the given async function only when the returned promise-like object is\n * awaited. Afterwards, it provides the resolved value synchronously as `value`\n * property.\n */ export function createLazyResult(fn) {\n    let pendingResult;\n    const result = {\n        then (onfulfilled, onrejected) {\n            if (!pendingResult) {\n                pendingResult = fn();\n            }\n            pendingResult.then((value)=>{\n                result.value = value;\n            }).catch(()=>{\n            // The externally awaited result will be rejected via `onrejected`. We\n            // don't need to handle it here. But we do want to avoid an unhandled\n            // rejection.\n            });\n            return pendingResult.then(onfulfilled, onrejected);\n        }\n    };\n    return result;\n}\nexport function isResolvedLazyResult(result) {\n    return result.hasOwnProperty('value');\n}\n\n//# sourceMappingURL=lazy-result.js.map","/**\n * Based on https://github.com/facebook/react/blob/d4e78c42a94be027b4dc7ed2659a5fddfbf9bd4e/packages/react/src/ReactFetch.js\n */ import * as React from 'react';\nimport { cloneResponse } from './clone-response';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nconst simpleCacheKey = '[\"GET\",[],null,\"follow\",null,null,null,null]' // generateCacheKey(new Request('https://blank'));\n;\n// Headers that should not affect deduplication\n// traceparent and tracestate are used for distributed tracing and should not affect cache keys\nconst headersToExcludeInCacheKey = new Set([\n    'traceparent',\n    'tracestate'\n]);\nfunction generateCacheKey(request) {\n    // We pick the fields that goes into the key used to dedupe requests.\n    // We don't include the `cache` field, because we end up using whatever\n    // caching resulted from the first request.\n    // Notably we currently don't consider non-standard (or future) options.\n    // This might not be safe. TODO: warn for non-standard extensions differing.\n    // IF YOU CHANGE THIS UPDATE THE simpleCacheKey ABOVE.\n    const filteredHeaders = Array.from(request.headers.entries()).filter(([key])=>!headersToExcludeInCacheKey.has(key.toLowerCase()));\n    return JSON.stringify([\n        request.method,\n        filteredHeaders,\n        request.mode,\n        request.redirect,\n        request.credentials,\n        request.referrer,\n        request.referrerPolicy,\n        request.integrity\n    ]);\n}\nexport function createDedupeFetch(originalFetch) {\n    const getCacheEntries = React.cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- url is the cache key\n    (url)=>[]);\n    return function dedupeFetch(resource, options) {\n        if (options && options.signal) {\n            // If we're passed a signal, then we assume that\n            // someone else controls the lifetime of this object and opts out of\n            // caching. It's effectively the opt-out mechanism.\n            // Ideally we should be able to check this on the Request but\n            // it always gets initialized with its own signal so we don't\n            // know if it's supposed to override - unless we also override the\n            // Request constructor.\n            return originalFetch(resource, options);\n        }\n        // Normalize the Request\n        let url;\n        let cacheKey;\n        if (typeof resource === 'string' && !options) {\n            // Fast path.\n            cacheKey = simpleCacheKey;\n            url = resource;\n        } else {\n            // Normalize the request.\n            // if resource is not a string or a URL (its an instance of Request)\n            // then do not instantiate a new Request but instead\n            // reuse the request as to not disturb the body in the event it's a ReadableStream.\n            const request = typeof resource === 'string' || resource instanceof URL ? new Request(resource, options) : resource;\n            if (request.method !== 'GET' && request.method !== 'HEAD' || request.keepalive) {\n                // We currently don't dedupe requests that might have side-effects. Those\n                // have to be explicitly cached. We assume that the request doesn't have a\n                // body if it's GET or HEAD.\n                // keepalive gets treated the same as if you passed a custom cache signal.\n                return originalFetch(resource, options);\n            }\n            cacheKey = generateCacheKey(request);\n            url = request.url;\n        }\n        const cacheEntries = getCacheEntries(url);\n        for(let i = 0, j = cacheEntries.length; i < j; i += 1){\n            const [key, promise] = cacheEntries[i];\n            if (key === cacheKey) {\n                return promise.then(()=>{\n                    const response = cacheEntries[i][2];\n                    if (!response) throw Object.defineProperty(new InvariantError('No cached response'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E579\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                    // We're cloning the response using this utility because there exists\n                    // a bug in the undici library around response cloning. See the\n                    // following pull request for more details:\n                    // https://github.com/vercel/next.js/pull/73274\n                    const [cloned1, cloned2] = cloneResponse(response);\n                    cacheEntries[i][2] = cloned2;\n                    return cloned1;\n                });\n            }\n        }\n        // We pass the original arguments here in case normalizing the Request\n        // doesn't include all the options in this environment.\n        const promise = originalFetch(resource, options);\n        const entry = [\n            cacheKey,\n            promise,\n            null\n        ];\n        cacheEntries.push(entry);\n        return promise.then((response)=>{\n            // We're cloning the response using this utility because there exists\n            // a bug in the undici library around response cloning. See the\n            // following pull request for more details:\n            // https://github.com/vercel/next.js/pull/73274\n            const [cloned1, cloned2] = cloneResponse(response);\n            entry[2] = cloned2;\n            return cloned1;\n        });\n    };\n}\n\n//# sourceMappingURL=dedupe-fetch.js.map","/*\n\nFiles in the rsc directory are meant to be packaged as part of the RSC graph using next-app-loader.\n\n*/ import * as React from 'react';\nfunction notImplemented() {\n    throw Object.defineProperty(new Error('Taint can only be used with the taint flag.'), \"__NEXT_ERROR_CODE\", {\n        value: \"E354\",\n        enumerable: false,\n        configurable: true\n    });\n}\nexport const taintObjectReference = process.env.__NEXT_EXPERIMENTAL_REACT ? React.experimental_taintObjectReference : notImplemented;\nexport const taintUniqueValue = process.env.__NEXT_EXPERIMENTAL_REACT ? React.experimental_taintUniqueValue : notImplemented;\n\n//# sourceMappingURL=taint.js.map","import { isHTTPAccessFallbackError } from './http-access-fallback/http-access-fallback';\nimport { isRedirectError } from './redirect-error';\n/**\n * Returns true if the error is a navigation signal error. These errors are\n * thrown by user code to perform navigation operations and interrupt the React\n * render.\n */ export function isNextRouterError(error) {\n    return isRedirectError(error) || isHTTPAccessFallbackError(error);\n}\n\n//# sourceMappingURL=is-next-router-error.js.map","import { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { ReflectAdapter } from '../web/spec-extension/adapters/reflect';\nimport { throwToInterruptStaticGeneration, postponeWithTracking, delayUntilRuntimeStage } from '../app-render/dynamic-rendering';\nimport { workUnitAsyncStorage, throwInvariantForMissingStore } from '../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { describeStringPropertyAccess, wellKnownProperties } from '../../shared/lib/utils/reflect-utils';\nimport { makeDevtoolsIOAwarePromise, makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger';\nimport { dynamicAccessAsyncStorage } from '../app-render/dynamic-access-async-storage.external';\nimport { RenderStage } from '../app-render/staged-rendering';\nexport function createParamsFromClient(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createStaticPrerenderParams(underlyingParams, workStore, workUnitStore);\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createParamsFromClient should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E736\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-runtime':\n                throw Object.defineProperty(new InvariantError('createParamsFromClient should not be called in a runtime prerender.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E770\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'request':\n                if (process.env.NODE_ENV === 'development') {\n                    // Semantically we only need the dev tracking when running in `next dev`\n                    // but since you would never use next dev with production NODE_ENV we use this\n                    // as a proxy so we can statically exclude this code from production builds.\n                    const devFallbackParams = workUnitStore.devFallbackParams;\n                    return createRenderParamsInDev(underlyingParams, devFallbackParams, workStore, workUnitStore);\n                } else {\n                    return createRenderParamsInProd(underlyingParams);\n                }\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\nexport const createServerParamsForMetadata = createServerParamsForServerSegment;\n// routes always runs in RSC context so it is equivalent to a Server Page Component\nexport function createServerParamsForRoute(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createStaticPrerenderParams(underlyingParams, workStore, workUnitStore);\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createServerParamsForRoute should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E738\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-runtime':\n                return createRuntimePrerenderParams(underlyingParams, workUnitStore);\n            case 'request':\n                if (process.env.NODE_ENV === 'development') {\n                    // Semantically we only need the dev tracking when running in `next dev`\n                    // but since you would never use next dev with production NODE_ENV we use this\n                    // as a proxy so we can statically exclude this code from production builds.\n                    const devFallbackParams = workUnitStore.devFallbackParams;\n                    return createRenderParamsInDev(underlyingParams, devFallbackParams, workStore, workUnitStore);\n                } else {\n                    return createRenderParamsInProd(underlyingParams);\n                }\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\nexport function createServerParamsForServerSegment(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createStaticPrerenderParams(underlyingParams, workStore, workUnitStore);\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createServerParamsForServerSegment should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E743\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-runtime':\n                return createRuntimePrerenderParams(underlyingParams, workUnitStore);\n            case 'request':\n                if (process.env.NODE_ENV === 'development') {\n                    // Semantically we only need the dev tracking when running in `next dev`\n                    // but since you would never use next dev with production NODE_ENV we use this\n                    // as a proxy so we can statically exclude this code from production builds.\n                    const devFallbackParams = workUnitStore.devFallbackParams;\n                    return createRenderParamsInDev(underlyingParams, devFallbackParams, workStore, workUnitStore);\n                } else {\n                    return createRenderParamsInProd(underlyingParams);\n                }\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\nexport function createPrerenderParamsForClientSegment(underlyingParams) {\n    const workStore = workAsyncStorage.getStore();\n    if (!workStore) {\n        throw Object.defineProperty(new InvariantError('Missing workStore in createPrerenderParamsForClientSegment'), \"__NEXT_ERROR_CODE\", {\n            value: \"E773\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n                const fallbackParams = workUnitStore.fallbackRouteParams;\n                if (fallbackParams) {\n                    for(let key in underlyingParams){\n                        if (fallbackParams.has(key)) {\n                            // This params object has one or more fallback params, so we need\n                            // to consider the awaiting of this params object \"dynamic\". Since\n                            // we are in cacheComponents mode we encode this as a promise that never\n                            // resolves.\n                            return makeHangingPromise(workUnitStore.renderSignal, workStore.route, '`params`');\n                        }\n                    }\n                }\n                break;\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createPrerenderParamsForClientSegment should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E734\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'prerender-runtime':\n            case 'request':\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n    // We're prerendering in a mode that does not abort. We resolve the promise without\n    // any tracking because we're just transporting a value from server to client where the tracking\n    // will be applied.\n    return Promise.resolve(underlyingParams);\n}\nfunction createStaticPrerenderParams(underlyingParams, workStore, prerenderStore) {\n    switch(prerenderStore.type){\n        case 'prerender':\n        case 'prerender-client':\n            {\n                const fallbackParams = prerenderStore.fallbackRouteParams;\n                if (fallbackParams) {\n                    for(const key in underlyingParams){\n                        if (fallbackParams.has(key)) {\n                            // This params object has one or more fallback params, so we need\n                            // to consider the awaiting of this params object \"dynamic\". Since\n                            // we are in cacheComponents mode we encode this as a promise that never\n                            // resolves.\n                            return makeHangingParams(underlyingParams, workStore, prerenderStore);\n                        }\n                    }\n                }\n                break;\n            }\n        case 'prerender-ppr':\n            {\n                const fallbackParams = prerenderStore.fallbackRouteParams;\n                if (fallbackParams) {\n                    for(const key in underlyingParams){\n                        if (fallbackParams.has(key)) {\n                            return makeErroringParams(underlyingParams, fallbackParams, workStore, prerenderStore);\n                        }\n                    }\n                }\n                break;\n            }\n        case 'prerender-legacy':\n            break;\n        default:\n            prerenderStore;\n    }\n    return makeUntrackedParams(underlyingParams);\n}\nfunction createRuntimePrerenderParams(underlyingParams, workUnitStore) {\n    return delayUntilRuntimeStage(workUnitStore, makeUntrackedParams(underlyingParams));\n}\nfunction createRenderParamsInProd(underlyingParams) {\n    return makeUntrackedParams(underlyingParams);\n}\nfunction createRenderParamsInDev(underlyingParams, devFallbackParams, workStore, requestStore) {\n    let hasFallbackParams = false;\n    if (devFallbackParams) {\n        for(let key in underlyingParams){\n            if (devFallbackParams.has(key)) {\n                hasFallbackParams = true;\n                break;\n            }\n        }\n    }\n    return makeDynamicallyTrackedParamsWithDevWarnings(underlyingParams, hasFallbackParams, workStore, requestStore);\n}\nconst CachedParams = new WeakMap();\nconst fallbackParamsProxyHandler = {\n    get: function get(target, prop, receiver) {\n        if (prop === 'then' || prop === 'catch' || prop === 'finally') {\n            const originalMethod = ReflectAdapter.get(target, prop, receiver);\n            return ({\n                [prop]: (...args)=>{\n                    const store = dynamicAccessAsyncStorage.getStore();\n                    if (store) {\n                        store.abortController.abort(Object.defineProperty(new Error(`Accessed fallback \\`params\\` during prerendering.`), \"__NEXT_ERROR_CODE\", {\n                            value: \"E691\",\n                            enumerable: false,\n                            configurable: true\n                        }));\n                    }\n                    return new Proxy(originalMethod.apply(target, args), fallbackParamsProxyHandler);\n                }\n            })[prop];\n        }\n        return ReflectAdapter.get(target, prop, receiver);\n    }\n};\nfunction makeHangingParams(underlyingParams, workStore, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const promise = new Proxy(makeHangingPromise(prerenderStore.renderSignal, workStore.route, '`params`'), fallbackParamsProxyHandler);\n    CachedParams.set(underlyingParams, promise);\n    return promise;\n}\nfunction makeErroringParams(underlyingParams, fallbackParams, workStore, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const augmentedUnderlying = {\n        ...underlyingParams\n    };\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(augmentedUnderlying);\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            if (fallbackParams.has(prop)) {\n                Object.defineProperty(augmentedUnderlying, prop, {\n                    get () {\n                        const expression = describeStringPropertyAccess('params', prop);\n                        // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n                        // for params is only dynamic when we're generating a fallback shell\n                        // and even when `dynamic = \"error\"` we still support generating dynamic\n                        // fallback shells\n                        // TODO remove this comment when cacheComponents is the default since there\n                        // will be no `dynamic = \"error\"`\n                        if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no cacheComponents)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                    },\n                    enumerable: true\n                });\n            }\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedParams(underlyingParams) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const promise = Promise.resolve(underlyingParams);\n    CachedParams.set(underlyingParams, promise);\n    return promise;\n}\nfunction makeDynamicallyTrackedParamsWithDevWarnings(underlyingParams, hasFallbackParams, workStore, requestStore) {\n    if (requestStore.asyncApiPromises && hasFallbackParams) {\n        // We wrap each instance of params in a `new Promise()`, because deduping\n        // them across requests doesn't work anyway and this let us show each\n        // await a different set of values. This is important when all awaits\n        // are in third party which would otherwise track all the way to the\n        // internal params.\n        const sharedParamsParent = requestStore.asyncApiPromises.sharedParamsParent;\n        const promise = new Promise((resolve, reject)=>{\n            sharedParamsParent.then(()=>resolve(underlyingParams), reject);\n        });\n        // @ts-expect-error\n        promise.displayName = 'params';\n        return instrumentParamsPromiseWithDevWarnings(underlyingParams, promise, workStore);\n    }\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = hasFallbackParams ? makeDevtoolsIOAwarePromise(underlyingParams, requestStore, RenderStage.Runtime) : Promise.resolve(underlyingParams);\n    const proxiedPromise = instrumentParamsPromiseWithDevWarnings(underlyingParams, promise, workStore);\n    CachedParams.set(underlyingParams, proxiedPromise);\n    return proxiedPromise;\n}\nfunction instrumentParamsPromiseWithDevWarnings(underlyingParams, promise, workStore) {\n    // Track which properties we should warn for.\n    const proxiedProperties = new Set();\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            proxiedProperties.add(prop);\n        }\n    });\n    return new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string') {\n                if (// We are accessing a property that was proxied to the promise instance\n                proxiedProperties.has(prop)) {\n                    const expression = describeStringPropertyAccess('params', prop);\n                    warnForSyncAccess(workStore.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return ReflectAdapter.set(target, prop, value, receiver);\n        },\n        ownKeys (target) {\n            const expression = '`...params` or similar expression';\n            warnForSyncAccess(workStore.route, expression);\n            return Reflect.ownKeys(target);\n        }\n    });\n}\nconst warnForSyncAccess = createDedupedByCallsiteServerErrorLoggerDev(createParamsAccessError);\nfunction createParamsAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`params\\` is a Promise and must be unwrapped with \\`await\\` or \\`React.use()\\` before accessing its properties. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E834\",\n        enumerable: false,\n        configurable: true\n    });\n}\n\n//# sourceMappingURL=params.js.map","/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */ // Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react';\nimport { DynamicServerError } from '../../client/components/hooks-server-context';\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { getRuntimeStagePromise, throwForMissingRequestStore, workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { METADATA_BOUNDARY_NAME, VIEWPORT_BOUNDARY_NAME, OUTLET_BOUNDARY_NAME, ROOT_LAYOUT_BOUNDARY_NAME } from '../../lib/framework/boundary-constants';\nimport { scheduleOnNextTick } from '../../lib/scheduler';\nimport { BailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { RenderStage } from './staged-rendering';\nconst hasPostpone = typeof React.unstable_postpone === 'function';\nexport function createDynamicTrackingState(isDebugDynamicAccesses) {\n    return {\n        isDebugDynamicAccesses,\n        dynamicAccesses: [],\n        syncDynamicErrorWithStack: null\n    };\n}\nexport function createDynamicValidationState() {\n    return {\n        hasSuspenseAboveBody: false,\n        hasDynamicMetadata: false,\n        hasDynamicViewport: false,\n        hasAllowedDynamic: false,\n        dynamicErrors: []\n    };\n}\nexport function getFirstDynamicReason(trackingState) {\n    var _trackingState_dynamicAccesses_;\n    return (_trackingState_dynamicAccesses_ = trackingState.dynamicAccesses[0]) == null ? void 0 : _trackingState_dynamicAccesses_.expression;\n}\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */ export function markCurrentScopeAsDynamic(store, workUnitStore, expression) {\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'cache':\n            case 'unstable-cache':\n                // Inside cache scopes, marking a scope as dynamic has no effect,\n                // because the outer cache scope creates a cache boundary. This is\n                // subtly different from reading a dynamic data source, which is\n                // forbidden inside a cache scope.\n                return;\n            case 'private-cache':\n                // A private cache scope is already dynamic by definition.\n                return;\n            case 'prerender-legacy':\n            case 'prerender-ppr':\n            case 'request':\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n    // If we're forcing dynamic rendering or we're forcing static rendering, we\n    // don't need to do anything here because the entire page is already dynamic\n    // or it's static and it should not throw or postpone here.\n    if (store.forceDynamic || store.forceStatic) return;\n    if (store.dynamicShouldError) {\n        throw Object.defineProperty(new StaticGenBailoutError(`Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n            value: \"E553\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender-ppr':\n                return postponeWithTracking(store.route, expression, workUnitStore.dynamicTracking);\n            case 'prerender-legacy':\n                workUnitStore.revalidate = 0;\n                // We aren't prerendering, but we are generating a static page. We need\n                // to bail out of static generation.\n                const err = Object.defineProperty(new DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E550\",\n                    enumerable: false,\n                    configurable: true\n                });\n                store.dynamicUsageDescription = expression;\n                store.dynamicUsageStack = err.stack;\n                throw err;\n            case 'request':\n                if (process.env.NODE_ENV !== 'production') {\n                    workUnitStore.usedDynamic = true;\n                }\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n}\n/**\n * This function is meant to be used when prerendering without cacheComponents or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */ export function throwToInterruptStaticGeneration(expression, store, prerenderStore) {\n    // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n    const err = Object.defineProperty(new DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`), \"__NEXT_ERROR_CODE\", {\n        value: \"E558\",\n        enumerable: false,\n        configurable: true\n    });\n    prerenderStore.revalidate = 0;\n    store.dynamicUsageDescription = expression;\n    store.dynamicUsageStack = err.stack;\n    throw err;\n}\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */ export function trackDynamicDataInDynamicRender(workUnitStore) {\n    switch(workUnitStore.type){\n        case 'cache':\n        case 'unstable-cache':\n            // Inside cache scopes, marking a scope as dynamic has no effect,\n            // because the outer cache scope creates a cache boundary. This is\n            // subtly different from reading a dynamic data source, which is\n            // forbidden inside a cache scope.\n            return;\n        case 'private-cache':\n            // A private cache scope is already dynamic by definition.\n            return;\n        case 'prerender':\n        case 'prerender-runtime':\n        case 'prerender-legacy':\n        case 'prerender-ppr':\n        case 'prerender-client':\n            break;\n        case 'request':\n            if (process.env.NODE_ENV !== 'production') {\n                workUnitStore.usedDynamic = true;\n            }\n            break;\n        default:\n            workUnitStore;\n    }\n}\nfunction abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore) {\n    const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`;\n    const error = createPrerenderInterruptedError(reason);\n    prerenderStore.controller.abort(error);\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nexport function abortOnSynchronousPlatformIOAccess(route, expression, errorWithStack, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n    // It is important that we set this tracking value after aborting. Aborts are executed\n    // synchronously except for the case where you abort during render itself. By setting this\n    // value late we can use it to determine if any of the aborted tasks are the task that\n    // called the sync IO expression in the first place.\n    if (dynamicTracking) {\n        if (dynamicTracking.syncDynamicErrorWithStack === null) {\n            dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n        }\n    }\n}\nexport function trackSynchronousPlatformIOAccessInDev(requestStore) {\n    // We don't actually have a controller to abort but we do the semantic equivalent by\n    // advancing the request store out of the prerender stage\n    if (requestStore.stagedRendering) {\n        // TODO: error for sync IO in the runtime stage\n        // (which is not currently covered by the validation render in `spawnDynamicValidationInDev`)\n        requestStore.stagedRendering.advanceStage(RenderStage.Dynamic);\n    }\n}\n/**\n * use this function when prerendering with cacheComponents. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in cacheComponents mode.\n *\n * @internal\n */ export function abortAndThrowOnSynchronousRequestDataAccess(route, expression, errorWithStack, prerenderStore) {\n    const prerenderSignal = prerenderStore.controller.signal;\n    if (prerenderSignal.aborted === false) {\n        // TODO it would be better to move this aborted check into the callsite so we can avoid making\n        // the error object when it isn't relevant to the aborting of the prerender however\n        // since we need the throw semantics regardless of whether we abort it is easier to land\n        // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n        // to ideal implementation\n        abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n        // It is important that we set this tracking value after aborting. Aborts are executed\n        // synchronously except for the case where you abort during render itself. By setting this\n        // value late we can use it to determine if any of the aborted tasks are the task that\n        // called the sync IO expression in the first place.\n        const dynamicTracking = prerenderStore.dynamicTracking;\n        if (dynamicTracking) {\n            if (dynamicTracking.syncDynamicErrorWithStack === null) {\n                dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n            }\n        }\n    }\n    throw createPrerenderInterruptedError(`Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`);\n}\nexport function Postpone({ reason, route }) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    const dynamicTracking = prerenderStore && prerenderStore.type === 'prerender-ppr' ? prerenderStore.dynamicTracking : null;\n    postponeWithTracking(route, reason, dynamicTracking);\n}\nexport function postponeWithTracking(route, expression, dynamicTracking) {\n    assertPostpone();\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n    React.unstable_postpone(createPostponeReason(route, expression));\n}\nfunction createPostponeReason(route, expression) {\n    return `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` + `React throws this special object to indicate where. It should not be caught by ` + `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`;\n}\nexport function isDynamicPostpone(err) {\n    if (typeof err === 'object' && err !== null && typeof err.message === 'string') {\n        return isDynamicPostponeReason(err.message);\n    }\n    return false;\n}\nfunction isDynamicPostponeReason(reason) {\n    return reason.includes('needs to bail out of prerendering at this point because it used') && reason.includes('Learn more: https://nextjs.org/docs/messages/ppr-caught-error');\n}\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n    throw Object.defineProperty(new Error('Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n        value: \"E296\",\n        enumerable: false,\n        configurable: true\n    });\n}\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED';\nfunction createPrerenderInterruptedError(message) {\n    const error = Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n    error.digest = NEXT_PRERENDER_INTERRUPTED;\n    return error;\n}\nexport function isPrerenderInterruptedError(error) {\n    return typeof error === 'object' && error !== null && error.digest === NEXT_PRERENDER_INTERRUPTED && 'name' in error && 'message' in error && error instanceof Error;\n}\nexport function accessedDynamicData(dynamicAccesses) {\n    return dynamicAccesses.length > 0;\n}\nexport function consumeDynamicAccess(serverDynamic, clientDynamic) {\n    // We mutate because we only call this once we are no longer writing\n    // to the dynamicTrackingState and it's more efficient than creating a new\n    // array.\n    serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses);\n    return serverDynamic.dynamicAccesses;\n}\nexport function formatDynamicAPIAccesses(dynamicAccesses) {\n    return dynamicAccesses.filter((access)=>typeof access.stack === 'string' && access.stack.length > 0).map(({ expression, stack })=>{\n        stack = stack.split('\\n')// Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4).filter((line)=>{\n            // Exclude Next.js internals from the stack trace.\n            if (line.includes('node_modules/next/')) {\n                return false;\n            }\n            // Exclude anonymous functions from the stack trace.\n            if (line.includes(' (<anonymous>)')) {\n                return false;\n            }\n            // Exclude Node.js internals from the stack trace.\n            if (line.includes(' (node:')) {\n                return false;\n            }\n            return true;\n        }).join('\\n');\n        return `Dynamic API Usage Debug - ${expression}:\\n${stack}`;\n    });\n}\nfunction assertPostpone() {\n    if (!hasPostpone) {\n        throw Object.defineProperty(new Error(`Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`), \"__NEXT_ERROR_CODE\", {\n            value: \"E224\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */ export function createRenderInBrowserAbortSignal() {\n    const controller = new AbortController();\n    controller.abort(Object.defineProperty(new BailoutToCSRError('Render in Browser'), \"__NEXT_ERROR_CODE\", {\n        value: \"E721\",\n        enumerable: false,\n        configurable: true\n    }));\n    return controller.signal;\n}\n/**\n * In a prerender, we may end up with hanging Promises as inputs due them\n * stalling on connection() or because they're loading dynamic data. In that\n * case we need to abort the encoding of arguments since they'll never complete.\n */ export function createHangingInputAbortSignal(workUnitStore) {\n    switch(workUnitStore.type){\n        case 'prerender':\n        case 'prerender-runtime':\n            const controller = new AbortController();\n            if (workUnitStore.cacheSignal) {\n                // If we have a cacheSignal it means we're in a prospective render. If\n                // the input we're waiting on is coming from another cache, we do want\n                // to wait for it so that we can resolve this cache entry too.\n                workUnitStore.cacheSignal.inputReady().then(()=>{\n                    controller.abort();\n                });\n            } else {\n                // Otherwise we're in the final render and we should already have all\n                // our caches filled.\n                // If the prerender uses stages, we have wait until the runtime stage,\n                // at which point all runtime inputs will be resolved.\n                // (otherwise, a runtime prerender might consider `cookies()` hanging\n                //  even though they'd resolve in the next task.)\n                //\n                // We might still be waiting on some microtasks so we\n                // wait one tick before giving up. When we give up, we still want to\n                // render the content of this cache as deeply as we can so that we can\n                // suspend as deeply as possible in the tree or not at all if we don't\n                // end up waiting for the input.\n                const runtimeStagePromise = getRuntimeStagePromise(workUnitStore);\n                if (runtimeStagePromise) {\n                    runtimeStagePromise.then(()=>scheduleOnNextTick(()=>controller.abort()));\n                } else {\n                    scheduleOnNextTick(()=>controller.abort());\n                }\n            }\n            return controller.signal;\n        case 'prerender-client':\n        case 'prerender-ppr':\n        case 'prerender-legacy':\n        case 'request':\n        case 'cache':\n        case 'private-cache':\n        case 'unstable-cache':\n            return undefined;\n        default:\n            workUnitStore;\n    }\n}\nexport function annotateDynamicAccess(expression, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nexport function useDynamicRouteParams(expression) {\n    const workStore = workAsyncStorage.getStore();\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workStore && workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender-client':\n            case 'prerender':\n                {\n                    const fallbackParams = workUnitStore.fallbackRouteParams;\n                    if (fallbackParams && fallbackParams.size > 0) {\n                        // We are in a prerender with cacheComponents semantics. We are going to\n                        // hang here and never resolve. This will cause the currently\n                        // rendering component to effectively be a dynamic hole.\n                        React.use(makeHangingPromise(workUnitStore.renderSignal, workStore.route, expression));\n                    }\n                    break;\n                }\n            case 'prerender-ppr':\n                {\n                    const fallbackParams = workUnitStore.fallbackRouteParams;\n                    if (fallbackParams && fallbackParams.size > 0) {\n                        return postponeWithTracking(workStore.route, expression, workUnitStore.dynamicTracking);\n                    }\n                    break;\n                }\n            case 'prerender-runtime':\n                throw Object.defineProperty(new InvariantError(`\\`${expression}\\` was called during a runtime prerender. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E771\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'cache':\n            case 'private-cache':\n                throw Object.defineProperty(new InvariantError(`\\`${expression}\\` was called inside a cache scope. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E745\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-legacy':\n            case 'request':\n            case 'unstable-cache':\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n}\nexport function useDynamicSearchParams(expression) {\n    const workStore = workAsyncStorage.getStore();\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (!workStore) {\n        // We assume pages router context and just return\n        return;\n    }\n    if (!workUnitStore) {\n        throwForMissingRequestStore(expression);\n    }\n    switch(workUnitStore.type){\n        case 'prerender-client':\n            {\n                React.use(makeHangingPromise(workUnitStore.renderSignal, workStore.route, expression));\n                break;\n            }\n        case 'prerender-legacy':\n        case 'prerender-ppr':\n            {\n                if (workStore.forceStatic) {\n                    return;\n                }\n                throw Object.defineProperty(new BailoutToCSRError(expression), \"__NEXT_ERROR_CODE\", {\n                    value: \"E394\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        case 'prerender':\n        case 'prerender-runtime':\n            throw Object.defineProperty(new InvariantError(`\\`${expression}\\` was called from a Server Component. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E795\",\n                enumerable: false,\n                configurable: true\n            });\n        case 'cache':\n        case 'unstable-cache':\n        case 'private-cache':\n            throw Object.defineProperty(new InvariantError(`\\`${expression}\\` was called inside a cache scope. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E745\",\n                enumerable: false,\n                configurable: true\n            });\n        case 'request':\n            return;\n        default:\n            workUnitStore;\n    }\n}\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/;\n// Common implicit body tags that React will treat as body when placed directly in html\nconst bodyAndImplicitTags = 'body|div|main|section|article|aside|header|footer|nav|form|p|span|h1|h2|h3|h4|h5|h6';\n// Detects when RootLayoutBoundary (our framework marker component) appears\n// after Suspense in the component stack, indicating the root layout is wrapped\n// within a Suspense boundary. Ensures no body/html/implicit-body components are in between.\n//\n// Example matches:\n//   at Suspense (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\n//\n// Or with other components in between (but not body/html/implicit-body):\n//   at Suspense (<anonymous>)\n//   at SomeComponent (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\nconst hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex = new RegExp(`\\\\n\\\\s+at Suspense \\\\(<anonymous>\\\\)(?:(?!\\\\n\\\\s+at (?:${bodyAndImplicitTags}) \\\\(<anonymous>\\\\))[\\\\s\\\\S])*?\\\\n\\\\s+at ${ROOT_LAYOUT_BOUNDARY_NAME} \\\\([^\\\\n]*\\\\)`);\nconst hasMetadataRegex = new RegExp(`\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasViewportRegex = new RegExp(`\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`);\nexport function trackAllowedDynamicAccess(workStore, componentStack, dynamicValidation, clientDynamic) {\n    if (hasOutletRegex.test(componentStack)) {\n        // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n        return;\n    } else if (hasMetadataRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicMetadata = true;\n        return;\n    } else if (hasViewportRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicViewport = true;\n        return;\n    } else if (hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex.test(componentStack)) {\n        // For Suspense within body, the prelude wouldn't be empty so it wouldn't violate the empty static shells rule.\n        // But if you have Suspense above body, the prelude is empty but we allow that because having Suspense\n        // is an explicit signal from the user that they acknowledge the empty shell and want dynamic rendering.\n        dynamicValidation.hasAllowedDynamic = true;\n        dynamicValidation.hasSuspenseAboveBody = true;\n        return;\n    } else if (hasSuspenseRegex.test(componentStack)) {\n        // this error had a Suspense boundary above it so we don't need to report it as a source\n        // of disallowed\n        dynamicValidation.hasAllowedDynamic = true;\n        return;\n    } else if (clientDynamic.syncDynamicErrorWithStack) {\n        // This task was the task that called the sync error.\n        dynamicValidation.dynamicErrors.push(clientDynamic.syncDynamicErrorWithStack);\n        return;\n    } else {\n        const message = `Route \"${workStore.route}\": Uncached data was accessed outside of ` + '<Suspense>. This delays the entire page from rendering, resulting in a ' + 'slow user experience. Learn more: ' + 'https://nextjs.org/docs/messages/blocking-route';\n        const error = createErrorWithComponentOrOwnerStack(message, componentStack);\n        dynamicValidation.dynamicErrors.push(error);\n        return;\n    }\n}\n/**\n * In dev mode, we prefer using the owner stack, otherwise the provided\n * component stack is used.\n */ function createErrorWithComponentOrOwnerStack(message, componentStack) {\n    const ownerStack = process.env.NODE_ENV !== 'production' && React.captureOwnerStack ? React.captureOwnerStack() : null;\n    const error = Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n    error.stack = error.name + ': ' + message + (ownerStack ?? componentStack);\n    return error;\n}\nexport var PreludeState = /*#__PURE__*/ function(PreludeState) {\n    PreludeState[PreludeState[\"Full\"] = 0] = \"Full\";\n    PreludeState[PreludeState[\"Empty\"] = 1] = \"Empty\";\n    PreludeState[PreludeState[\"Errored\"] = 2] = \"Errored\";\n    return PreludeState;\n}({});\nexport function logDisallowedDynamicError(workStore, error) {\n    console.error(error);\n    if (!workStore.dev) {\n        if (workStore.hasReadableErrorStacks) {\n            console.error(`To get a more detailed stack trace and pinpoint the issue, start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.`);\n        } else {\n            console.error(`To get a more detailed stack trace and pinpoint the issue, try one of the following:\n  - Start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.\n  - Rerun the production build with \\`next build --debug-prerender\\` to generate better stack traces.`);\n        }\n    }\n}\nexport function throwIfDisallowedDynamic(workStore, prelude, dynamicValidation, serverDynamic) {\n    if (serverDynamic.syncDynamicErrorWithStack) {\n        logDisallowedDynamicError(workStore, serverDynamic.syncDynamicErrorWithStack);\n        throw new StaticGenBailoutError();\n    }\n    if (prelude !== 0) {\n        if (dynamicValidation.hasSuspenseAboveBody) {\n            // This route has opted into allowing fully dynamic rendering\n            // by including a Suspense boundary above the body. In this case\n            // a lack of a shell is not considered disallowed so we simply return\n            return;\n        }\n        // We didn't have any sync bailouts but there may be user code which\n        // blocked the root. We would have captured these during the prerender\n        // and can log them here and then terminate the build/validating render\n        const dynamicErrors = dynamicValidation.dynamicErrors;\n        if (dynamicErrors.length > 0) {\n            for(let i = 0; i < dynamicErrors.length; i++){\n                logDisallowedDynamicError(workStore, dynamicErrors[i]);\n            }\n            throw new StaticGenBailoutError();\n        }\n        // If we got this far then the only other thing that could be blocking\n        // the root is dynamic Viewport. If this is dynamic then\n        // you need to opt into that by adding a Suspense boundary above the body\n        // to indicate your are ok with fully dynamic rendering.\n        if (dynamicValidation.hasDynamicViewport) {\n            console.error(`Route \"${workStore.route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) without explicitly allowing fully dynamic rendering. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-viewport`);\n            throw new StaticGenBailoutError();\n        }\n        if (prelude === 1) {\n            // If we ever get this far then we messed up the tracking of invalid dynamic.\n            // We still adhere to the constraint that you must produce a shell but invite the\n            // user to report this as a bug in Next.js.\n            console.error(`Route \"${workStore.route}\" did not produce a static shell and Next.js was unable to determine a reason. This is a bug in Next.js.`);\n            throw new StaticGenBailoutError();\n        }\n    } else {\n        if (dynamicValidation.hasAllowedDynamic === false && dynamicValidation.hasDynamicMetadata) {\n            console.error(`Route \"${workStore.route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) when the rest of the route does not. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-metadata`);\n            throw new StaticGenBailoutError();\n        }\n    }\n}\nexport function delayUntilRuntimeStage(prerenderStore, result) {\n    if (prerenderStore.runtimeStagePromise) {\n        return prerenderStore.runtimeStagePromise.then(()=>result);\n    }\n    return result;\n}\n\n//# sourceMappingURL=dynamic-rendering.js.map"],"names":["normalizePathSep","path","replace","isAppRouteRoute","route","endsWith","DEFAULT_METADATA_ROUTE_EXTENSIONS","STATIC_METADATA_IMAGES","getExtensionRegexString","isMetadataPage","isMetadataRoute","isMetadataRouteFile","isStaticMetadataFile","isStaticMetadataRoute","icon","filename","extensions","apple","favicon","openGraph","twitter","staticExtensions","dynamicExtensions","result","length","join","appDirRelativePath","FAVICON_REGEX","ROBOTS_TXT_REGEX","MANIFEST_JSON_REGEX","MANIFEST_WEBMANIFEST_REGEX","SITEMAP_XML_REGEX","compiledRegexCache","Map","fastPathCheck","normalizedPath","test","includes","getCompiledRegexes","pageExtensions","strictlyMatchExtensions","cacheKey","cached","get","trailingMatcher","variantsMatcher","groupSuffix","suffixMatcher","robotsExts","manifestExts","regexes","RegExp","set","fastResult","i","pathname","matched","page","normalizeAppPath","process","env","NEXT_RUNTIME","require","module","exports","normalizeLocalePath","cache","WeakMap","locales","lowercasedLocales","map","locale","toLowerCase","detectedLocale","segments","split","segment","index","indexOf","slice","getPathMatch","options","keys","regexp","pathToRegexp","delimiter","sensitive","strict","matcher","regexpToFunction","regexModifier","source","flags","params","match","removeUnnamedParams","key","name","ACTION_SUFFIX","APP_DIR_ALIAS","CACHE_ONE_YEAR","DOT_NEXT_ALIAS","ESLINT_DEFAULT_DIRS","GSP_NO_RETURNED_VALUE","GSSP_COMPONENT_MEMBER_ERROR","GSSP_NO_RETURNED_VALUE","HTML_CONTENT_TYPE_HEADER","INFINITE_CACHE","INSTRUMENTATION_HOOK_FILENAME","JSON_CONTENT_TYPE_HEADER","MATCHED_PATH_HEADER","MIDDLEWARE_FILENAME","MIDDLEWARE_LOCATION_REGEXP","NEXT_BODY_SUFFIX","NEXT_CACHE_IMPLICIT_TAG_ID","NEXT_CACHE_REVALIDATED_TAGS_HEADER","NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER","NEXT_CACHE_SOFT_TAG_MAX_LENGTH","NEXT_CACHE_TAGS_HEADER","NEXT_CACHE_TAG_MAX_ITEMS","NEXT_CACHE_TAG_MAX_LENGTH","NEXT_DATA_SUFFIX","NEXT_INTERCEPTION_MARKER_PREFIX","NEXT_META_SUFFIX","NEXT_QUERY_PARAM_PREFIX","NEXT_RESUME_HEADER","NON_STANDARD_NODE_ENV","PAGES_DIR_ALIAS","PRERENDER_REVALIDATE_HEADER","PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER","PROXY_FILENAME","PROXY_LOCATION_REGEXP","PUBLIC_DIR_MIDDLEWARE_CONFLICT","ROOT_DIR_ALIAS","RSC_ACTION_CLIENT_WRAPPER_ALIAS","RSC_ACTION_ENCRYPTION_ALIAS","RSC_ACTION_PROXY_ALIAS","RSC_ACTION_VALIDATE_ALIAS","RSC_CACHE_WRAPPER_ALIAS","RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS","RSC_MOD_REF_PROXY_ALIAS","RSC_PREFETCH_SUFFIX","RSC_SEGMENTS_DIR_SUFFIX","RSC_SEGMENT_SUFFIX","RSC_SUFFIX","SERVER_PROPS_EXPORT_ERROR","SERVER_PROPS_GET_INIT_PROPS_CONFLICT","SERVER_PROPS_SSG_CONFLICT","SERVER_RUNTIME","SSG_FALLBACK_EXPORT_ERROR","SSG_GET_INITIAL_PROPS_CONFLICT","STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR","TEXT_PLAIN_CONTENT_TYPE_HEADER","UNSTABLE_REVALIDATE_RENAME_ERROR","WEBPACK_LAYERS","WEBPACK_RESOURCE_QUERIES","WEB_SOCKET_MAX_RECONNECTIONS","edge","experimentalEdge","nodejs","WEBPACK_LAYERS_NAMES","shared","reactServerComponents","serverSideRendering","actionBrowser","apiNode","apiEdge","middleware","instrument","edgeAsset","appPagesBrowser","pagesDirBrowser","pagesDirEdge","pagesDirNode","GROUP","builtinReact","serverOnly","neutralTarget","clientOnly","bundled","appPages","edgeSSREntry","metadata","metadataRoute","metadataImageMeta","INTERCEPTION_ROUTE_MARKERS","extractInterceptionRouteInformation","isInterceptionRouteAppPath","find","m","startsWith","undefined","interceptingRoute","marker","interceptedRoute","Error","concat","splitInterceptingRoute","escapeStringRegexp","reHasRegExp","reReplaceRegExp","str","removeTrailingSlash","parseLoaderTree","tree","parallelRoutes","modules","layout","template","DEFAULT_SEGMENT_KEY","defaultPage","conventionPath","getParamProperties","getSegmentParam","isCatchAll","interceptionMarker","type","param","paramType","repeat","optional","PARAMETER_PATTERN","getDynamicParam","interpolateParallelRouteParams","parseMatchedParameter","parseParameter","getParamValue","interpolatedParams","segmentKey","fallbackRouteParams","value","has","searchValue","Array","isArray","encodeURIComponent","loaderTree","pagePath","interpolated","structuredClone","stack","depth","pathSegments","pop","segmentParam","hasOwnProperty","remainingSegments","processedSegments","flatMap","pathSegment","filter","s","nextDepth","isRouteGroup","Object","values","push","dynamicParamType","treeSegment","InvariantError","getNamedMiddlewareRegex","getNamedRouteRegex","getRouteRegex","getParametrizedRoute","includeSuffix","includePrefix","groups","groupIndex","markerMatch","paramMatches","pos","substring","parameterizedRoute","normalizedRoute","excludeOptionalTrailingSlash","re","buildGetSafeRouteKey","routeKey","j","String","fromCharCode","Math","floor","getSafeKeyFromSegment","getSafeRouteKey","routeKeys","keyPrefix","backreferenceDuplicateKeys","cleanedKey","invalidKey","isNaN","parseInt","duplicateKey","interceptionPrefix","pattern","getNamedParametrizedRoute","prefixRouteKeys","reference","names","intercepted","inverseParts","hasInterceptionMarker","some","namedParameterizedRoute","pathToRegexpPattern","namedRegex","catchAll","catchAllRegex","catchAllGroupedRegex","DecodeError","MiddlewareNotFoundError","MissingStaticPage","NormalizeError","PageNotFoundError","SP","ST","WEB_VITALS","execOnce","getDisplayName","getLocationOrigin","getURL","isAbsoluteUrl","isResSent","loadGetInitialProps","normalizeRepeatedSlashes","stringifyError","fn","used","args","ABSOLUTE_URL_REGEX","url","protocol","hostname","port","window","location","href","origin","Component","displayName","res","finished","headersSent","urlParts","urlNoQuery","App","ctx","NODE_ENV","prototype","getInitialProps","message","pageProps","props","console","warn","performance","every","method","constructor","code","error","JSON","stringify","PARAM_SEPARATOR","hasAdjacentParameterIssues","normalizeAdjacentParameters","normalizeTokensForRegexp","stripNormalizedSeparators","stripParameterSeparators","normalized","tokens","token","modifier","prefix","suffix","cleaned","entries","item","safeCompile","safePathToRegexp","safeRegexpToFunction","safeRouteMatcher","needsNormalization","routeToUse","retryError","compiler","compile","originalMatcher","matcherFn","getRouteMatcher","rawMatcher","routeMatch","exec","decode","decodeURIComponent","group","entry","assign","searchParamsToUrlQuery","urlQueryToSearchParams","searchParams","query","existing","stringifyUrlQueryParam","URLSearchParams","append","target","searchParamsList","delete","parseRelativeUrl","base","parseQuery","globalBase","URL","resolvedBase","search","hash","slashes","parseUrl","parsedURL","getCookieParser","headers","parseCookie","cookie","parse","parseCookieFn","compileNonPath","matchHas","parseDestination","prepareDestination","getSafeParamName","paramName","newParamName","charCode","charCodeAt","escapeSegment","segmentName","unescapeSegments","req","missing","hasMatch","hasItem","cookies","host","matches","forEach","groupKey","allMatch","validate","escaped","destination","parsed","parsedDestination","destHostname","destQuery","destSearch","destPath","destParams","destPathParamKeys","destHostnameParamKeys","destPathCompiler","destHostnameCompiler","strOrArray","paramKeys","appendParamsToQuery","newUrl","err","fromNodeOutgoingHttpHeaders","normalizeNextQueryParam","splitCookiesString","toNodeOutgoingHttpHeaders","validateURL","nodeHeaders","Headers","v","toString","cookiesString","cookiesStrings","start","ch","lastComma","nextStart","cookiesSeparatorFound","skipWhitespace","charAt","notSpecialChar","cause","prefixes","decodeQueryPathParameter","isFullStringUrl","parseReqUrl","stripNextRscUnionQuery","DUMMY_ORIGIN","parsedUrl","getAll","legacyUrl","auth","relativeUrl","urlInstance","NEXT_RSC_UNION_QUERY","formatUrl","formatWithValidation","urlObjectKeys","slashedProtocols","urlObj","querystring","getPreviouslyRevalidatedTags","getServerUtils","interpolateDynamicPath","normalizeCdnUrl","normalizeDynamicRouteParams","filterInternalQuery","isNextQueryPrefix","isNextInterceptionMarkerPrefix","_parsedUrl","defaultRouteRegex","builtParam","paramValue","replaceAll","defaultRouteMatches","ignoreMissingOptional","hasValidParams","normalizeRscURL","defaultValue","isOptional","isDefaultValue","defaultVal","val","i18n","basePath","rewrites","pageIsDynamic","trailingSlash","caseSensitive","dynamicRouteMatcher","handleRewrites","rewrittenParsedUrl","rewriteParams","fsPathname","matchesPage","fsPathnameNoSlash","checkRewrite","rewrite","hasParams","nextInternalLocale","dynamicParams","beforeFiles","afterFiles","fallback","getParamsFromRouteMatches","routeMatchesHeader","obj","fromEntries","normalizedKey","keyName","routeMatches","normalizeQueryParams","routeParamKeys","add","previewModeId","fillMetadataSegment","normalizeMetadataPageToRoute","normalizeMetadataRoute","getMetadataRouteSuffix","parentPathname","dirname","seg","isGroupSegment","isParallelRouteSegment","djb2Hash","lastSegment","routeRegex","ext","posix","routeSuffix","dir","baseName","isDynamic","isRoute","routePagePath","metadataRouteExtension","mapped","vendored","ReactServerDOMTurbopackStatic","ACTION_SERVER_PATCH","React","Activity","useContext","use","startTransition","Suspense","useDeferredValue","ReactDOM","LayoutRouterContext","GlobalLayoutRouterContext","TemplateContext","fetchServerResponse","unresolvedThenable","ErrorBoundary","matchSegment","disableSmoothScrollDuringRouteTransition","RedirectBoundary","HTTPAccessFallbackBoundary","createRouterCacheKey","hasInterceptionRouteInCurrentTree","dispatchAppRouterAction","useRouterBFCache","NavigationPromisesContext","getParamValueFromCacheKey","walkAddRefetch","segmentPathToWalk","treeToRecreate","parallelRouteKey","isLast","subTree","__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","findDOMNode","instance","internal_reactDOMfindDOMNode","rectProperties","shouldSkipElement","element","getComputedStyle","position","rect","getBoundingClientRect","topOfElementInViewport","viewportHeight","top","getHashFragmentDomNode","hashFragment","document","body","getElementById","getElementsByName","InnerScrollAndFocusHandler","componentDidMount","handlePotentialScroll","componentDidUpdate","focusAndScrollRef","apply","render","children","segmentPath","segmentPaths","scrollRefSegmentPath","domNode","Element","HTMLElement","parentElement","localName","nextElementSibling","scrollIntoView","htmlElement","documentElement","clientHeight","scrollTop","dontForceLayout","onlyHashChange","focus","ScrollAndFocusHandler","context","InnerLayoutRouter","debugNameContext","cacheNode","isActive","parentNavPromises","fullTree","resolvedPrefetchRsc","prefetchRsc","rsc","resolvedRsc","then","lazyData","refetchTree","includeNextUrl","navigatedAt","Date","now","flightRouterState","nextUrl","previousNextUrl","serverResponse","previousTree","content","navigationPromises","createNestedLayoutNavigationPromises","Provider","subtree","parentTree","parentCacheNode","parentSegmentPath","parentParams","LoadingBoundary","loading","loadingModuleData","promiseForLoading","loadingRsc","loadingStyles","loadingScripts","OuterLayoutRouter","parallelRouterKey","errorStyles","errorScripts","templateStyles","templateScripts","notFound","forbidden","unauthorized","segmentViewBoundaries","parentParallelRoutes","segmentMap","parentTreeSegment","activeTree","activeSegment","activeStateKey","bfcacheEntry","stateKey","newLazyCacheNode","head","prefetchHead","segmentBoundaryTriggerNode","segmentViewStateNode","SegmentBoundaryTriggerNode","SegmentViewStateNode","pagePrefix","paramCacheKey","debugName","getBoundaryDebugNameFromSegment","childDebugNameContext","isVirtual","debugNameToDisplay","child","errorComponent","SegmentStateProvider","__NEXT_CACHE_COMPONENTS","mode","next","isVirtualLayout","RenderFromTemplateContext","urlSearchParamsToParsedUrlQuery","SearchParamsContext","ClientPageRoot","serverProvidedParams","layoutRouterContext","workAsyncStorage","clientSearchParams","clientParams","store","getStore","createSearchParamsFromClient","createParamsFromClient","createRenderSearchParamsFromClient","createRenderParamsFromClient","ClientSegmentRoot","slots","useUntrackedPathname","HTTPAccessErrorStatus","getAccessFallbackHTTPStatus","getAccessFallbackErrorTypeByStatus","isHTTPAccessFallbackError","warnOnce","MissingSlotContext","HTTPAccessFallbackErrorBoundary","state","triggeredStatus","previousPathname","componentDidCatch","missingSlots","size","warningMessage","formattedSlots","from","sort","a","b","localeCompare","slot","getDerivedStateFromError","httpStatus","getDerivedStateFromProps","errorComponents","NOT_FOUND","FORBIDDEN","UNAUTHORIZED","isNotFound","isForbidden","isUnauthorized","meta","hasErrorFallback","IconMark","METADATA_BOUNDARY_NAME","VIEWPORT_BOUNDARY_NAME","OUTLET_BOUNDARY_NAME","ROOT_LAYOUT_BOUNDARY_NAME","NameSpace","MetadataBoundary","ViewportBoundary","OutletBoundary","RootLayoutBoundary"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,35,37,39,41,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98]}