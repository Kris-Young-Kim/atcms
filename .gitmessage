# AT-CMP 커밋 메시지 템플릿

**프로젝트 코드**: ATCMP-2026  
**사용 방법**: `.gitmessage` 파일을 프로젝트 루트에 저장하고 다음 명령 실행  
`git config commit.template .gitmessage`

---

## 커밋 메시지 형식

```
[TYPE] ATCMP-XXX: 간단한 설명

상세 설명 (옵션)

- 변경 사항 1
- 변경 사항 2
```

---

## TYPE 종류

- **feat**: 새로운 기능 추가
- **fix**: 버그 수정
- **refactor**: 코드 리팩토링
- **docs**: 문서 수정
- **test**: 테스트 추가/수정
- **style**: 코드 포맷팅, 세미콜론 누락 등 (기능 변경 없음)
- **chore**: 빌드 업무 수정, 패키지 매니저 설정 등
- **perf**: 성능 개선
- **ci**: CI 설정 변경
- **build**: 빌드 시스템 변경
- **revert**: 이전 커밋 되돌리기

---

## 예시

### 기능 추가
```
feat ATCMP-101: 대상자 등록 API 구현

- POST /api/clients 엔드포인트 추가
- Zod 검증 스키마 구현
- Supabase RLS 정책 적용
- Jest 테스트 작성
```

### 버그 수정
```
fix ATCMP-201: API 에러 핸들링 개선

- 500 에러 발생 시 적절한 에러 메시지 반환
- 감사 로그 기록 추가
```

### 리팩토링
```
refactor ATCMP-301: 클라이언트 폼 컴포넌트 리팩토링

- React Hook Form으로 마이그레이션
- 검증 로직 분리
- 타입 안정성 개선
```

### 문서 수정
```
docs ATCMP-401: Git Flow 가이드 문서 작성

- 브랜치 전략 문서화
- 워크플로우 가이드 추가
```

---

## 커밋 메시지 작성 가이드

1. **제목**: 50자 이내로 간결하게 작성
2. **본문**: 변경 이유와 방법 설명 (72자 단위로 줄바꿈)
3. **이슈 번호**: 가능한 경우 이슈 번호 포함
4. **불필요한 메시지**: "수정", "업데이트" 등은 피하기

---

## 금지 사항

- ❌ "수정했습니다", "업데이트했습니다" 같은 모호한 메시지
- ❌ 이슈 번호 없이 작업 내용만 작성
- ❌ 과도하게 긴 커밋 메시지
- ❌ 이모지 남용 (간단한 이모지는 허용)

---

## 참고 자료

- [PROJECT_MANAGEMENT_SYSTEM.md](../PROJECT_MANAGEMENT_SYSTEM.md)
- [git-flow-guide.md](./git-flow-guide.md)

